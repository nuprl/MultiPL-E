{
  "name": "mbpp_100_next_smallest_palindrome",
  "language": "js",
  "prompt": "//Write a function to find the next smallest palindrome of a specified integer, returned as an integer.\nfunction next_smallest_palindrome(num){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_100_next_smallest_palindrome.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_smallest_palindrome;\n  assert.deepEqual(candidate(99),101);\n  assert.deepEqual(candidate(1221),1331);\n  assert.deepEqual(candidate(120),121);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid = Math.floor(num_len/2);\n    let left = num_str.substring(0, mid);\n    let right = num_str.substring(mid + num_len % 2);\n    let right_rev = right.split('').reverse().join('');\n    let left_int = parseInt(left);\n    let right_int = parseInt(right_rev);\n    let next_palindrome = 0;\n    if(left_int === right_int){\n        next_palindrome = parseInt(left + right_rev);\n    }\n    else if(left_int < right_int){\n        next_palindrome = parseInt(left + right_rev);\n    }\n    else if(left_int > right_int){\n        let next_left = (left_int + 1).toString();\n        let next_left_len = next_left.length;\n        let next_mid = Math.floor(next_left_len/2);\n        let next_right = next_left.substring(next_mid + next_left_len % 2);\n        let next_right_rev = next_right.split('').reverse().join('');\n        next_palindrome = parseInt(next_left + next_right_rev);\n    }\n    return next_palindrome;\n}\n",
    "  var num_str = num.toString();\n  var num_arr = num_str.split('');\n  var num_len = num_arr.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_arr.slice(0,num_half);\n  var num_right = num_arr.slice(num_half,num_len);\n  var num_left_rev = num_left.slice().reverse();\n  var num_right_rev = num_right.slice().reverse();\n  var num_left_rev_str = num_left_rev.join('');\n  var num_right_rev_str = num_right_rev.join('');\n  var num_left_rev_int = parseInt(num_left_rev_str);\n  var num_right_rev_int = parseInt(num_right_rev_str);\n  var num_left_int = parseInt(num_left.join(''));\n  var num_right_int = parseInt(num_right.join(''));\n  var num_left_rev_int_str = num_left_rev_int.toString();\n  var num_right_rev_int_str = num_right_rev_int.toString();\n  var num_left_rev_int_arr = num_left_rev_int_str.split('');\n  var num_right_rev_int_arr = num_right_rev_int_str.split('');\n  var num_left_rev_int_len = num_left_rev_int_arr.length;\n  var num_right_rev_int_len = num_right_rev_int_arr.length;\n  var num_left_rev_int_half = Math.floor(num_left_rev_int_len/2);\n  var num_right_rev_int_half = Math.floor(num_right_rev_int_len/2);\n  var num_left_rev_int_left = num_left_rev_int_arr.slice(0,num_left_rev_int_half);\n  var num_right_rev",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var num_str_half_len = Math.floor(num_str_len / 2);\n  var num_str_half = num_str.slice(0, num_str_half_len);\n  var num_str_half_rev = num_str_half.split(\"\").reverse().join(\"\");\n  var num_str_half_rev_int = parseInt(num_str_half_rev);\n  var num_str_half_int = parseInt(num_str_half);\n  var num_str_half_rev_int_next = num_str_half_rev_int + 1;\n  var num_str_half_rev_int_next_str = num_str_half_rev_int_next.toString();\n  var num_str_half_rev_int_next_str_len = num_str_half_rev_int_next_str.length;\n  var num_str_half_rev_int_next_str_len_diff = num_str_half_len - num_str_half_rev_int_next_str_len;\n  var num_str_half_rev_int_next_str_len_diff_str = \"\";\n  for(var i = 0; i < num_str_half_rev_int_next_str_len_diff; i++){\n    num_str_half_rev_int_next_str_len_diff_str += \"0\";\n  }\n  var num_str_half_rev_int_next_str_len_diff_str_full = num_str_half_rev_int_next_str_len_diff_str + num_str_half_rev_int_next_str;\n  var num_str_half_rev_int_next_str_len_diff_str_full_int = parseInt(num_str_half_rev_int_next_str_len_diff_str_full);\n  if(num_str_half_rev_int_next_str_len_diff_str_full_int < num_str_half",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_arr = num_str.split('');\n    var num_arr_rev = num_str.split('').reverse();\n    var num_arr_rev_str = num_arr_rev.join('');\n    var num_arr_rev_int = parseInt(num_arr_rev_str);\n    var num_arr_rev_int_str = num_arr_rev_int.toString();\n    var num_arr_rev_int_len = num_arr_rev_int_str.length;\n    var num_arr_rev_int_arr = num_arr_rev_int_str.split('');\n    var num_arr_rev_int_arr_rev = num_arr_rev_int_str.split('').reverse();\n    var num_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev.join('');\n    var num_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_str);\n    var num_arr_rev_int_arr_rev_int_str = num_arr_rev_int_arr_rev_int.toString();\n    var num_arr_rev_int_arr_rev_int_len = num_arr_rev_int_arr_rev_int_str.length;\n    var num_arr_rev_int_arr_rev_int_arr = num_arr_rev_int_arr_rev_int_str.split('');\n    var num_arr_rev_int_arr_rev_int_arr_rev = num_arr_rev_int_arr_rev_int_str.split('').reverse();\n    var num_arr_rev_int_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev_int_arr_rev.join('');\n    var num_arr_rev_int_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.slice(0,num_half);\n  var num_right = num_str.slice(num_half+num_len%2);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  var num_left_rev_num = parseInt(num_left_rev);\n  var num_right_rev_num = parseInt(num_right_rev);\n  var num_left_num = parseInt(num_left);\n  var num_right_num = parseInt(num_right);\n  var num_left_rev_num_plus_one = num_left_rev_num+1;\n  var num_left_rev_num_plus_one_str = num_left_rev_num_plus_one.toString();\n  var num_left_rev_num_plus_one_str_len = num_left_rev_num_plus_one_str.length;\n  var num_left_rev_num_plus_one_str_half = Math.floor(num_left_rev_num_plus_one_str_len/2);\n  var num_left_rev_num_plus_one_str_left = num_left_rev_num_plus_one_str.slice(0,num_left_rev_num_plus_one_str_half);\n  var num_left_rev_num_plus_one_str_right = num_left_rev_num_plus_one_str.slice(num_left_rev_num_plus_one_str_half+num_left_rev_num_plus_one_str_len%2);\n  var num_left_rev_num_plus_one_str_left_rev = num_left_rev_num_plus_one_str_left.split(\"\").reverse().join(\"\");\n  var num_left_rev_num_plus_one",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len/2);\n    var num_half_str = num_str.slice(0,num_half);\n    var num_half_rev = num_half_str.split(\"\").reverse().join(\"\");\n    var num_half_rev_int = parseInt(num_half_rev);\n    var num_half_int = parseInt(num_half_str);\n    var num_half_rev_int_plus_one = num_half_rev_int + 1;\n    var num_half_rev_plus_one = num_half_rev_int_plus_one.toString();\n    var num_half_rev_plus_one_rev = num_half_rev_plus_one.split(\"\").reverse().join(\"\");\n    var num_half_rev_plus_one_rev_int = parseInt(num_half_rev_plus_one_rev);\n    var num_half_rev_plus_one_rev_int_plus_one = num_half_rev_plus_one_rev_int + 1;\n    var num_half_rev_plus_one_rev_int_plus_one_str = num_half_rev_plus_one_rev_int_plus_one.toString();\n    var num_half_rev_plus_one_rev_int_plus_one_str_rev = num_half_rev_plus_one_rev_int_plus_one_str.split(\"\").reverse().join(\"\");\n    var num_half_rev_plus_one_rev_int_plus_one_str_rev_int = parseInt(num_half_rev_plus_one_rev_int_plus_one_str_rev);\n    var num_half_rev_plus_one_rev_int_plus_one_str_rev_int_plus_one = num_half_rev_plus_one_rev_int_plus_one_str_rev_int + 1;\n    var num_half_rev_plus_one_rev_int_plus_one_str_rev_int_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_half_str = num_str.slice(0,num_half);\n  var num_half_rev = num_half_str.split(\"\").reverse().join(\"\");\n  var num_half_rev_int = parseInt(num_half_rev);\n  var num_half_int = parseInt(num_half_str);\n  var num_half_rev_int_str = num_half_rev_int.toString();\n  var num_half_int_str = num_half_int.toString();\n  var num_half_rev_int_len = num_half_rev_int_str.length;\n  var num_half_int_len = num_half_int_str.length;\n  var num_half_rev_int_str_half = num_half_rev_int_str.slice(0,num_half_rev_int_len-1);\n  var num_half_int_str_half = num_half_int_str.slice(0,num_half_int_len-1);\n  var num_half_rev_int_str_half_int = parseInt(num_half_rev_int_str_half);\n  var num_half_int_str_half_int = parseInt(num_half_int_str_half);\n  var num_half_rev_int_str_half_int_str = num_half_rev_int_str_half_int.toString();\n  var num_half_int_str_half_int_str = num_half_int_str_half_int.toString();\n  var num_half_rev_int_str_half_int_str_half = num_half_rev_int_str_half_int_str.slice(0,num_half_rev_int_str_half_int_str.length-1);\n  var num_half_int_str_half_int_str_half = num_half_int_str_half_int_str.",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len / 2);\n  var num_left = num_str.substring(0, num_half);\n  var num_right = num_str.substring(num_len - num_half, num_len);\n  var num_left_rev = num_left.split('').reverse().join('');\n  var num_right_rev = num_right.split('').reverse().join('');\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_rev_int = parseInt(num_right_rev);\n  var num_left_rev_str = num_left_rev_int.toString();\n  var num_right_rev_str = num_right_rev_int.toString();\n  var num_left_rev_len = num_left_rev_str.length;\n  var num_right_rev_len = num_right_rev_str.length;\n  var num_left_rev_half = Math.floor(num_left_rev_len / 2);\n  var num_right_rev_half = Math.floor(num_right_rev_len / 2);\n  var num_left_rev_left = num_left_rev_str.substring(0, num_left_rev_half);\n  var num_left_rev_right = num_left_rev_str.substring(num_left_rev_len - num_left_rev_half, num_left_rev_len);\n  var num_right_rev_left = num_right_rev_str.substring(0, num_right_rev_half);\n  var num_right_rev_right = num_right_rev_str.substring(num_right_rev_len - num_right_rev_half, num_right_rev_len);\n  var num_left_rev_left_int = parse",
    "  var num_str = num.toString();\n  var len = num_str.length;\n  var num_arr = num_str.split('');\n  var left = Math.floor(len/2);\n  var right = Math.ceil(len/2);\n  var left_arr = num_arr.slice(0,left);\n  var right_arr = num_arr.slice(right);\n  var left_str = left_arr.join('');\n  var right_str = right_arr.join('');\n  var left_num = parseInt(left_str);\n  var right_num = parseInt(right_str);\n  if(left_num > right_num){\n    return parseInt(left_str + left_str.split('').reverse().join(''));\n  }\n  else{\n    var new_left_num = left_num + 1;\n    var new_left_str = new_left_num.toString();\n    return parseInt(new_left_str + new_left_str.split('').reverse().join(''));\n  }\n}\n",
    "  var num_str = num.toString();\n  var len = num_str.length;\n  var left = Math.floor(len/2);\n  var right = len % 2 === 0 ? left : left + 1;\n  var left_str = num_str.substring(0, left);\n  var right_str = num_str.substring(right);\n  var left_num = parseInt(left_str);\n  var right_num = parseInt(right_str);\n  if(left_num === right_num){\n    left_num++;\n    left_str = left_num.toString();\n    right_str = left_str.split('').reverse().join('');\n    return parseInt(left_str + right_str);\n  }\n  else if(left_num < right_num){\n    left_str = left_num.toString();\n    right_str = left_str.split('').reverse().join('');\n    return parseInt(left_str + right_str);\n  }\n  else{\n    left_num++;\n    left_str = left_num.toString();\n    right_str = left_str.split('').reverse().join('');\n    return parseInt(left_str + right_str);\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var mid_index = Math.floor(num_len/2);\n  var left_index = mid_index - 1;\n  var right_index = (num_len % 2) ? mid_index + 1 : mid_index;\n  var left_half = num_arr.slice(0, mid_index);\n  var right_half = num_arr.slice(right_index).reverse();\n  var left_half_str = left_half.join('');\n  var right_half_str = right_half.join('');\n  var left_half_int = parseInt(left_half_str);\n  var right_half_int = parseInt(right_half_str);\n  if(left_half_int < right_half_int){\n    var new_num_str = left_half_str + num_arr[mid_index] + left_half_str.split('').reverse().join('');\n    return parseInt(new_num_str);\n  }\n  else{\n    var new_num_str = (left_half_int + 1).toString() + num_arr[mid_index] + (left_half_int + 1).toString().split('').reverse().join('');\n    return parseInt(new_num_str);\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var mid = Math.floor(num_len/2);\n  var left_half = num_str.slice(0, mid);\n  var right_half = num_str.slice(mid + num_len % 2);\n  var right_half_rev = right_half.split('').reverse().join('');\n  if(left_half < right_half_rev){\n    return parseInt(left_half + num_str[mid] + right_half_rev);\n  }\n  else{\n    var left_half_int = parseInt(left_half);\n    var left_half_int_plus = left_half_int + 1;\n    var left_half_plus = left_half_int_plus.toString();\n    var left_half_plus_len = left_half_plus.length;\n    var left_half_plus_mid = Math.floor(left_half_plus_len/2);\n    var left_half_plus_right_half = left_half_plus.slice(left_half_plus_mid + left_half_plus_len % 2);\n    var left_half_plus_right_half_rev = left_half_plus_right_half.split('').reverse().join('');\n    return parseInt(left_half_plus + '0' + left_half_plus_right_half_rev);\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var mid = Math.floor(num_len/2);\n  var left = num_str.substr(0,mid);\n  var right = num_str.substr(mid+1);\n  var left_rev = left.split('').reverse().join('');\n  var right_rev = right.split('').reverse().join('');\n  var left_num = parseInt(left);\n  var right_num = parseInt(right);\n  var left_rev_num = parseInt(left_rev);\n  var right_rev_num = parseInt(right_rev);\n  if(left_num == left_rev_num && right_num == right_rev_num){\n    if(num_len % 2 == 0){\n      return parseInt(left+right);\n    }else{\n      return parseInt(left+num_str[mid]+right);\n    }\n  }else{\n    if(left_num < left_rev_num){\n      left_num++;\n      left = left_num.toString();\n      left_rev = left.split('').reverse().join('');\n    }\n    if(right_num < right_rev_num){\n      right_num++;\n      right = right_num.toString();\n      right_rev = right.split('').reverse().join('');\n    }\n    if(num_len % 2 == 0){\n      return parseInt(left+right);\n    }else{\n      return parseInt(left+num_str[mid]+right);\n    }\n  }\n}\n",
    "    var num_str = num.toString();\n    var num_arr = num_str.split('');\n    var num_len = num_arr.length;\n    var num_half = Math.floor(num_len/2);\n    var num_left = num_arr.slice(0, num_half);\n    var num_right = num_arr.slice(num_half + num_len % 2, num_len);\n    var num_left_rev = num_left.slice().reverse();\n    var num_right_rev = num_right.slice().reverse();\n    var num_left_rev_str = num_left_rev.join('');\n    var num_right_rev_str = num_right_rev.join('');\n    var num_left_rev_int = parseInt(num_left_rev_str);\n    var num_right_rev_int = parseInt(num_right_rev_str);\n    var num_left_int = parseInt(num_left.join(''));\n    var num_right_int = parseInt(num_right.join(''));\n    var num_left_rev_int_next = num_left_rev_int + 1;\n    var num_left_rev_int_next_str = num_left_rev_int_next.toString();\n    var num_left_rev_int_next_arr = num_left_rev_int_next_str.split('');\n    var num_left_rev_int_next_arr_rev = num_left_rev_int_next_arr.slice().reverse();\n    var num_left_rev_int_next_arr_rev_str = num_left_rev_int_next_arr_rev.join('');\n    var num_left_rev_int_next_arr_rev_int = parseInt(num_left_rev_int_next_arr_rev_str);\n    var num_left_rev_int_next_arr_rev_int_next = num_left_rev_int_next_arr_rev_int + 1;\n    var num_left_rev_int_next_arr_rev_int_next",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var mid_index = Math.floor(num_len/2);\n    var left_half = num_str.substring(0, mid_index);\n    var right_half = num_str.substring(mid_index + num_len % 2, num_len);\n    var right_half_rev = right_half.split(\"\").reverse().join(\"\");\n    if(left_half < right_half_rev){\n        return parseInt(left_half + right_half_rev);\n    }\n    else{\n        var left_half_int = parseInt(left_half);\n        var left_half_int_plus_1 = left_half_int + 1;\n        var left_half_plus_1 = left_half_int_plus_1.toString();\n        var left_half_plus_1_len = left_half_plus_1.length;\n        var left_half_plus_1_mid_index = Math.floor(left_half_plus_1_len/2);\n        var left_half_plus_1_left_half = left_half_plus_1.substring(0, left_half_plus_1_mid_index);\n        var left_half_plus_1_right_half = left_half_plus_1.substring(left_half_plus_1_mid_index + left_half_plus_1_len % 2, left_half_plus_1_len);\n        var left_half_plus_1_right_half_rev = left_half_plus_1_right_half.split(\"\").reverse().join(\"\");\n        return parseInt(left_half_plus_1_left_half + left_half_plus_1_right_half_rev);\n    }\n}\n",
    "  var str = num.toString();\n  var len = str.length;\n  var mid = Math.floor(len/2);\n  var left = str.substr(0, mid);\n  var right = str.substr(mid + len % 2, mid);\n  var next_palindrome = parseInt(left + (len % 2 ? str[mid] : '') + reverse(left));\n  if(next_palindrome > num){\n    return next_palindrome;\n  }\n  if(len % 2 && str[mid] < '9'){\n    return parseInt(left + (parseInt(str[mid]) + 1) + reverse(left));\n  }\n  if(len % 2){\n    left = (parseInt(left) + 1).toString();\n    mid = Math.floor(left.length/2);\n    return parseInt(left + reverse(left.substr(0, mid)));\n  }\n  return next_smallest_palindrome(parseInt(left + reverse(left)) + 1);\n}\n",
    "    //check if num is a palindrome\n    if(is_palindrome(num)){\n        //if it is, add 1 to num and check if that is a palindrome\n        num += 1;\n        if(is_palindrome(num)){\n            //if it is, return that number\n            return num;\n        }\n        else{\n            //if it isn't, add 1 to num and check if that is a palindrome\n            num += 1;\n            if(is_palindrome(num)){\n                //if it is, return that number\n                return num;\n            }\n            else{\n                //if it isn't, add 1 to num and check if that is a palindrome\n                num += 1;\n                if(is_palindrome(num)){\n                    //if it is, return that number\n                    return num;\n                }\n                else{\n                    //if it isn't, add 1 to num and check if that is a palindrome\n                    num += 1;\n                    if(is_palindrome(num)){\n                        //if it is, return that number\n                        return num;\n                    }\n                    else{\n                        //if it isn't, add 1 to num and check if that is a palindrome\n                        num += 1;\n                        if(is_palindrome(num)){\n                            //if it is, return that number\n                            return num;\n                        }\n                        else{\n                            //if it isn't, add 1 to num and check if that is a palindrome\n                            num += 1;\n                            if(is_palindrome(num)){\n                                //if it is, return that number\n                                return num;\n                            }\n                            else{\n                                //if it isn't, add 1 to num and check if that is a palindrome\n                                num += 1;\n                                if(is_palindrome(num)){\n                                    //if it is, return that number\n                                    return num;\n                                }\n                                else{\n                                    //if it isn't, add 1 to num and check if that is a palindrome\n                                    num += 1;\n                                    if(is_palindrome",
    "  var num_str = num.toString();\n  var num_arr = num_str.split('');\n  var num_len = num_arr.length;\n  var num_mid = Math.floor(num_len/2);\n  var num_left = num_arr.slice(0,num_mid);\n  var num_right = num_arr.slice(num_mid,num_len);\n  var num_left_rev = num_left.reverse();\n  var num_right_rev = num_right.reverse();\n  var num_left_rev_str = num_left_rev.join('');\n  var num_right_rev_str = num_right_rev.join('');\n  var num_left_rev_int = parseInt(num_left_rev_str);\n  var num_right_rev_int = parseInt(num_right_rev_str);\n  var num_left_rev_int_str = num_left_rev_int.toString();\n  var num_right_rev_int_str = num_right_rev_int.toString();\n  var num_left_rev_int_str_len = num_left_rev_int_str.length;\n  var num_right_rev_int_str_len = num_right_rev_int_str.length;\n  var num_left_rev_int_str_len_diff = num_mid - num_left_rev_int_str_len;\n  var num_right_rev_int_str_len_diff = num_mid - num_right_rev_int_str_len;\n  var num_left_rev_int_str_len_diff_str = '';\n  var num_right_rev_int_str_len_diff_str = '';\n  var num_left_rev_int_str_len_diff_str_arr = [];\n  var num_right_rev_int_str_len_diff_str_arr = [];\n  var num_left_rev_int_str_len_diff_str_arr_str = '';\n  var num_right_rev_int_str_len_diff_str_arr",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let num_half = Math.floor(num_len/2);\n  let num_left = num_str.slice(0,num_half);\n  let num_right = num_str.slice(num_len-num_half);\n  let num_left_rev = num_left.split('').reverse().join('');\n  let num_right_rev = num_right.split('').reverse().join('');\n  let num_left_rev_num = parseInt(num_left_rev);\n  let num_right_rev_num = parseInt(num_right_rev);\n  let num_left_num = parseInt(num_left);\n  let num_right_num = parseInt(num_right);\n  let num_left_rev_str = num_left_rev_num.toString();\n  let num_right_rev_str = num_right_rev_num.toString();\n  let num_left_str = num_left_num.toString();\n  let num_right_str = num_right_num.toString();\n  let num_left_rev_len = num_left_rev_str.length;\n  let num_right_rev_len = num_right_rev_str.length;\n  let num_left_len = num_left_str.length;\n  let num_right_len = num_right_str.length;\n  let num_left_rev_half = Math.floor(num_left_rev_len/2);\n  let num_right_rev_half = Math.floor(num_right_rev_len/2);\n  let num_left_half = Math.floor(num_left_len/2);\n  let num_right_half = Math.floor(num_right_len/2);\n  let num_left_rev_left = num_left_rev_str.slice(0,num_left_rev_half);\n  let num_right_rev_left = num_right_rev_str.slice(0,num_right_rev_half);\n ",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var left_half = num_str.substring(0, Math.floor(num_len/2));\n  var right_half = num_str.substring(Math.ceil(num_len/2));\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var palindrome = left_half + left_half_rev;\n  if(palindrome > num){\n    return palindrome;\n  }\n  else{\n    var left_half_int = parseInt(left_half);\n    var left_half_int_plus_one = left_half_int + 1;\n    var left_half_int_plus_one_str = left_half_int_plus_one.toString();\n    var left_half_int_plus_one_str_rev = left_half_int_plus_one_str.split(\"\").reverse().join(\"\");\n    var palindrome_plus_one = left_half_int_plus_one_str + left_half_int_plus_one_str_rev;\n    return palindrome_plus_one;\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_half_str = num_str.slice(0,num_half);\n  var num_half_str_rev = num_half_str.split(\"\").reverse().join(\"\");\n  var num_half_str_rev_int = parseInt(num_half_str_rev);\n  var num_half_str_int = parseInt(num_half_str);\n  var num_half_str_rev_int_str = num_half_str_rev_int.toString();\n  var num_half_str_int_str = num_half_str_int.toString();\n  var num_half_str_rev_int_str_len = num_half_str_rev_int_str.length;\n  var num_half_str_int_str_len = num_half_str_int_str.length;\n  var num_half_str_rev_int_str_pad = num_half_str_rev_int_str.padStart(num_half_str_rev_int_str_len+1,\"0\");\n  var num_half_str_int_str_pad = num_half_str_int_str.padStart(num_half_str_int_str_len+1,\"0\");\n  var num_half_str_rev_int_str_pad_int = parseInt(num_half_str_rev_int_str_pad);\n  var num_half_str_int_str_pad_int = parseInt(num_half_str_int_str_pad);\n  var num_half_str_rev_int_str_pad_int_str = num_half_str_rev_int_str_pad_int.toString();\n  var num_half_str_int_str_pad_int_str = num_half_str_int_str_pad_int.toString();\n  var num_half_str_rev_int_str_pad_int_str_len = num_half_str_rev_int",
    "  var str = num.toString();\n  var len = str.length;\n  var mid = Math.floor(len/2);\n  var left = str.substr(0,mid);\n  var right = str.substr(mid+1);\n  var left_rev = left.split(\"\").reverse().join(\"\");\n  var right_rev = right.split(\"\").reverse().join(\"\");\n  var left_int = parseInt(left);\n  var right_int = parseInt(right);\n  var left_rev_int = parseInt(left_rev);\n  var right_rev_int = parseInt(right_rev);\n  var left_int_plus = left_int + 1;\n  var left_rev_int_plus = left_rev_int + 1;\n  var left_int_plus_str = left_int_plus.toString();\n  var left_rev_int_plus_str = left_rev_int_plus.toString();\n  var left_int_plus_str_rev = left_int_plus_str.split(\"\").reverse().join(\"\");\n  var left_rev_int_plus_str_rev = left_rev_int_plus_str.split(\"\").reverse().join(\"\");\n  var left_int_plus_str_rev_int = parseInt(left_int_plus_str_rev);\n  var left_rev_int_plus_str_rev_int = parseInt(left_rev_int_plus_str_rev);\n  var left_int_plus_str_rev_int_plus = left_int_plus_str_rev_int + 1;\n  var left_rev_int_plus_str_rev_int_plus = left_rev_int_plus_str_rev_int + 1;\n  var left_int_plus_str_rev_int_plus_str = left_int_plus_str_rev_int_plus.toString();\n  var left_rev_int_plus_str_rev_int_plus_str = left_rev_int_plus_str_rev_int_plus.toString();\n  var left_int_plus_str_rev_int_plus_str_rev",
    "  var num_str = num.toString();\n  var num_length = num_str.length;\n  var num_half = Math.floor(num_length/2);\n  var num_left = num_str.substr(0,num_half);\n  var num_right = num_str.substr(num_length-num_half,num_half);\n  var num_left_rev = num_left.split('').reverse().join('');\n  if(num_left_rev < num_right){\n    num_left = (parseInt(num_left)+1).toString();\n    num_left_rev = num_left.split('').reverse().join('');\n  }\n  var num_right = num_left_rev;\n  if(num_length%2!==0){\n    num_right = num_left_rev.substr(1,num_half);\n  }\n  return parseInt(num_left+num_right);\n}\n",
    "    var str = num.toString();\n    var len = str.length;\n    var mid = Math.floor(len/2);\n    var left = str.substr(0,mid);\n    var right = str.substr(mid+1);\n    var left_rev = left.split(\"\").reverse().join(\"\");\n    var right_rev = right.split(\"\").reverse().join(\"\");\n    var left_int = parseInt(left);\n    var right_int = parseInt(right);\n    var left_rev_int = parseInt(left_rev);\n    var right_rev_int = parseInt(right_rev);\n    if(left_int == left_rev_int && right_int == right_rev_int){\n        if(left_int > right_int){\n            return parseInt(left+str[mid]+right);\n        }\n        else{\n            var left_int_plus = left_int+1;\n            var left_plus_str = left_int_plus.toString();\n            var left_plus_rev = left_plus_str.split(\"\").reverse().join(\"\");\n            return parseInt(left_plus_str+str[mid]+left_plus_rev);\n        }\n    }\n    else{\n        if(left_int > left_rev_int){\n            return parseInt(left+str[mid]+left_rev);\n        }\n        else{\n            var left_int_plus = left_int+1;\n            var left_plus_str = left_int_plus.toString();\n            var left_plus_rev = left_plus_str.split(\"\").reverse().join(\"\");\n            return parseInt(left_plus_str+str[mid]+left_plus_rev);\n        }\n    }\n}\n",
    "  var num_str = num.toString();\n  var num_arr = num_str.split('');\n  var num_len = num_arr.length;\n  var mid_index = Math.floor(num_len/2);\n  var left_index = mid_index - 1;\n  var right_index = num_len % 2 === 0 ? mid_index : mid_index + 1;\n  var left_num = num_arr.slice(0, left_index + 1).join('');\n  var right_num = num_arr.slice(right_index).join('');\n  var left_num_int = parseInt(left_num);\n  var right_num_int = parseInt(right_num);\n  var left_num_int_rev = parseInt(left_num.split('').reverse().join(''));\n  var right_num_int_rev = parseInt(right_num.split('').reverse().join(''));\n  var mid_num = num_arr[mid_index];\n  var mid_num_int = parseInt(mid_num);\n  var mid_num_int_rev = parseInt(mid_num);\n  var new_num_int = 0;\n  var new_num_str = '';\n  var new_num_arr = [];\n  var new_num_len = 0;\n  var new_mid_index = 0;\n  var new_left_index = 0;\n  var new_right_index = 0;\n  var new_left_num = '';\n  var new_right_num = '';\n  var new_left_num_int = 0;\n  var new_right_num_int = 0;\n  var new_left_num_int_rev = 0;\n  var new_right_num_int_rev = 0;\n  var new_mid_num = '';\n  var new_mid_num_int = 0;\n  var new_mid_num_int_rev = 0;\n  var new_num_int_rev = 0;\n  var new_num_str_rev = '';\n  var new_num_arr_rev = [];\n  var",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var left_half = num_str.substring(0, Math.floor(num_len/2));\n    var right_half = num_str.substring(Math.ceil(num_len/2));\n    var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n    var next_palindrome = parseInt(left_half + left_half_rev);\n    if(next_palindrome > num){\n        return next_palindrome;\n    }\n    else{\n        var left_half_int = parseInt(left_half);\n        left_half_int++;\n        left_half = left_half_int.toString();\n        left_half_rev = left_half.split(\"\").reverse().join(\"\");\n        next_palindrome = parseInt(left_half + left_half_rev);\n        return next_palindrome;\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let is_odd = num_len % 2;\n    let left_half = num_str.substring(0, (num_len / 2));\n    let right_half = num_str.substring((num_len / 2) + is_odd, num_len);\n    let left_half_int = parseInt(left_half);\n    let right_half_int = parseInt(right_half);\n    if(left_half_int > right_half_int){\n        return parseInt(left_half + left_half.split('').reverse().join(''));\n    }\n    else{\n        let new_left_half = (left_half_int + 1).toString();\n        return parseInt(new_left_half + new_left_half.split('').reverse().join(''));\n    }\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len/2);\n    let left_half = num_str.substring(0,mid);\n    let right_half = num_str.substring(mid+1);\n    let new_num = 0;\n    if(len%2 == 0){\n        new_num = parseInt(left_half + left_half.split('').reverse().join(''));\n    }else{\n        new_num = parseInt(left_half + num_str[mid] + left_half.split('').reverse().join(''));\n    }\n    if(new_num > num){\n        return new_num;\n    }else{\n        let new_left_half = (parseInt(left_half) + 1).toString();\n        if(len%2 == 0){\n            new_num = parseInt(new_left_half + new_left_half.split('').reverse().join(''));\n        }else{\n            new_num = parseInt(new_left_half + num_str[mid] + new_left_half.split('').reverse().join(''));\n        }\n        return new_num;\n    }\n}\n",
    "  var num_str = num.toString();\n  var num_arr = num_str.split(\"\");\n  var num_len = num_arr.length;\n  var num_mid = Math.floor(num_len/2);\n  var is_odd = num_len % 2;\n  var is_palindrome = true;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var l = 0;\n  var m = 0;\n  var n = 0;\n  var o = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n  var t = 0;\n  var u = 0;\n  var v = 0;\n  var w = 0;\n  var x = 0;\n  var y = 0;\n  var z = 0;\n  var aa = 0;\n  var bb = 0;\n  var cc = 0;\n  var dd = 0;\n  var ee = 0;\n  var ff = 0;\n  var gg = 0;\n  var hh = 0;\n  var ii = 0;\n  var jj = 0;\n  var kk = 0;\n  var ll = 0;\n  var mm = 0;\n  var nn = 0;\n  var oo = 0;\n  var pp = 0;\n  var qq = 0;\n  var rr = 0;\n  var ss = 0;\n  var tt = 0;\n  var uu = 0;\n  var vv = 0;\n  var ww = 0;\n  var xx = 0;\n  var yy = 0;\n  var zz = 0;\n  var aaa = 0;\n  var bbb = 0;\n  var ccc = 0;\n  var ddd = 0;\n  var eee = 0;\n  var fff = 0;\n  var ggg = 0;\n  var hhh = 0;\n  var iii = 0;\n  var jjj = 0;\n  var kkk = 0;\n  var lll = 0;\n  var mmm = 0;\n  var n",
    "  var num_arr = num.toString().split('');\n  var num_arr_length = num_arr.length;\n  var num_arr_half_length = Math.floor(num_arr_length/2);\n  var num_arr_half_length_plus_one = Math.ceil(num_arr_length/2);\n  var num_arr_half_length_minus_one = Math.floor(num_arr_length/2)-1;\n  var num_arr_half_length_plus_two = Math.ceil(num_arr_length/2)+1;\n  var num_arr_half_length_minus_two = Math.floor(num_arr_length/2)-2;\n  var num_arr_half_length_plus_three = Math.ceil(num_arr_length/2)+2;\n  var num_arr_half_length_minus_three = Math.floor(num_arr_length/2)-3;\n  var num_arr_half_length_plus_four = Math.ceil(num_arr_length/2)+3;\n  var num_arr_half_length_minus_four = Math.floor(num_arr_length/2)-4;\n  var num_arr_half_length_plus_five = Math.ceil(num_arr_length/2)+4;\n  var num_arr_half_length_minus_five = Math.floor(num_arr_length/2)-5;\n  var num_arr_half_length_plus_six = Math.ceil(num_arr_length/2)+5;\n  var num_arr_half_length_minus_six = Math.floor(num_arr_length/2)-6;\n  var num_arr_half_length_plus_seven = Math.ceil(num_arr_length/2)+6;\n  var num_arr_half_length_minus_seven = Math.floor(num_arr_length/2)-7;\n  var num_arr_half_length_plus_eight = Math.ceil(num_arr_length/2)+7;\n  var num_arr_half_length_minus_eight = Math.",
    "  var num_str = num.toString();\n  var len = num_str.length;\n  var mid = Math.floor(len/2);\n  var left_half = num_str.substr(0, mid);\n  var right_half = num_str.substr(mid + len % 2, mid);\n  var next_palindrome = parseInt(left_half + (len % 2 ? num_str[mid] : '') + left_half.split('').reverse().join(''));\n  if(next_palindrome > num){\n    return next_palindrome;\n  }\n  if(len % 2 && num_str[mid] < '9'){\n    return parseInt(left_half + (parseInt(num_str[mid]) + 1) + left_half.split('').reverse().join(''));\n  }\n  if(left_half[0] < '9'){\n    return parseInt(parseInt(left_half) + 1 + left_half.split('').reverse().join(''));\n  }\n  return parseInt(parseInt(left_half) + 1 + left_half.split('').reverse().join(''));\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var mid_idx = Math.floor(num_len/2);\n    var left_half = num_str.substring(0,mid_idx);\n    var right_half = num_str.substring(mid_idx+num_len%2);\n    var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n    var new_num = parseInt(left_half+left_half_rev);\n    if(new_num > num){\n        return new_num;\n    }\n    else{\n        var left_half_int = parseInt(left_half);\n        var left_half_int_plus_1 = left_half_int+1;\n        var left_half_plus_1 = left_half_int_plus_1.toString();\n        var left_half_plus_1_rev = left_half_plus_1.split(\"\").reverse().join(\"\");\n        return parseInt(left_half_plus_1+left_half_plus_1_rev);\n    }\n}",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_arr = num_str.split('');\n    var num_arr_rev = num_arr.slice().reverse();\n    var num_arr_rev_str = num_arr_rev.join('');\n    var num_arr_rev_int = parseInt(num_arr_rev_str);\n\n    if(num_arr_rev_int > num){\n        return num_arr_rev_int;\n    }\n\n    if(num_len % 2 === 0){\n        var mid = num_len / 2;\n        var left = num_arr.slice(0, mid);\n        var right = num_arr.slice(mid, num_len);\n        var left_rev = left.slice().reverse();\n        var left_rev_str = left_rev.join('');\n        var left_rev_int = parseInt(left_rev_str);\n\n        if(left_rev_int > right.join('')){\n            return parseInt(left.join('') + left_rev_str);\n        }\n\n        var left_int = parseInt(left.join(''));\n        left_int++;\n        left = left_int.toString().split('');\n        left_rev = left.slice().reverse();\n        left_rev_str = left_rev.join('');\n        left_rev_int = parseInt(left_rev_str);\n        return parseInt(left.join('') + left_rev_str);\n    }\n    else{\n        var mid = Math.floor(num_len / 2);\n        var left = num_arr.slice(0, mid);\n        var right = num_arr.slice(mid + 1, num_len);\n        var left_rev = left.slice().reverse();\n        var left_rev_str = left_rev.join('');\n        var left_rev_int = parseInt(left_rev_str);\n\n        if(left_rev_int > right.join('')){\n            return parseInt(left.join('') + num_arr[mid] +",
    "  var num_str = num.toString();\n  var num_str_length = num_str.length;\n  var num_str_half_length = Math.floor(num_str_length/2);\n  var num_str_half_length_plus_one = Math.ceil(num_str_length/2);\n  var num_str_half_length_minus_one = Math.floor(num_str_length/2) - 1;\n  var num_str_half_length_plus_two = Math.ceil(num_str_length/2) + 1;\n  var num_str_half_length_minus_two = Math.floor(num_str_length/2) - 2;\n  var num_str_half_length_plus_three = Math.ceil(num_str_length/2) + 2;\n  var num_str_half_length_minus_three = Math.floor(num_str_length/2) - 3;\n  var num_str_half_length_plus_four = Math.ceil(num_str_length/2) + 3;\n  var num_str_half_length_minus_four = Math.floor(num_str_length/2) - 4;\n  var num_str_half_length_plus_five = Math.ceil(num_str_length/2) + 4;\n  var num_str_half_length_minus_five = Math.floor(num_str_length/2) - 5;\n  var num_str_half_length_plus_six = Math.ceil(num_str_length/2) + 5;\n  var num_str_half_length_minus_six = Math.floor(num_str_length/2) - 6;\n  var num_str_half_length_plus_seven = Math.ceil(num_str_length/2) + 6;\n  var num_str_half_length_minus_seven = Math.floor(num_str_length/2) - 7;\n  var num_str_half_length_plus_eight = Math.ceil(num_str_length/2) + 7;\n  var num_str_",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var left_half = num_str.substring(0, num_len/2);\n    var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n    var right_half = num_len % 2 == 0 ? left_half_rev : left_half_rev.substring(1);\n    var new_num = left_half + right_half;\n    if(new_num > num_str){\n        return new_num;\n    }else{\n        var left_half_int = parseInt(left_half);\n        left_half_int++;\n        left_half = left_half_int.toString();\n        left_half_rev = left_half.split(\"\").reverse().join(\"\");\n        right_half = num_len % 2 == 0 ? left_half_rev : left_half_rev.substring(1);\n        new_num = left_half + right_half;\n        return new_num;\n    }\n}\n",
    "    var palindrome = num;\n    var isPalindrome = false;\n    while(!isPalindrome){\n        palindrome++;\n        isPalindrome = isPalindrome(palindrome);\n    }\n    return palindrome;\n}\n",
    "  var num_str = num.toString();\n  var len = num_str.length;\n  var mid = Math.floor(len/2);\n  var left = num_str.substr(0,mid);\n  var right = num_str.substr(mid+len%2,mid);\n  if(left < right.split('').reverse().join('')){\n    return parseInt(left + (len%2 ? num_str[mid] : '') + left.split('').reverse().join(''));\n  }\n  var carry = 1;\n  var left_arr = left.split('');\n  for(var i = mid-1; i >= 0; i--){\n    var sum = parseInt(left_arr[i]) + carry;\n    if(sum > 9){\n      carry = 1;\n      left_arr[i] = '0';\n    }else{\n      left_arr[i] = sum.toString();\n      break;\n    }\n  }\n  if(carry > 0){\n    left_arr.unshift('1');\n    left_arr.push('1');\n  }\n  return parseInt(left_arr.join('') + (len%2 ? num_str[mid] : '') + left_arr.reverse().join(''));\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_len_half = Math.floor(num_len/2);\n  var num_left = num_str.substring(0,num_len_half);\n  var num_right = num_str.substring(num_len_half,num_len);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_rev_int = parseInt(num_right_rev);\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_rev_int_plus_one = num_left_rev_int + 1;\n  var num_left_rev_int_plus_one_str = num_left_rev_int_plus_one.toString();\n  var num_left_rev_int_plus_one_str_len = num_left_rev_int_plus_one_str.length;\n  var num_left_rev_int_plus_one_str_len_half = Math.floor(num_left_rev_int_plus_one_str_len/2);\n  var num_left_rev_int_plus_one_str_left = num_left_rev_int_plus_one_str.substring(0,num_left_rev_int_plus_one_str_len_half);\n  var num_left_rev_int_plus_one_str_right = num_left_rev_int_plus_one_str.substring(num_left_rev_int_plus_one_str_len_half,num_left_rev_int_plus_one_str_len);\n  var num_left_rev_int_plus_one_str_left_rev = num_left_rev_int_plus_one_str_left.split(\"\").reverse().join(\"\");\n ",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_str.substring(0, half_len);\n  var right_half = num_str.substring(num_len - half_len);\n  var left_half_int = parseInt(left_half);\n  var right_half_int = parseInt(right_half);\n  var left_half_int_next = left_half_int + 1;\n  var left_half_next = left_half_int_next.toString();\n  var left_half_next_len = left_half_next.length;\n  var left_half_next_pad = left_half_next.padStart(half_len, '0');\n  var right_half_next = left_half_next_pad.split('').reverse().join('');\n  var next_palindrome = left_half_next_pad + right_half_next;\n  return parseInt(next_palindrome);\n}\n",
    "  var num_str = num.toString();\n  var num_arr = num_str.split(\"\");\n  var num_len = num_arr.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_arr.slice(0,half_len);\n  var right_half = num_arr.slice(half_len,num_len);\n  var right_half_rev = right_half.reverse();\n  var new_num_arr = left_half.concat(right_half_rev);\n  var new_num_str = new_num_arr.join(\"\");\n  var new_num = parseInt(new_num_str);\n  if(new_num > num){\n    return new_num;\n  }\n  else{\n    var left_half_int = parseInt(left_half.join(\"\"));\n    var left_half_int_plus_one = left_half_int + 1;\n    var left_half_plus_one = left_half_int_plus_one.toString().split(\"\");\n    var new_num_arr = left_half_plus_one.concat(right_half_rev);\n    var new_num_str = new_num_arr.join(\"\");\n    var new_num = parseInt(new_num_str);\n    return new_num;\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_str.split('').reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_int = parseInt(num_arr_rev_str);\n  var num_arr_rev_int_str = num_arr_rev_int.toString();\n  var num_arr_rev_int_str_len = num_arr_rev_int_str.length;\n  var num_arr_rev_int_str_arr = num_arr_rev_int_str.split('');\n  var num_arr_rev_int_str_arr_rev = num_arr_rev_int_str_arr.reverse();\n  var num_arr_rev_int_str_arr_rev_str = num_arr_rev_int_str_arr_rev.join('');\n  var num_arr_rev_int_str_arr_rev_int = parseInt(num_arr_rev_int_str_arr_rev_str);\n  var num_arr_rev_int_str_arr_rev_int_str = num_arr_rev_int_str_arr_rev_int.toString();\n  var num_arr_rev_int_str_arr_rev_int_str_len = num_arr_rev_int_str_arr_rev_int_str.length;\n  var num_arr_rev_int_str_arr_rev_int_str_arr = num_arr_rev_int_str_arr_rev_int_str.split('');\n  var num_arr_rev_int_str_arr_rev_int_str_arr_rev = num_arr_rev_int_str_arr_rev_int_str_arr.reverse();\n  var num_arr_rev_int_str_arr_rev_int_str_arr_rev_str = num_arr_rev_int_str_arr_rev_int_str_arr_rev.",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len/2));\n    let middle_digit = num_len % 2 === 1 ? num_str.substring(Math.floor(num_len/2), Math.floor(num_len/2) + 1) : '';\n    let right_half = num_str.substring(Math.floor(num_len/2) + 1);\n    let left_half_reversed = left_half.split('').reverse().join('');\n    let palindrome = left_half + middle_digit + left_half_reversed;\n    if(palindrome > num_str){\n        return palindrome;\n    }\n    else{\n        let left_half_int = parseInt(left_half);\n        let left_half_int_plus_one = left_half_int + 1;\n        let left_half_plus_one = left_half_int_plus_one.toString();\n        let left_half_plus_one_reversed = left_half_plus_one.split('').reverse().join('');\n        let palindrome_plus_one = left_half_plus_one + middle_digit + left_half_plus_one_reversed;\n        return palindrome_plus_one;\n    }\n}\n",
    "  let num_str = num.toString();\n  let num_arr = num_str.split('');\n  let num_len = num_arr.length;\n  let num_mid = Math.floor(num_len/2);\n  let num_left = num_arr.slice(0, num_mid);\n  let num_right = num_arr.slice(num_mid, num_len).reverse();\n  let num_left_rev = num_left.reverse();\n  let num_left_rev_str = num_left_rev.join('');\n  let num_right_str = num_right.join('');\n  let num_left_rev_int = parseInt(num_left_rev_str);\n  let num_right_int = parseInt(num_right_str);\n  let num_int = parseInt(num_str);\n  if (num_left_rev_int > num_right_int){\n    let num_left_rev_int_str = num_left_rev_int.toString();\n    let num_left_rev_int_arr = num_left_rev_int_str.split('');\n    let num_left_rev_int_len = num_left_rev_int_arr.length;\n    let num_left_rev_int_mid = Math.floor(num_left_rev_int_len/2);\n    let num_left_rev_int_left = num_left_rev_int_arr.slice(0, num_left_rev_int_mid);\n    let num_left_rev_int_right = num_left_rev_int_arr.slice(num_left_rev_int_mid, num_left_rev_int_len).reverse();\n    let num_left_rev_int_left_str = num_left_rev_int_left.join('');\n    let num_left_rev_int_right_str = num_left_rev_int_right.join('');\n    let num_left_rev_int_left_int = parseInt(num_left_rev_int_left_str);\n    let num_left_rev_int_",
    "  var str = num.toString();\n  var len = str.length;\n  var mid = Math.floor(len/2);\n  var left = str.substr(0,mid);\n  var right = str.substr(mid+len%2,len);\n  var left_rev = left.split('').reverse().join('');\n  if(left_rev < right){\n    left = (parseInt(left) + 1).toString();\n    left_rev = left.split('').reverse().join('');\n  }\n  return parseInt(left + left_rev.substr(len%2,len));\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_arr.slice().reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_num = parseInt(num_arr_rev_str);\n  var num_arr_rev_num_str = num_arr_rev_num.toString();\n  var num_arr_rev_num_len = num_arr_rev_num_str.length;\n  var num_arr_rev_num_arr = num_arr_rev_num_str.split('');\n  var num_arr_rev_num_arr_rev = num_arr_rev_num_arr.slice().reverse();\n  var num_arr_rev_num_arr_rev_str = num_arr_rev_num_arr_rev.join('');\n  var num_arr_rev_num_arr_rev_num = parseInt(num_arr_rev_num_arr_rev_str);\n  var num_arr_rev_num_arr_rev_num_str = num_arr_rev_num_arr_rev_num.toString();\n  var num_arr_rev_num_arr_rev_num_len = num_arr_rev_num_arr_rev_num_str.length;\n\n  if(num_len === num_arr_rev_num_len){\n    if(num_arr_rev_num_arr_rev_num > num){\n      return num_arr_rev_num_arr_rev_num;\n    }\n    else{\n      var num_arr_rev_num_arr_rev_num_arr = num_arr_rev_num_arr_rev_num_str.split('');\n      var num_arr_rev_num_arr_rev_num_arr_rev = num_arr_rev_num_arr_rev_num_arr.slice().reverse();\n      var num_arr_rev_num_arr_rev_num_arr_rev_str = num_",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_arr = num_str.split('');\n    var num_arr_rev = num_str.split('').reverse();\n    var num_arr_rev_join = num_arr_rev.join('');\n    var num_arr_rev_join_num = parseInt(num_arr_rev_join);\n    var num_arr_rev_join_num_str = num_arr_rev_join_num.toString();\n    var num_arr_rev_join_num_str_len = num_arr_rev_join_num_str.length;\n    var num_arr_rev_join_num_str_len_diff = num_len - num_arr_rev_join_num_str_len;\n    var num_arr_rev_join_num_str_len_diff_str = num_arr_rev_join_num_str_len_diff.toString();\n    var num_arr_rev_join_num_str_len_diff_str_arr = num_arr_rev_join_num_str_len_diff_str.split('');\n    var num_arr_rev_join_num_str_len_diff_str_arr_rev = num_arr_rev_join_num_str_len_diff_str_arr.reverse();\n    var num_arr_rev_join_num_str_len_diff_str_arr_rev_join = num_arr_rev_join_num_str_len_diff_str_arr_rev.join('');\n    var num_arr_rev_join_num_str_len_diff_str_arr_rev_join_num = parseInt(num_arr_rev_join_num_str_len_diff_str_arr_rev_join);\n    var num_arr_rev_join_num_str_len_diff_str_arr_rev_join_num_str = num_arr_rev_join_num_str_len_diff_str_arr_rev_join_num.toString();\n    var num_arr_rev_join_",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len/2);\n    var num_left = num_str.substring(0, num_half);\n    var num_right = num_str.substring(num_len - num_half, num_len);\n    var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n    if(num_left < num_left_rev){\n        num_left = (parseInt(num_left) + 1).toString();\n        num_left_rev = num_left.split(\"\").reverse().join(\"\");\n    }\n    var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n    if(num_right < num_right_rev){\n        num_right = (parseInt(num_right) + 1).toString();\n        num_right_rev = num_right.split(\"\").reverse().join(\"\");\n    }\n    if(num_left_rev > num_right_rev){\n        num_right = num_left_rev;\n    }\n    else{\n        num_left = num_right_rev;\n    }\n    return parseInt(num_left + num_right);\n}\n",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var palindrome_str = '';\n  var palindrome_num = 0;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var l = 0;\n  var m = 0;\n  var n = 0;\n  var o = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n  var t = 0;\n  var u = 0;\n  var v = 0;\n  var w = 0;\n  var x = 0;\n  var y = 0;\n  var z = 0;\n  var aa = 0;\n  var bb = 0;\n  var cc = 0;\n  var dd = 0;\n  var ee = 0;\n  var ff = 0;\n  var gg = 0;\n  var hh = 0;\n  var ii = 0;\n  var jj = 0;\n  var kk = 0;\n  var ll = 0;\n  var mm = 0;\n  var nn = 0;\n  var oo = 0;\n  var pp = 0;\n  var qq = 0;\n  var rr = 0;\n  var ss = 0;\n  var tt = 0;\n  var uu = 0;\n  var vv = 0;\n  var ww = 0;\n  var xx = 0;\n  var yy = 0;\n  var zz = 0;\n  var aaa = 0;\n  var bbb = 0;\n  var ccc = 0;\n  var ddd = 0;\n  var eee = 0;\n  var fff = 0;\n  var ggg = 0;\n  var hhh = 0;\n  var iii = 0;\n  var jjj = 0;\n  var kkk = 0;\n  var lll = 0;\n  var mmm = 0;\n  var nnn = 0;\n  var ooo = 0;\n  var ppp = 0;\n  var qqq = 0;\n  var",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_str.split('').reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_num = parseInt(num_arr_rev_str);\n  var num_arr_rev_num_str = num_arr_rev_num.toString();\n  var num_arr_rev_num_len = num_arr_rev_num_str.length;\n  var num_arr_rev_num_arr = num_arr_rev_num_str.split('');\n  var num_arr_rev_num_arr_rev = num_arr_rev_num_str.split('').reverse();\n  var num_arr_rev_num_arr_rev_str = num_arr_rev_num_arr_rev.join('');\n  var num_arr_rev_num_arr_rev_num = parseInt(num_arr_rev_num_arr_rev_str);\n  var num_arr_rev_num_arr_rev_num_str = num_arr_rev_num_arr_rev_num.toString();\n  var num_arr_rev_num_arr_rev_num_len = num_arr_rev_num_arr_rev_num_str.length;\n  var num_arr_rev_num_arr_rev_num_arr = num_arr_rev_num_arr_rev_num_str.split('');\n  var num_arr_rev_num_arr_rev_num_arr_rev = num_arr_rev_num_arr_rev_num_str.split('').reverse();\n  var num_arr_rev_num_arr_rev_num_arr_rev_str = num_arr_rev_num_arr_rev_num_arr_rev.join('');\n  var num_arr_rev_num_arr_rev_num_arr_rev_num = parseInt(num_arr_rev_num_arr_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_str.substr(0, half_len);\n  var right_half = num_str.substr(half_len + num_len % 2);\n  var left_half_int = parseInt(left_half);\n  var right_half_int = parseInt(right_half);\n\n  if(left_half_int < right_half_int){\n    left_half = (left_half_int + 1).toString();\n    right_half = left_half.split(\"\").reverse().join(\"\");\n  }\n  else if(left_half_int > right_half_int){\n    right_half = left_half.split(\"\").reverse().join(\"\");\n  }\n  else{\n    left_half = (left_half_int + 1).toString();\n    right_half = left_half.split(\"\").reverse().join(\"\");\n    if(left_half.length > half_len){\n      left_half = left_half.substr(1);\n      right_half = left_half.split(\"\").reverse().join(\"\");\n    }\n  }\n  return parseInt(left_half + right_half);\n}\n",
    "  var num_string = num.toString();\n  var num_length = num_string.length;\n  var num_array = num_string.split('');\n  var num_array_copy = num_array.slice(0);\n  var num_array_reverse = num_array.slice(0).reverse();\n  var num_array_reverse_copy = num_array_reverse.slice(0);\n  var num_array_reverse_copy_length = num_array_reverse_copy.length;\n  var num_array_reverse_copy_length_half = Math.floor(num_array_reverse_copy_length/2);\n  var num_array_reverse_copy_length_half_plus_one = num_array_reverse_copy_length_half + 1;\n  var num_array_reverse_copy_length_half_minus_one = num_array_reverse_copy_length_half - 1;\n  var num_array_reverse_copy_length_half_plus_one_plus_one = num_array_reverse_copy_length_half_plus_one + 1;\n  var num_array_reverse_copy_length_half_plus_one_minus_one = num_array_reverse_copy_length_half_plus_one - 1;\n  var num_array_reverse_copy_length_half_minus_one_plus_one = num_array_reverse_copy_length_half_minus_one + 1;\n  var num_array_reverse_copy_length_half_minus_one_minus_one = num_array_reverse_copy_length_half_minus_one - 1;\n  var num_array_reverse_copy_length_half_plus_one_plus_one_plus_one = num_array_reverse_copy_length_half_plus_one_plus_one + 1;\n  var num_array_reverse_copy_length_half_plus_one_plus_one_minus_one = num_array_reverse_copy_length_half_plus_one_plus_one - 1;\n  var num_array_reverse_copy_length_half_minus_one_plus_one_plus_one = num_array_reverse_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.slice(0,num_half);\n  var num_right = num_str.slice(num_half+num_len%2);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_rev_int = parseInt(num_right_rev);\n  var num_left_rev_int_plus = num_left_rev_int+1;\n  var num_left_rev_int_plus_str = num_left_rev_int_plus.toString();\n  var num_left_rev_int_plus_str_len = num_left_rev_int_plus_str.length;\n  var num_left_rev_int_plus_str_half = Math.floor(num_left_rev_int_plus_str_len/2);\n  var num_left_rev_int_plus_str_left = num_left_rev_int_plus_str.slice(0,num_left_rev_int_plus_str_half);\n  var num_left_rev_int_plus_str_right = num_left_rev_int_plus_str.slice(num_left_rev_int_plus_str_half+num_left_rev_int_plus_str_len%2);\n  var num_left_rev_int_plus_str_left_rev = num_left_rev_int_plus_str_left.split(\"\").reverse().join(\"\");\n  var num_left_rev_int_plus_str_right_rev = num_left_rev_int_plus_str_right.split(\"\").reverse().join(\"\");\n  var num_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len / 2);\n  var left_half = num_str.substring(0, num_half);\n  var right_half = num_str.substring(num_half + num_len % 2);\n  var right_half_rev = right_half.split('').reverse().join('');\n  if(left_half < right_half_rev){\n    return parseInt(left_half + right_half_rev);\n  }\n  else{\n    var left_half_int = parseInt(left_half);\n    var left_half_int_plus_one = left_half_int + 1;\n    var left_half_plus_one = left_half_int_plus_one.toString();\n    var left_half_plus_one_len = left_half_plus_one.length;\n    var left_half_plus_one_half = Math.floor(left_half_plus_one_len / 2);\n    var left_half_plus_one_right_half = left_half_plus_one.substring(left_half_plus_one_half + left_half_plus_one_len % 2);\n    var left_half_plus_one_right_half_rev = left_half_plus_one_right_half.split('').reverse().join('');\n    return parseInt(left_half_plus_one + left_half_plus_one_right_half_rev);\n  }\n}\n",
    "  var num_string = num.toString();\n  var num_length = num_string.length;\n  var num_half = Math.floor(num_length/2);\n  var num_left = num_string.slice(0,num_half);\n  var num_right = num_string.slice(num_half + num_length % 2);\n  var num_left_rev = num_left.split('').reverse().join('');\n  var num_right_rev = num_right.split('').reverse().join('');\n  var num_left_rev_num = parseInt(num_left_rev);\n  var num_right_rev_num = parseInt(num_right_rev);\n  var num_left_num = parseInt(num_left);\n  var num_right_num = parseInt(num_right);\n  var num_left_rev_num_plus_one = num_left_rev_num + 1;\n  var num_left_rev_num_plus_one_string = num_left_rev_num_plus_one.toString();\n  var num_left_rev_num_plus_one_string_length = num_left_rev_num_plus_one_string.length;\n  var num_left_rev_num_plus_one_string_half = Math.floor(num_left_rev_num_plus_one_string_length/2);\n  var num_left_rev_num_plus_one_string_left = num_left_rev_num_plus_one_string.slice(0,num_left_rev_num_plus_one_string_half);\n  var num_left_rev_num_plus_one_string_right = num_left_rev_num_plus_one_string.slice(num_left_rev_num_plus_one_string_half + num_left_rev_num_plus_one_string_length % 2);\n  var num_left_rev_num_plus_one_string_left_rev = num_left_rev_num_plus_one_string_left.split('').reverse().join('');\n  var num_left_rev",
    "  var num = num.toString();\n  var len = num.length;\n  var mid = Math.floor(len/2);\n  var left = num.substring(0,mid);\n  var right = num.substring(mid+1,len);\n  var right_rev = right.split(\"\").reverse().join(\"\");\n  if(len%2==0){\n    if(left<right_rev){\n      return left+right_rev;\n    }\n    else{\n      var left_int = parseInt(left);\n      left_int++;\n      left = left_int.toString();\n      return left+left.split(\"\").reverse().join(\"\");\n    }\n  }\n  else{\n    if(left<right_rev){\n      return left+num[mid]+right_rev;\n    }\n    else{\n      var left_int = parseInt(left);\n      left_int++;\n      left = left_int.toString();\n      return left+left.split(\"\").reverse().join(\"\");\n    }\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var palindrome = false;\n  var i = 0;\n  while(palindrome === false){\n    if(num_len % 2 === 0){\n      var first_half = num_str.slice(0, num_len/2);\n      var second_half = num_str.slice(num_len/2, num_len);\n      if(first_half === second_half.split(\"\").reverse().join(\"\")){\n        palindrome = true;\n      }\n      else{\n        num_str = (parseInt(num_str) + 1).toString();\n        num_len = num_str.length;\n      }\n    }\n    else{\n      var first_half = num_str.slice(0, (num_len - 1)/2);\n      var second_half = num_str.slice((num_len - 1)/2 + 1, num_len);\n      if(first_half === second_half.split(\"\").reverse().join(\"\")){\n        palindrome = true;\n      }\n      else{\n        num_str = (parseInt(num_str) + 1).toString();\n        num_len = num_str.length;\n      }\n    }\n  }\n  return parseInt(num_str);\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_str.substring(0, half_len);\n  var right_half = num_str.substring(half_len + num_len % 2);\n  var left_half_rev = left_half.split('').reverse().join('');\n  var new_num = left_half + left_half_rev;\n  if (new_num > num_str){\n    return parseInt(new_num);\n  }\n  else{\n    var left_half_int = parseInt(left_half);\n    var left_half_int_plus_1 = left_half_int + 1;\n    var left_half_int_plus_1_str = left_half_int_plus_1.toString();\n    var left_half_int_plus_1_str_len = left_half_int_plus_1_str.length;\n    var left_half_int_plus_1_str_rev = left_half_int_plus_1_str.split('').reverse().join('');\n    if (left_half_int_plus_1_str_len > half_len){\n      return parseInt(left_half_int_plus_1_str + left_half_int_plus_1_str_rev);\n    }\n    else{\n      return parseInt(left_half_int_plus_1_str + left_half_int_plus_1_str_rev.substring(1));\n    }\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.slice(0,num_half);\n  var num_right = num_str.slice(num_len-num_half,num_len);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_rev_int = parseInt(num_right_rev);\n  var num_left_rev_int_plus = num_left_rev_int + 1;\n  var num_left_rev_int_plus_str = num_left_rev_int_plus.toString();\n  var num_left_rev_int_plus_str_rev = num_left_rev_int_plus_str.split(\"\").reverse().join(\"\");\n  var num_left_rev_int_plus_str_rev_int = parseInt(num_left_rev_int_plus_str_rev);\n  var num_left_rev_int_plus_str_rev_int_str = num_left_rev_int_plus_str_rev_int.toString();\n  var num_left_rev_int_plus_str_rev_int_str_len = num_left_rev_int_plus_str_rev_int_str.length;\n  var num_left_rev_int_plus_str_rev_int_str_half = Math.floor(num_left_rev_int_plus_str_rev_int_str_len/2);\n  var num_left_rev_int_plus_str_rev_int_str_left = num_left_rev_int_plus_str_rev_int_str.slice(0,num_left_rev_int_plus_str",
    "  var num_str = num.toString();\n  var len = num_str.length;\n  var mid = Math.floor(len/2);\n  var left = num_str.substr(0, mid);\n  var right = num_str.substr(mid + len % 2, len);\n  var right_rev = right.split('').reverse().join('');\n  if(left < right_rev){\n    return parseInt(left + num_str[mid] + right_rev);\n  }\n  var left_int = parseInt(left);\n  var right_int = parseInt(right);\n  var carry = 1;\n  var left_int_new = left_int + carry;\n  var left_new = left_int_new.toString();\n  var right_new = left_new.split('').reverse().join('');\n  if(len % 2 === 1){\n    return parseInt(left_new + right_new);\n  }\n  return parseInt(left_new + right_new.substr(1, right_new.length));\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var left_half = num_str.slice(0, (num_len/2));\n  var right_half = num_str.slice((num_len/2), num_len);\n  var right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  var new_num = left_half + right_half_rev;\n  if (new_num > num){\n    return new_num;\n  }\n  else {\n    var left_half_int = parseInt(left_half);\n    var left_half_int_plus_one = left_half_int + 1;\n    var new_left_half = left_half_int_plus_one.toString();\n    var new_right_half = new_left_half.split(\"\").reverse().join(\"\");\n    var new_new_num = new_left_half + new_right_half;\n    return new_new_num;\n  }\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var left_half = num_str.substring(0, Math.floor(num_len/2));\n    var middle = num_len % 2 === 0 ? '' : num_str.substring(Math.floor(num_len/2), Math.floor(num_len/2) + 1);\n    var right_half = num_str.substring(Math.floor(num_len/2) + 1, num_len);\n    var right_half_rev = right_half.split('').reverse().join('');\n    var new_num = left_half + middle + right_half_rev;\n    if(new_num > num){\n        return parseInt(new_num);\n    }\n    else{\n        var left_half_num = parseInt(left_half);\n        var middle_num = parseInt(middle);\n        var right_half_num = parseInt(right_half);\n        var right_half_rev_num = parseInt(right_half_rev);\n        if(middle_num !== 9){\n            middle_num++;\n            middle = middle_num.toString();\n            new_num = left_half + middle + right_half_rev;\n            return parseInt(new_num);\n        }\n        else{\n            middle = '0';\n            left_half_num++;\n            left_half = left_half_num.toString();\n            new_num = left_half + middle + right_half_rev;\n            return parseInt(new_num);\n        }\n    }\n}\n",
    "  if(num < 0) return -1;\n  if(num < 10) return num + 1;\n  var num_str = num.toString();\n  var len = num_str.length;\n  var mid = Math.floor(len/2);\n  var left_half = num_str.substring(0, mid);\n  var right_half = num_str.substring(mid + len % 2, len);\n  if(left_half < right_half){\n    return parseInt(left_half + left_half.split('').reverse().join(''));\n  }\n  var left_half_int = parseInt(left_half);\n  var new_left_half = (left_half_int + 1).toString();\n  var new_right_half = new_left_half.split('').reverse().join('');\n  return parseInt(new_left_half + new_right_half);\n}\n",
    "    var num_str = num.toString();\n    var len = num_str.length;\n    var mid = Math.floor(len/2);\n    var left_half = num_str.substr(0,mid);\n    var right_half = num_str.substr(mid+1);\n    var new_num = parseInt(left_half+num_str[mid]+right_half);\n    if(new_num>num){\n        return new_num;\n    }\n    if(num_str[mid]!='9'){\n        new_num = parseInt(left_half+'9'+right_half);\n        return new_num;\n    }\n    var i = mid-1;\n    var j = mid+1;\n    var carry = 1;\n    while(i>=0){\n        if(num_str[i]=='9'){\n            num_str = num_str.substr(0,i)+'0'+num_str.substr(i+1);\n            carry = 1;\n        }\n        else{\n            num_str = num_str.substr(0,i)+(parseInt(num_str[i])+carry).toString()+num_str.substr(i+1);\n            carry = 0;\n        }\n        i--;\n        j++;\n    }\n    if(carry==1){\n        num_str = '1'+num_str;\n    }\n    return parseInt(num_str);\n}\n",
    "  var num_str = num.toString();\n  var num_arr = num_str.split(\"\");\n  var num_len = num_arr.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_arr.slice(0, num_half);\n  var num_right = num_arr.slice(num_half, num_len).reverse();\n  var num_right_str = num_right.join(\"\");\n  var num_left_str = num_left.join(\"\");\n  var num_left_int = parseInt(num_left_str);\n  var num_right_int = parseInt(num_right_str);\n  if(num_len % 2 == 0){\n    if(num_left_int > num_right_int){\n      return num_left_str + num_right_str;\n    }\n    else{\n      var num_left_int_plus = num_left_int + 1;\n      var num_left_str_plus = num_left_int_plus.toString();\n      return num_left_str_plus + num_left_str_plus.split(\"\").reverse().join(\"\");\n    }\n  }\n  else{\n    var num_left_int_plus = num_left_int + 1;\n    var num_left_str_plus = num_left_int_plus.toString();\n    return num_left_str_plus + num_left_str_plus.split(\"\").reverse().join(\"\");\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var half_len = Math.floor(num_len/2);\n  var left = num_str.substring(0, half_len);\n  var right = num_str.substring(half_len, num_len);\n  var left_rev = left.split('').reverse().join('');\n  var right_rev = right.split('').reverse().join('');\n  if(num_len % 2 == 0){\n    if(left > right_rev){\n      return parseInt(left + left_rev);\n    }else{\n      var new_left = (parseInt(left) + 1).toString();\n      var new_left_len = new_left.length;\n      var new_left_half_len = Math.floor(new_left_len/2);\n      var new_left_half = new_left.substring(0, new_left_half_len);\n      var new_left_half_rev = new_left_half.split('').reverse().join('');\n      return parseInt(new_left_half + new_left_half_rev);\n    }\n  }else{\n    if(left > right_rev){\n      return parseInt(left + num_str[half_len] + left_rev);\n    }else{\n      var new_left = (parseInt(left) + 1).toString();\n      var new_left_len = new_left.length;\n      var new_left_half_len = Math.floor(new_left_len/2);\n      var new_left_half = new_left.substring(0, new_left_half_len);\n      var new_left_half_rev = new_left_half.split('').reverse().join('');\n      return parseInt(new_left_half + new_left_half_rev);\n    }\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_str.split('').reverse();\n  var num_arr_rev_join = num_arr_rev.join('');\n  var num_arr_join = num_arr.join('');\n  var num_arr_rev_join_num = parseInt(num_arr_rev_join);\n  var num_arr_join_num = parseInt(num_arr_join);\n  var num_arr_rev_join_num_str = num_arr_rev_join_num.toString();\n  var num_arr_join_num_str = num_arr_join_num.toString();\n  var num_arr_rev_join_num_len = num_arr_rev_join_num_str.length;\n  var num_arr_join_num_len = num_arr_join_num_str.length;\n  var num_arr_rev_join_num_arr = num_arr_rev_join_num_str.split('');\n  var num_arr_join_num_arr = num_arr_join_num_str.split('');\n  var num_arr_rev_join_num_arr_join = num_arr_rev_join_num_arr.join('');\n  var num_arr_join_num_arr_join = num_arr_join_num_arr.join('');\n  var num_arr_rev_join_num_arr_join_num = parseInt(num_arr_rev_join_num_arr_join);\n  var num_arr_join_num_arr_join_num = parseInt(num_arr_join_num_arr_join);\n  var num_arr_rev_join_num_arr_join_num_str = num_arr_rev_join_num_arr_join_num.toString();\n  var num_arr_join_num_arr_join_num_str = num_arr_join_num_arr_join_num.toString();\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_arr = num_str.split('');\n    var mid = Math.floor(num_len/2);\n    var left = mid - 1;\n    var right = num_len % 2 === 0 ? mid : mid + 1;\n    var left_arr = num_arr.slice(0, mid);\n    var right_arr = num_arr.slice(right, num_len);\n    var right_arr_rev = right_arr.reverse();\n    var left_arr_rev = left_arr.reverse();\n    var left_arr_rev_str = left_arr_rev.join('');\n    var right_arr_rev_str = right_arr_rev.join('');\n    if(left_arr_rev_str < right_arr_rev_str){\n        var new_num = num_arr.slice(0, mid).concat(left_arr_rev).join('');\n        return parseInt(new_num);\n    }\n    else{\n        var left_arr_rev_int = parseInt(left_arr_rev_str);\n        var left_arr_rev_int_plus_one = left_arr_rev_int + 1;\n        var left_arr_rev_int_plus_one_str = left_arr_rev_int_plus_one.toString();\n        var left_arr_rev_int_plus_one_len = left_arr_rev_int_plus_one_str.length;\n        var left_arr_rev_int_plus_one_arr = left_arr_rev_int_plus_one_str.split('');\n        var left_arr_rev_int_plus_one_arr_rev = left_arr_rev_int_plus_one_arr.reverse();\n        var left_arr_rev_int_plus_one_arr_rev_str = left_arr_rev_int_plus_one_arr_rev.join('');\n        var left_arr_rev_int_plus_one_arr_rev_int = parseInt(left_arr_rev_int",
    "    let num_str = num.toString();\n    let num_str_len = num_str.length;\n    let num_str_len_half = Math.floor(num_str_len/2);\n    let num_str_len_half_ceil = Math.ceil(num_str_len/2);\n    let num_str_len_half_ceil_minus_one = num_str_len_half_ceil - 1;\n    let num_str_len_half_ceil_minus_two = num_str_len_half_ceil - 2;\n    let num_str_len_half_ceil_minus_three = num_str_len_half_ceil - 3;\n    let num_str_len_half_ceil_minus_four = num_str_len_half_ceil - 4;\n    let num_str_len_half_ceil_minus_five = num_str_len_half_ceil - 5;\n    let num_str_len_half_ceil_minus_six = num_str_len_half_ceil - 6;\n    let num_str_len_half_ceil_minus_seven = num_str_len_half_ceil - 7;\n    let num_str_len_half_ceil_minus_eight = num_str_len_half_ceil - 8;\n    let num_str_len_half_ceil_minus_nine = num_str_len_half_ceil - 9;\n    let num_str_len_half_ceil_minus_ten = num_str_len_half_ceil - 10;\n    let num_str_len_half_ceil_minus_eleven = num_str_len_half_ceil - 11;\n    let num_str_len_half_ceil_minus_twelve = num_str_len_half_ceil - 12;\n    let num_str_len_half_ceil_minus_thirteen = num_str_len_half_ceil - 13;\n    let num_str_len_half_ceil_minus_fourteen = num_str_len_half_ceil",
    "    var num_str = num.toString();\n    var num_length = num_str.length;\n    var num_half = Math.floor(num_length/2);\n    var num_left = num_str.substring(0,num_half);\n    var num_right = num_str.substring(num_length-num_half,num_length);\n    var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n    var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n    var num_left_rev_int = parseInt(num_left_rev);\n    var num_right_rev_int = parseInt(num_right_rev);\n    var num_left_int = parseInt(num_left);\n    var num_right_int = parseInt(num_right);\n    if(num_left_rev_int>num_right_rev_int){\n        num_right = num_left_rev;\n    }else{\n        num_left = (num_left_int+1).toString();\n        num_right = num_left.split(\"\").reverse().join(\"\");\n    }\n    if(num_length%2==0){\n        return parseInt(num_left+num_right);\n    }else{\n        return parseInt(num_left+num_str[num_half]+num_right);\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid = Math.floor(num_len/2);\n    let left_half = num_str.substring(0, mid);\n    let right_half = num_str.substring(mid + num_len % 2, num_len);\n    let right_half_rev = right_half.split('').reverse().join('');\n    if(left_half < right_half_rev){\n        return parseInt(left_half + num_str.substring(mid, mid + num_len % 2) + right_half_rev);\n    }\n    let new_left_half = (parseInt(left_half) + 1).toString();\n    let new_right_half_rev = new_left_half.substring(0, mid).split('').reverse().join('');\n    return parseInt(new_left_half + num_str.substring(mid, mid + num_len % 2) + new_right_half_rev);\n}\n",
    "    var num_str = num.toString();\n    var num_length = num_str.length;\n    var num_half_length = Math.floor(num_length/2);\n    var num_half_str = num_str.substring(0,num_half_length);\n    var num_half_str_rev = num_half_str.split('').reverse().join('');\n    var num_half_str_rev_int = parseInt(num_half_str_rev);\n    var num_half_str_int = parseInt(num_half_str);\n    var num_half_str_rev_int_plus_one = num_half_str_rev_int + 1;\n    var num_half_str_rev_int_plus_one_str = num_half_str_rev_int_plus_one.toString();\n    var num_half_str_rev_int_plus_one_str_rev = num_half_str_rev_int_plus_one_str.split('').reverse().join('');\n    var num_half_str_rev_int_plus_one_str_rev_int = parseInt(num_half_str_rev_int_plus_one_str_rev);\n    var num_half_str_rev_int_plus_one_str_rev_int_plus_one = num_half_str_rev_int_plus_one_str_rev_int + 1;\n    var num_half_str_rev_int_plus_one_str_rev_int_plus_one_str = num_half_str_rev_int_plus_one_str_rev_int_plus_one.toString();\n    var num_half_str_rev_int_plus_one_str_rev_int_plus_one_str_rev = num_half_str_rev_int_plus_one_str_rev_int_plus_one_str.split('').reverse().join('');\n    var num_half_str_rev_int_plus_one_str_rev_int_plus_one_str_rev_int = parseInt(num_half_str_rev_int",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var mid = Math.floor(num_len/2);\n    var left = num_str.substr(0,mid);\n    var right = num_str.substr(mid+num_len%2,num_len);\n    var left_rev = left.split('').reverse().join('');\n    var right_rev = right.split('').reverse().join('');\n    var left_int = parseInt(left);\n    var right_int = parseInt(right);\n    var left_rev_int = parseInt(left_rev);\n    var right_rev_int = parseInt(right_rev);\n    if(left_int == right_rev_int){\n        if(left_rev_int > right_int){\n            return parseInt(left+right_rev);\n        }\n        else{\n            var left_int_plus = left_int+1;\n            var left_str_plus = left_int_plus.toString();\n            var left_str_plus_rev = left_str_plus.split('').reverse().join('');\n            return parseInt(left_str_plus+left_str_plus_rev);\n        }\n    }\n    else{\n        return parseInt(left+left_rev);\n    }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_str.slice(0,half_len);\n  var right_half = num_str.slice(half_len+num_len%2);\n  var left_half_rev = left_half.split('').reverse().join('');\n  var new_num = left_half + left_half_rev;\n  if(new_num > num_str){\n    return parseInt(new_num);\n  }else{\n    var left_half_int = parseInt(left_half);\n    left_half_int++;\n    left_half = left_half_int.toString();\n    left_half_rev = left_half.split('').reverse().join('');\n    new_num = left_half + left_half_rev;\n    return parseInt(new_num);\n  }\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_arr = num_str.split('');\n    var num_arr_rev = num_arr.slice().reverse();\n    var num_arr_rev_str = num_arr_rev.join('');\n    var num_arr_rev_int = parseInt(num_arr_rev_str);\n    var num_arr_rev_int_str = num_arr_rev_int.toString();\n    var num_arr_rev_int_len = num_arr_rev_int_str.length;\n    var num_arr_rev_int_arr = num_arr_rev_int_str.split('');\n    var num_arr_rev_int_arr_rev = num_arr_rev_int_arr.slice().reverse();\n    var num_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev.join('');\n    var num_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_str);\n    var num_arr_rev_int_arr_rev_int_str = num_arr_rev_int_arr_rev_int.toString();\n    var num_arr_rev_int_arr_rev_int_len = num_arr_rev_int_arr_rev_int_str.length;\n    var num_arr_rev_int_arr_rev_int_arr = num_arr_rev_int_arr_rev_int_str.split('');\n    var num_arr_rev_int_arr_rev_int_arr_rev = num_arr_rev_int_arr_rev_int_arr.slice().reverse();\n    var num_arr_rev_int_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev_int_arr_rev.join('');\n    var num_arr_rev_int_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_int_arr_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_str.split('').reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_int = parseInt(num_arr_rev_str);\n  var num_arr_rev_int_str = num_arr_rev_int.toString();\n  var num_arr_rev_int_len = num_arr_rev_int_str.length;\n  var num_arr_rev_int_arr = num_arr_rev_int_str.split('');\n  var num_arr_rev_int_arr_rev = num_arr_rev_int_str.split('').reverse();\n  var num_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev.join('');\n  var num_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_str);\n  var num_arr_rev_int_arr_rev_int_str = num_arr_rev_int_arr_rev_int.toString();\n  var num_arr_rev_int_arr_rev_int_len = num_arr_rev_int_arr_rev_int_str.length;\n  var num_arr_rev_int_arr_rev_int_arr = num_arr_rev_int_arr_rev_int_str.split('');\n  var num_arr_rev_int_arr_rev_int_arr_rev = num_arr_rev_int_arr_rev_int_str.split('').reverse();\n  var num_arr_rev_int_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev_int_arr_rev.join('');\n  var num_arr_rev_int_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var mid = Math.floor(num_len/2);\n  var left_half = num_str.substring(0, mid);\n  var right_half = num_str.substring(mid + num_len % 2, num_len);\n  var next_palindrome = parseInt(left_half + (num_len % 2 ? num_str[mid] : '') + left_half.split('').reverse().join(''));\n  if(next_palindrome > num){\n    return next_palindrome;\n  }\n  if(left_half.length === 0){\n    return num_len % 2 ? 10 : 9;\n  }\n  var left_half_int = parseInt(left_half);\n  var next_left_half_int = left_half_int + 1;\n  var next_left_half = next_left_half_int.toString();\n  return parseInt(next_left_half + (num_len % 2 ? '0' : '') + next_left_half.split('').reverse().join(''));\n}\n",
    "  var temp = num;\n  var palindrome = false;\n  var num_length = num.toString().length;\n  var num_array = [];\n  var num_array_reverse = [];\n  var num_array_reverse_join = [];\n  var num_array_reverse_join_int = 0;\n  var num_array_reverse_join_int_plus_one = 0;\n  var num_array_reverse_join_int_plus_one_string = \"\";\n  var num_array_reverse_join_int_plus_one_string_array = [];\n  var num_array_reverse_join_int_plus_one_string_array_reverse = [];\n  var num_array_reverse_join_int_plus_one_string_array_reverse_join = [];\n  var num_array_reverse_join_int_plus_one_string_array_reverse_join_int = 0;\n  var num_array_reverse_join_int_plus_one_string_array_reverse_join_int_plus_one = 0;\n  var num_array_reverse_join_int_plus_one_string_array_reverse_join_int_plus_one_string = \"\";\n  var num_array_reverse_join_int_plus_one_string_array_reverse_join_int_plus_one_string_array = [];\n  var num_array_reverse_join_int_plus_one_string_array_reverse_join_int_plus_one_string_array_reverse = [];\n  var num_array_reverse_join_int_plus_one_string_array_reverse_join_int_plus_one_string_array_reverse_join = [];\n  var num_array_reverse_join_int_plus_one_string_array_reverse_join_int_plus_one_string_array_reverse_join_int = 0;\n  var num_array_reverse_join_int_plus_one_string_array_reverse_join_int_plus_one_string_array_reverse_join_int_plus_one = 0;\n  var num_array_reverse_join_int_plus_one_string_array_reverse_join",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var left_half = num_str.substring(0, Math.floor(num_len/2));\n  var right_half = num_str.substring(Math.ceil(num_len/2));\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var num_rev = left_half + left_half_rev;\n  var num_rev_int = parseInt(num_rev);\n  if (num_rev_int > num){\n    return num_rev_int;\n  }\n  else {\n    var left_half_int = parseInt(left_half);\n    var left_half_int_plus_one = left_half_int + 1;\n    var left_half_plus_one = left_half_int_plus_one.toString();\n    var left_half_plus_one_rev = left_half_plus_one.split(\"\").reverse().join(\"\");\n    var num_rev_plus_one = left_half_plus_one + left_half_plus_one_rev;\n    return parseInt(num_rev_plus_one);\n  }\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len/2);\n    var num_left = num_str.substring(0, num_half);\n    var num_right = num_str.substring(num_len-num_half, num_len);\n    var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n    if(num_left_rev > num_right){\n        return parseInt(num_left + num_left_rev);\n    }\n    else{\n        var num_left_int = parseInt(num_left);\n        num_left_int++;\n        num_left = num_left_int.toString();\n        num_left_rev = num_left.split(\"\").reverse().join(\"\");\n        return parseInt(num_left + num_left_rev);\n    }\n}\n",
    "  //check if num is a palindrome\n  if(is_palindrome(num)){\n    //if it is, add 1 to num and check if that is a palindrome\n    if(is_palindrome(num+1)){\n      return num+1;\n    }\n    //if it isn't, add 2 to num and check if that is a palindrome\n    else if(is_palindrome(num+2)){\n      return num+2;\n    }\n    //if it isn't, add 3 to num and check if that is a palindrome\n    else if(is_palindrome(num+3)){\n      return num+3;\n    }\n    //if it isn't, add 4 to num and check if that is a palindrome\n    else if(is_palindrome(num+4)){\n      return num+4;\n    }\n    //if it isn't, add 5 to num and check if that is a palindrome\n    else if(is_palindrome(num+5)){\n      return num+5;\n    }\n    //if it isn't, add 6 to num and check if that is a palindrome\n    else if(is_palindrome(num+6)){\n      return num+6;\n    }\n    //if it isn't, add 7 to num and check if that is a palindrome\n    else if(is_palindrome(num+7)){\n      return num+7;\n    }\n    //if it isn't, add 8 to num and check if that is a palindrome\n    else if(is_palindrome(num+8)){\n      return num+8;\n    }\n    //if it isn't, add 9 to num and check if that is a palindrome\n    else if(is_palindrome(num+9)){\n      return num+9;\n    }\n  }\n  //if num is not a palindrome, add 1 to num and check if that is a palindrome\n  else if(is_palindrome(num+1)){\n    return num+1;\n  }\n  //if it isn't, add 2 to num and",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_str.slice(0,half_len);\n  var right_half = num_str.slice(half_len+num_len%2,num_len);\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  var left_half_int = parseInt(left_half);\n  var right_half_int = parseInt(right_half);\n  var left_half_rev_int = parseInt(left_half_rev);\n  var right_half_rev_int = parseInt(right_half_rev);\n  var next_palindrome = 0;\n  if(left_half_int > right_half_int){\n    next_palindrome = parseInt(left_half + right_half_rev);\n  }\n  else if(left_half_int < right_half_int){\n    next_palindrome = parseInt(left_half_rev + right_half);\n  }\n  else if(left_half_int === right_half_int){\n    if(left_half_int === right_half_rev_int){\n      if(num_len%2 === 0){\n        next_palindrome = parseInt(left_half_rev + right_half_rev);\n      }\n      else{\n        next_palindrome = parseInt(left_half_rev + \"0\" + right_half_rev);\n      }\n    }\n    else{\n      next_palindrome = parseInt(left_half_rev + right_half_rev);\n    }\n  }\n  return next_palindrome;\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var mid = Math.floor(num_len/2);\n    var left = num_str.substr(0, mid);\n    var right = num_str.substr(mid + num_len % 2, num_len);\n    var right_rev = right.split('').reverse().join('');\n    if(left < right_rev){\n        return parseInt(left + num_str[mid] + right_rev);\n    }\n    var left_int = parseInt(left);\n    var left_int_plus_one = left_int + 1;\n    var left_plus_one = left_int_plus_one.toString();\n    var left_plus_one_len = left_plus_one.length;\n    var right_plus_one = left_plus_one.substr(left_plus_one_len - mid, mid);\n    return parseInt(left_plus_one + num_str[mid] + right_plus_one);\n}\n",
    "  var num = num.toString();\n  var num_length = num.length;\n  var num_half = Math.floor(num_length/2);\n  var num_left = num.substring(0,num_half);\n  var num_right = num.substring(num_half,num_length);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  var num_left_rev_num = parseInt(num_left_rev);\n  var num_right_rev_num = parseInt(num_right_rev);\n  var num_left_num = parseInt(num_left);\n  var num_right_num = parseInt(num_right);\n  var num_left_rev_num_next = num_left_rev_num + 1;\n  var num_left_rev_num_next_str = num_left_rev_num_next.toString();\n  var num_left_rev_num_next_str_length = num_left_rev_num_next_str.length;\n  var num_left_rev_num_next_str_half = Math.floor(num_left_rev_num_next_str_length/2);\n  var num_left_rev_num_next_str_left = num_left_rev_num_next_str.substring(0,num_left_rev_num_next_str_half);\n  var num_left_rev_num_next_str_right = num_left_rev_num_next_str.substring(num_left_rev_num_next_str_half,num_left_rev_num_next_str_length);\n  var num_left_rev_num_next_str_left_rev = num_left_rev_num_next_str_left.split(\"\").reverse().join(\"\");\n  var num_left_rev_num_next_str_right_rev = num_left_rev_num_next_str_right.split(\"\").reverse().join(\"\");\n  var num_left_rev_num_next_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var left_half = num_str.substring(0, Math.floor(num_len/2));\n  var right_half = num_str.substring(Math.ceil(num_len/2));\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var next_palindrome = parseInt(left_half + left_half_rev);\n  if(next_palindrome > num){\n    return next_palindrome;\n  }\n  if(num_len % 2 === 0){\n    left_half = (parseInt(left_half) + 1).toString();\n  } else {\n    left_half = (parseInt(left_half + right_half[0]) + 1).toString();\n  }\n  left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  return parseInt(left_half + left_half_rev);\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var mid = Math.floor(num_len/2);\n  var left_half = num_str.substring(0, mid);\n  var right_half = num_str.substring(mid+1, num_len);\n  var left_half_rev = left_half.split('').reverse().join('');\n  var right_half_rev = right_half.split('').reverse().join('');\n  var left_half_num = parseInt(left_half);\n  var right_half_num = parseInt(right_half);\n  var left_half_rev_num = parseInt(left_half_rev);\n  var right_half_rev_num = parseInt(right_half_rev);\n  if(num_len % 2 == 0){\n    if(left_half_num < right_half_num){\n      return parseInt(left_half + left_half_rev);\n    }\n    else if(left_half_num > right_half_num){\n      return parseInt(left_half_rev + left_half);\n    }\n    else{\n      if(left_half_num == 9){\n        var new_num = parseInt(left_half_num + 1);\n        var new_num_str = new_num.toString();\n        var new_num_len = new_num_str.length;\n        var new_mid = Math.floor(new_num_len/2);\n        var new_left_half = new_num_str.substring(0, new_mid);\n        var new_right_half = new_num_str.substring(new_mid+1, new_num_len);\n        var new_left_half_rev = new_left_half.split('').reverse().join('');\n        var new_right_half_rev = new_right_half.split('').reverse().join('');\n        return parseInt(new_left_half_rev + new_left_half);\n      }\n      else{\n        var new_num = parseInt(",
    "    var num = num.toString();\n    var num_length = num.length;\n    var mid = Math.floor(num_length/2);\n    var left = num.substr(0,mid);\n    var right = num.substr(mid+1);\n    var left_reverse = left.split(\"\").reverse().join(\"\");\n    var right_reverse = right.split(\"\").reverse().join(\"\");\n    var left_reverse_num = parseInt(left_reverse);\n    var right_reverse_num = parseInt(right_reverse);\n    var left_num = parseInt(left);\n    var right_num = parseInt(right);\n    if(left_num > right_num){\n        if(num_length%2 == 0){\n            return parseInt(left+right_reverse);\n        }\n        else{\n            return parseInt(left+num[mid]+right_reverse);\n        }\n    }\n    else if(left_num < right_num){\n        if(num_length%2 == 0){\n            return parseInt(left_reverse+right);\n        }\n        else{\n            return parseInt(left_reverse+num[mid]+right);\n        }\n    }\n    else{\n        if(num_length%2 == 0){\n            if(left_num == 9){\n                return parseInt(left_reverse+right);\n            }\n            else{\n                return parseInt(left_reverse+right_reverse);\n            }\n        }\n        else{\n            if(num[mid] == 9){\n                return parseInt(left_reverse+num[mid]+right);\n            }\n            else{\n                return parseInt(left_reverse+num[mid]+right_reverse);\n            }\n        }\n    }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.substring(0, num_half);\n  var num_right = num_str.substring(num_len - num_half, num_len);\n  var num_left_rev = num_left.split('').reverse().join('');\n  var num_right_rev = num_right.split('').reverse().join('');\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_rev_int = parseInt(num_right_rev);\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_rev_int_str = num_left_rev_int.toString();\n  var num_right_rev_int_str = num_right_rev_int.toString();\n  var num_left_int_str = num_left_int.toString();\n  var num_right_int_str = num_right_int.toString();\n  var num_left_rev_int_str_len = num_left_rev_int_str.length;\n  var num_right_rev_int_str_len = num_right_rev_int_str.length;\n  var num_left_int_str_len = num_left_int_str.length;\n  var num_right_int_str_len = num_right_int_str.length;\n  var num_left_rev_int_str_pad = num_left_rev_int_str_len < num_half ? '0'.repeat(num_half - num_left_rev_int_str_len) + num_left_rev_int_str : num_left_rev_int_str;\n  var num_right_rev_int_str_pad = num_right_rev_int_str_len < num_half ? '0'.repeat(num_half - num_right_rev",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var is_odd = num_len % 2;\n  var left_half = num_arr.slice(0, num_len/2);\n  var right_half = num_arr.slice(num_len/2 + is_odd);\n  var left_half_rev = left_half.slice().reverse();\n  var right_half_rev = right_half.slice().reverse();\n  var left_half_rev_str = left_half_rev.join('');\n  var right_half_rev_str = right_half_rev.join('');\n  var left_half_rev_num = parseInt(left_half_rev_str);\n  var right_half_rev_num = parseInt(right_half_rev_str);\n  var left_half_num = parseInt(left_half.join(''));\n  var right_half_num = parseInt(right_half.join(''));\n  var num_arr_rev = num_arr.slice().reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_num = parseInt(num_arr_rev_str);\n  var num_arr_str = num_arr.join('');\n  var num_arr_num = parseInt(num_arr_str);\n  var next_palindrome = 0;\n  if(num_arr_num === num_arr_rev_num){\n    if(is_odd){\n      if(left_half_num === 9){\n        next_palindrome = parseInt(left_half_num.toString() + '0' + left_half_num.toString());\n      } else {\n        next_palindrome = parseInt(left_half_num.toString() + (left_half_num + 1).toString());\n      }\n    } else {\n      if(left_half_num === 9){\n        next_palindrome = parseInt(left_half_num.toString",
    "    var num_str = num.toString();\n    var len = num_str.length;\n    var mid = Math.floor(len/2);\n    var left_half = num_str.substr(0, mid);\n    var right_half = (len % 2) ? num_str.substr(mid + 1) : num_str.substr(mid);\n    var next_palindrome = parseInt(left_half + (len % 2 ? num_str[mid] : '') + left_half.split('').reverse().join(''));\n    if(next_palindrome > num){\n        return next_palindrome;\n    }\n    if(left_half.length === 0){\n        return parseInt('1' + '0'.repeat(len - 1) + '1');\n    }\n    var left_half_int = parseInt(left_half);\n    var increment = Math.pow(10, mid);\n    if(len % 2){\n        increment = Math.floor(increment / 10);\n    }\n    var next_left_half_int = left_half_int + increment;\n    var next_left_half_str = next_left_half_int.toString();\n    var next_palindrome = parseInt(next_left_half_str + (len % 2 ? '0' : '') + next_left_half_str.split('').reverse().join(''));\n    return next_palindrome;\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.substring(0, num_half);\n  var num_right = num_str.substring(num_len-num_half);\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  if(num_left_int < num_right_int){\n    num_left_int++;\n    num_left = num_left_int.toString();\n    num_right = num_left.split(\"\").reverse().join(\"\");\n  }\n  else if(num_left_int > num_right_int){\n    num_right = num_left.split(\"\").reverse().join(\"\");\n  }\n  else{\n    num_left_int++;\n    num_left = num_left_int.toString();\n    num_right = num_left.split(\"\").reverse().join(\"\");\n  }\n  return parseInt(num_left+num_right);\n}\n",
    "    var num_str = num.toString();\n    var num_length = num_str.length;\n    var num_half_length = Math.floor(num_length / 2);\n    var num_half_str = num_str.substring(0, num_half_length);\n    var num_half_str_reverse = num_half_str.split(\"\").reverse().join(\"\");\n    var num_half_str_reverse_int = parseInt(num_half_str_reverse);\n    var num_half_str_int = parseInt(num_half_str);\n    var num_half_str_reverse_int_plus_one = num_half_str_reverse_int + 1;\n    var num_half_str_reverse_int_plus_one_str = num_half_str_reverse_int_plus_one.toString();\n    var num_half_str_reverse_int_plus_one_str_reverse = num_half_str_reverse_int_plus_one_str.split(\"\").reverse().join(\"\");\n    var num_half_str_reverse_int_plus_one_str_reverse_int = parseInt(num_half_str_reverse_int_plus_one_str_reverse);\n    var num_half_str_reverse_int_plus_one_str_reverse_int_plus_one = num_half_str_reverse_int_plus_one_str_reverse_int + 1;\n    var num_half_str_reverse_int_plus_one_str_reverse_int_plus_one_str = num_half_str_reverse_int_plus_one_str_reverse_int_plus_one.toString();\n    var num_half_str_reverse_int_plus_one_str_reverse_int_plus_one_str_reverse = num_half_str_reverse_int_plus_one_str_reverse_int_plus_one_str.split(\"\").reverse().join(\"\");\n    var num_half_str_reverse_int_plus_one_str_reverse_int_plus_one_str_reverse_int = parseInt(num_half_str_reverse_int_plus_one_str",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_arr.slice().reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_num = parseInt(num_arr_rev_str);\n  var num_arr_rev_num_str = num_arr_rev_num.toString();\n  var num_arr_rev_num_len = num_arr_rev_num_str.length;\n  var num_arr_rev_num_arr = num_arr_rev_num_str.split('');\n  var num_arr_rev_num_arr_rev = num_arr_rev_num_arr.slice().reverse();\n  var num_arr_rev_num_arr_rev_str = num_arr_rev_num_arr_rev.join('');\n  var num_arr_rev_num_arr_rev_num = parseInt(num_arr_rev_num_arr_rev_str);\n  var num_arr_rev_num_arr_rev_num_str = num_arr_rev_num_arr_rev_num.toString();\n  var num_arr_rev_num_arr_rev_num_len = num_arr_rev_num_arr_rev_num_str.length;\n  var num_arr_rev_num_arr_rev_num_arr = num_arr_rev_num_arr_rev_num_str.split('');\n  var num_arr_rev_num_arr_rev_num_arr_rev = num_arr_rev_num_arr_rev_num_arr.slice().reverse();\n  var num_arr_rev_num_arr_rev_num_arr_rev_str = num_arr_rev_num_arr_rev_num_arr_rev.join('');\n  var num_arr_rev_num_arr_rev_num_arr_rev_num = parseInt(num_arr_rev_num_arr_rev_num_arr_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_arr.slice().reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_int = parseInt(num_arr_rev_str);\n  var num_arr_rev_int_str = num_arr_rev_int.toString();\n  var num_arr_rev_int_len = num_arr_rev_int_str.length;\n  var num_arr_rev_int_arr = num_arr_rev_int_str.split('');\n  var num_arr_rev_int_arr_rev = num_arr_rev_int_arr.slice().reverse();\n  var num_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev.join('');\n  var num_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_str);\n  var num_arr_rev_int_arr_rev_int_str = num_arr_rev_int_arr_rev_int.toString();\n  var num_arr_rev_int_arr_rev_int_len = num_arr_rev_int_arr_rev_int_str.length;\n  var num_arr_rev_int_arr_rev_int_arr = num_arr_rev_int_arr_rev_int_str.split('');\n  var num_arr_rev_int_arr_rev_int_arr_rev = num_arr_rev_int_arr_rev_int_arr.slice().reverse();\n  var num_arr_rev_int_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev_int_arr_rev.join('');\n  var num_arr_rev_int_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_int_arr_",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_mid = Math.floor(num_len/2);\n    var num_left = num_str.slice(0, num_mid);\n    var num_right = num_str.slice(num_mid + num_len % 2, num_len);\n    var num_left_rev = num_left.split('').reverse().join('');\n    var num_right_rev = num_right.split('').reverse().join('');\n    var num_left_rev_int = parseInt(num_left_rev);\n    var num_right_rev_int = parseInt(num_right_rev);\n    var num_left_int = parseInt(num_left);\n    var num_right_int = parseInt(num_right);\n    if(num_left_rev_int > num_right_rev_int){\n        return parseInt(num_left + num_left_rev);\n    }\n    else if(num_left_rev_int == num_right_rev_int){\n        if(num_left_int == 9){\n            var num_left_int_str = num_left_int.toString();\n            var num_left_int_str_len = num_left_int_str.length;\n            var num_left_int_str_mid = Math.floor(num_left_int_str_len/2);\n            var num_left_int_str_left = num_left_int_str.slice(0, num_left_int_str_mid);\n            var num_left_int_str_right = num_left_int_str.slice(num_left_int_str_mid + num_left_int_str_len % 2, num_left_int_str_len);\n            var num_left_int_str_left_int = parseInt(num_left_int_str_left);\n            var num_left_int_str_right_int = parseInt(num_left_int_str_right);\n            if(num_left_int_str_left_int ==",
    "  var num_string = num.toString();\n  var num_length = num_string.length;\n  var num_array = num_string.split(\"\");\n  var num_array_length = num_array.length;\n  var num_array_middle = Math.floor(num_array_length/2);\n  var num_array_left = num_array.slice(0,num_array_middle);\n  var num_array_right = num_array.slice(num_array_middle);\n  var num_array_right_reversed = num_array_right.reverse();\n  var num_array_left_reversed = num_array_left.reverse();\n  var num_array_left_reversed_string = num_array_left_reversed.join(\"\");\n  var num_array_right_reversed_string = num_array_right_reversed.join(\"\");\n  var num_array_left_reversed_int = parseInt(num_array_left_reversed_string);\n  var num_array_right_reversed_int = parseInt(num_array_right_reversed_string);\n  var num_array_left_reversed_int_plus_one = num_array_left_reversed_int + 1;\n  var num_array_left_reversed_int_plus_one_string = num_array_left_reversed_int_plus_one.toString();\n  var num_array_left_reversed_int_plus_one_array = num_array_left_reversed_int_plus_one_string.split(\"\");\n  var num_array_left_reversed_int_plus_one_array_length = num_array_left_reversed_int_plus_one_array.length;\n  var num_array_left_reversed_int_plus_one_array_middle = Math.floor(num_array_left_reversed_int_plus_one_array_length/2);\n  var num_array_left_reversed_int_plus_one_array_left = num_array_left",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var num_str_len_half = Math.floor(num_str_len/2);\n  var num_str_len_half_ceil = Math.ceil(num_str_len/2);\n  var num_str_len_half_ceil_minus_one = num_str_len_half_ceil - 1;\n  var num_str_len_half_ceil_plus_one = num_str_len_half_ceil + 1;\n  var num_str_len_half_ceil_plus_two = num_str_len_half_ceil + 2;\n  var num_str_len_half_ceil_plus_three = num_str_len_half_ceil + 3;\n  var num_str_len_half_ceil_plus_four = num_str_len_half_ceil + 4;\n  var num_str_len_half_ceil_plus_five = num_str_len_half_ceil + 5;\n  var num_str_len_half_ceil_plus_six = num_str_len_half_ceil + 6;\n  var num_str_len_half_ceil_plus_seven = num_str_len_half_ceil + 7;\n  var num_str_len_half_ceil_plus_eight = num_str_len_half_ceil + 8;\n  var num_str_len_half_ceil_plus_nine = num_str_len_half_ceil + 9;\n  var num_str_len_half_ceil_plus_ten = num_str_len_half_ceil + 10;\n  var num_str_len_half_ceil_plus_eleven = num_str_len_half_ceil + 11;\n  var num_str_len_half_ceil_plus_twelve = num_str_len_half_ceil + 12;\n  var num_str_len_half_ceil_plus_thirteen = num_str_len_half_ceil +",
    "  var num_str = num.toString();\n  var len = num_str.length;\n  var half_len = Math.floor(len/2);\n  var left = num_str.slice(0, half_len);\n  var right = num_str.slice(half_len + len%2);\n  var next_palindrome = parseInt(left + right.split(\"\").reverse().join(\"\"));\n  if(next_palindrome > num){\n    return next_palindrome;\n  }\n  else{\n    var left_num = parseInt(left) + 1;\n    var left_str = left_num.toString();\n    var left_str_len = left_str.length;\n    if(left_str_len > half_len){\n      left_str = left_str.slice(left_str_len - half_len);\n    }\n    else{\n      while(left_str_len < half_len){\n        left_str = \"0\" + left_str;\n        left_str_len++;\n      }\n    }\n    return parseInt(left_str + left_str.split(\"\").reverse().join(\"\"));\n  }\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len/2);\n    var num_left = num_str.substring(0,num_half);\n    var num_right = num_str.substring(num_len-num_half,num_len);\n    var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n    var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n    var num_left_int = parseInt(num_left);\n    var num_right_int = parseInt(num_right);\n    var num_left_rev_int = parseInt(num_left_rev);\n    var num_right_rev_int = parseInt(num_right_rev);\n    var num_left_rev_int_plus1 = num_left_rev_int + 1;\n    var num_left_rev_int_plus1_str = num_left_rev_int_plus1.toString();\n    var num_left_rev_int_plus1_str_len = num_left_rev_int_plus1_str.length;\n    var num_left_rev_int_plus1_str_half = Math.floor(num_left_rev_int_plus1_str_len/2);\n    var num_left_rev_int_plus1_str_left = num_left_rev_int_plus1_str.substring(0,num_left_rev_int_plus1_str_half);\n    var num_left_rev_int_plus1_str_right = num_left_rev_int_plus1_str.substring(num_left_rev_int_plus1_str_len-num_left_rev_int_plus1_str_half,num_left_rev_int_plus1_str_len);\n    var num_left_rev_int_plus1_str_left_rev = num_left_rev_int_plus1_str_left.split(\"\").reverse().join(\"\");\n    var num_left_rev_int_",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var num_str_half_len = Math.floor(num_str_len/2);\n  var num_str_half = num_str.substring(0, num_str_half_len);\n  var num_str_half_rev = num_str_half.split(\"\").reverse().join(\"\");\n  var num_str_half_rev_num = parseInt(num_str_half_rev);\n  var num_str_half_num = parseInt(num_str_half);\n  var num_str_half_rev_num_plus_one = num_str_half_rev_num + 1;\n  var num_str_half_rev_num_plus_one_str = num_str_half_rev_num_plus_one.toString();\n  var num_str_half_rev_num_plus_one_str_len = num_str_half_rev_num_plus_one_str.length;\n  var num_str_half_rev_num_plus_one_str_half_len = Math.floor(num_str_half_rev_num_plus_one_str_len/2);\n  var num_str_half_rev_num_plus_one_str_half = num_str_half_rev_num_plus_one_str.substring(0, num_str_half_rev_num_plus_one_str_half_len);\n  var num_str_half_rev_num_plus_one_str_half_rev = num_str_half_rev_num_plus_one_str_half.split(\"\").reverse().join(\"\");\n  var num_str_half_rev_num_plus_one_str_half_rev_num = parseInt(num_str_half_rev_num_plus_one_str_half_rev);\n  var num_str_half_rev_num_plus_one_str_half_num = parseInt(num_str_half_rev_num_plus_one_str_half);\n  var num_str_half_rev_num_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.substring(0, num_half);\n  var num_right = num_str.substring(num_len - num_half, num_len);\n  var num_right_rev = num_right.split('').reverse().join('');\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right_rev);\n  if(num_left_int < num_right_int){\n    num_left_int++;\n    num_left = num_left_int.toString();\n    num_right = num_left.split('').reverse().join('');\n  }\n  else if(num_left_int > num_right_int){\n    num_right = num_left.split('').reverse().join('');\n  }\n  else{\n    num_left_int++;\n    num_left = num_left_int.toString();\n    num_right = num_left.split('').reverse().join('');\n  }\n  var num_new = num_left + num_right;\n  if(num_len % 2 == 1){\n    num_new = num_left + num_str[num_half] + num_right;\n  }\n  return parseInt(num_new);\n}\n",
    "  var num_str = num.toString();\n  var num_length = num_str.length;\n  var num_half = Math.floor(num_length / 2);\n  var num_left = num_str.slice(0, num_half);\n  var num_right = num_str.slice(num_length - num_half);\n  var num_left_rev = num_left.split('').reverse().join('');\n  if (num_left_rev < num_right) {\n    num_left = (parseInt(num_left) + 1).toString();\n    num_left_rev = num_left.split('').reverse().join('');\n  }\n  var num_new = num_left + num_left_rev;\n  if (num_length % 2 === 1) {\n    num_new = num_left + num_str[num_half] + num_left_rev;\n  }\n  return parseInt(num_new);\n}\n",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var num_str_half_len = Math.floor(num_str_len/2);\n  var num_str_left = num_str.slice(0, num_str_half_len);\n  var num_str_right = num_str.slice(num_str_half_len, num_str_len);\n  var num_str_right_rev = num_str_right.split('').reverse().join('');\n  var num_str_left_rev = num_str_left.split('').reverse().join('');\n  var num_str_left_rev_num = parseInt(num_str_left_rev);\n  var num_str_right_rev_num = parseInt(num_str_right_rev);\n  var num_str_left_num = parseInt(num_str_left);\n  var num_str_right_num = parseInt(num_str_right);\n  var num_str_left_rev_num_next = num_str_left_rev_num + 1;\n  var num_str_left_rev_num_next_str = num_str_left_rev_num_next.toString();\n  var num_str_left_rev_num_next_str_len = num_str_left_rev_num_next_str.length;\n  var num_str_left_rev_num_next_str_half_len = Math.floor(num_str_left_rev_num_next_str_len/2);\n  var num_str_left_rev_num_next_str_left = num_str_left_rev_num_next_str.slice(0, num_str_left_rev_num_next_str_half_len);\n  var num_str_left_rev_num_next_str_right = num_str_left_rev_num_next_str.slice(num_str_left_rev_num_next_str_half_len, num_str_left_rev_num_next_str_len);\n  var num_",
    "  var num_str = num.toString();\n  var num_arr = num_str.split('');\n  var num_len = num_arr.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_arr.slice(0, half_len);\n  var right_half = num_arr.slice(half_len, num_len);\n  var right_half_rev = right_half.reverse();\n  var left_half_rev = left_half.reverse();\n  var left_half_rev_num = parseInt(left_half_rev.join(''));\n  var right_half_rev_num = parseInt(right_half_rev.join(''));\n  var num_rev = parseInt(left_half_rev.concat(right_half_rev).join(''));\n  var num_rev_str = num_rev.toString();\n  var num_rev_len = num_rev_str.length;\n  var num_rev_arr = num_rev_str.split('');\n  var num_rev_half_len = Math.floor(num_rev_len/2);\n  var num_rev_left_half = num_rev_arr.slice(0, num_rev_half_len);\n  var num_rev_right_half = num_rev_arr.slice(num_rev_half_len, num_rev_len);\n  var num_rev_left_half_num = parseInt(num_rev_left_half.join(''));\n  var num_rev_right_half_num = parseInt(num_rev_right_half.join(''));\n  var num_rev_left_half_num_plus_one = num_rev_left_half_num + 1;\n  var num_rev_left_half_num_plus_one_str = num_rev_left_half_num_plus_one.toString();\n  var num_rev_left_half_num_plus_one_arr = num_rev_left_half_num_plus_one_str.split('');\n  var num_rev_left_half_",
    "  var num_array = num.toString().split(\"\");\n  var num_length = num_array.length;\n  var mid = Math.floor(num_length/2);\n  var left = num_array.slice(0, mid);\n  var right = num_array.slice(mid, num_length);\n  var left_reverse = left.slice().reverse();\n  var right_reverse = right.slice().reverse();\n  var left_num = parseInt(left.join(\"\"));\n  var right_num = parseInt(right.join(\"\"));\n  var left_reverse_num = parseInt(left_reverse.join(\"\"));\n  var right_reverse_num = parseInt(right_reverse.join(\"\"));\n  if(left_num < right_num){\n    if(num_length % 2 === 0){\n      return parseInt(left.join(\"\") + left_reverse.join(\"\"));\n    }else{\n      return parseInt(left.join(\"\") + num_array[mid] + left_reverse.join(\"\"));\n    }\n  }else if(left_num > right_num){\n    if(num_length % 2 === 0){\n      return parseInt(left_reverse.join(\"\") + left.join(\"\"));\n    }else{\n      return parseInt(left_reverse.join(\"\") + num_array[mid] + left.join(\"\"));\n    }\n  }else{\n    if(num_length % 2 === 0){\n      if(left_num === 9){\n        return parseInt(left_reverse.join(\"\") + left.join(\"\"));\n      }else{\n        return parseInt(left.join(\"\") + (left_num + 1) + left_reverse.join(\"\"));\n      }\n    }else{\n      if(left_num === 9){\n        return parseInt(left_reverse.join(\"\") + (left_num + 1) + left.join(\"\"));\n      }else{\n        return parseInt(left.join(\"\") + (left_num + 1) + left_reverse.join(\"\"));\n      }\n    }\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_arr = num_str.split('');\n  var num_len = num_arr.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_arr.slice(0,half_len);\n  var right_half = num_arr.slice(half_len,num_len).reverse();\n  var left_half_num = parseInt(left_half.join(''));\n  var right_half_num = parseInt(right_half.join(''));\n  var result = 0;\n  if(left_half_num === right_half_num){\n    result = parseInt(left_half.join('') + right_half.reverse().join(''));\n  }else if(left_half_num > right_half_num){\n    result = parseInt(left_half.join('') + right_half.reverse().join(''));\n  }else{\n    var left_half_num_new = left_half_num + 1;\n    var left_half_new = left_half_num_new.toString().split('');\n    var right_half_new = left_half_new.slice(0,half_len).reverse();\n    result = parseInt(left_half_new.join('') + right_half_new.join(''));\n  }\n  return result;\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_mid = Math.floor(num_len/2);\n    var num_left = num_str.substring(0, num_mid);\n    var num_right = num_str.substring(num_mid + num_len%2, num_len);\n    var num_left_rev = num_left.split('').reverse().join('');\n    var num_right_rev = num_right.split('').reverse().join('');\n    var num_left_rev_num = parseInt(num_left_rev);\n    var num_right_rev_num = parseInt(num_right_rev);\n    var num_left_num = parseInt(num_left);\n    var num_right_num = parseInt(num_right);\n    var num_left_rev_num_str = num_left_rev_num.toString();\n    var num_right_rev_num_str = num_right_rev_num.toString();\n    var num_left_num_str = num_left_num.toString();\n    var num_right_num_str = num_right_num.toString();\n    var num_left_rev_num_len = num_left_rev_num_str.length;\n    var num_right_rev_num_len = num_right_rev_num_str.length;\n    var num_left_num_len = num_left_num_str.length;\n    var num_right_num_len = num_right_num_str.length;\n    var num_left_rev_num_mid = Math.floor(num_left_rev_num_len/2);\n    var num_right_rev_num_mid = Math.floor(num_right_rev_num_len/2);\n    var num_left_num_mid = Math.floor(num_left_num_len/2);\n    var num_right_num_mid = Math.floor(num_right_num_len/2);\n    var num_left_rev_num_left = num_left",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let half_len = Math.floor(num_len/2);\n    let left_half = num_str.slice(0, half_len);\n    let right_half = num_str.slice(half_len + num_len % 2);\n    let left_half_rev = left_half.split('').reverse().join('');\n    let right_half_rev = right_half.split('').reverse().join('');\n    let left_half_int = parseInt(left_half);\n    let right_half_int = parseInt(right_half);\n    let left_half_rev_int = parseInt(left_half_rev);\n    let right_half_rev_int = parseInt(right_half_rev);\n    if(left_half_int < right_half_int){\n        if(num_len % 2 == 0){\n            return parseInt(left_half + left_half_rev);\n        }\n        else{\n            return parseInt(left_half + num_str[half_len] + left_half_rev);\n        }\n    }\n    else if(left_half_int > right_half_int){\n        if(num_len % 2 == 0){\n            return parseInt(left_half_rev + left_half);\n        }\n        else{\n            return parseInt(left_half_rev + num_str[half_len] + left_half);\n        }\n    }\n    else{\n        if(num_len % 2 == 0){\n            return parseInt(left_half + left_half_rev);\n        }\n        else{\n            return parseInt(left_half + num_str[half_len] + left_half_rev);\n        }\n    }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var palindrome = false;\n  var palindrome_num = 0;\n  var i = 0;\n  while(palindrome === false){\n    palindrome_num = num_str.substring(0, num_len - i) + num_str.substring(num_len - i).split('').reverse().join('');\n    if(palindrome_num > num){\n      palindrome = true;\n    }\n    else{\n      i++;\n    }\n  }\n  return parseInt(palindrome_num);\n}\n",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var num_str_half_len = Math.floor(num_str_len / 2);\n  var num_str_half_len_plus_one = num_str_half_len + 1;\n  var num_str_half_len_minus_one = num_str_half_len - 1;\n  var num_str_half_len_plus_one_is_odd = num_str_len % 2;\n  var num_str_half_len_plus_one_is_even = !num_str_half_len_plus_one_is_odd;\n  var num_str_half_len_plus_one_is_even_and_num_str_half_len_is_zero = num_str_half_len_plus_one_is_even && num_str_half_len === 0;\n  var num_str_half_len_plus_one_is_even_and_num_str_half_len_is_not_zero = num_str_half_len_plus_one_is_even && num_str_half_len !== 0;\n  var num_str_half_len_plus_one_is_odd_and_num_str_half_len_is_zero = num_str_half_len_plus_one_is_odd && num_str_half_len === 0;\n  var num_str_half_len_plus_one_is_odd_and_num_str_half_len_is_not_zero = num_str_half_len_plus_one_is_odd && num_str_half_len !== 0;\n  var num_str_half_len_plus_one_is_even_and_num_str_half_len_is_not_zero_and_num_str_half_len_minus_one_is_zero = num_str_half_len_plus_one_is_even_and_num_str_half_len_is_not_zero && num_str_half_len_minus_one === 0;\n  var num_str_half",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var half_len = Math.floor(num_len/2);\n    var left_half = num_str.substring(0,half_len);\n    var right_half = num_str.substring(num_len-half_len,num_len);\n    var left_half_int = parseInt(left_half);\n    var right_half_int = parseInt(right_half);\n    var left_half_int_next = left_half_int+1;\n    var left_half_next = left_half_int_next.toString();\n    var left_half_next_len = left_half_next.length;\n    var left_half_next_len_diff = half_len-left_half_next_len;\n    var left_half_next_pad = \"\";\n    for(var i=0;i<left_half_next_len_diff;i++){\n        left_half_next_pad += \"0\";\n    }\n    var left_half_next_pad_left = left_half_next_pad.substring(0,left_half_next_len_diff);\n    var left_half_next_pad_right = left_half_next_pad.substring(left_half_next_len_diff,left_half_next_len_diff*2);\n    var left_half_next_pad_left_rev = left_half_next_pad_left.split(\"\").reverse().join(\"\");\n    var left_half_next_pad_right_rev = left_half_next_pad_right.split(\"\").reverse().join(\"\");\n    var left_half_next_pad_left_rev_int = parseInt(left_half_next_pad_left_rev);\n    var left_half_next_pad_right_rev_int = parseInt(left_half_next_pad_right_rev);\n    var left_half_next_pad_left_rev_int_next = left_half_next_pad_left_rev_int+1;\n    var left_half_next_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_arr.slice().reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_int = parseInt(num_arr_rev_str);\n  var num_arr_rev_int_str = num_arr_rev_int.toString();\n  var num_arr_rev_int_len = num_arr_rev_int_str.length;\n  var num_arr_rev_int_arr = num_arr_rev_int_str.split('');\n  var num_arr_rev_int_arr_rev = num_arr_rev_int_arr.slice().reverse();\n  var num_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev.join('');\n  var num_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_str);\n  var num_arr_rev_int_arr_rev_int_str = num_arr_rev_int_arr_rev_int.toString();\n  var num_arr_rev_int_arr_rev_int_len = num_arr_rev_int_arr_rev_int_str.length;\n  var num_arr_rev_int_arr_rev_int_arr = num_arr_rev_int_arr_rev_int_str.split('');\n  var num_arr_rev_int_arr_rev_int_arr_rev = num_arr_rev_int_arr_rev_int_arr.slice().reverse();\n  var num_arr_rev_int_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev_int_arr_rev.join('');\n  var num_arr_rev_int_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_int_arr_",
    "    num = num.toString();\n    var len = num.length;\n    var mid = Math.floor(len/2);\n    var left = num.substr(0,mid);\n    var right = num.substr(mid+1);\n    var left_rev = left.split('').reverse().join('');\n    var right_rev = right.split('').reverse().join('');\n    var left_int = parseInt(left);\n    var right_int = parseInt(right);\n    var left_rev_int = parseInt(left_rev);\n    var right_rev_int = parseInt(right_rev);\n    if(left_int < left_rev_int){\n        if(len%2==0){\n            return left+left_rev;\n        }else{\n            return left+num[mid]+left_rev;\n        }\n    }else if(left_int > left_rev_int){\n        if(len%2==0){\n            return left_rev+left;\n        }else{\n            return left_rev+num[mid]+left;\n        }\n    }else{\n        if(len%2==0){\n            return left+left_rev;\n        }else{\n            return left+num[mid]+left_rev;\n        }\n    }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var left_half = num_str.substring(0, Math.floor(num_len/2));\n  var right_half = num_str.substring(Math.ceil(num_len/2));\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var new_num = left_half + left_half_rev;\n  if (new_num > num){\n    return new_num;\n  }\n  else {\n    var left_half_int = parseInt(left_half);\n    var left_half_int_plus_one = (left_half_int + 1).toString();\n    var left_half_int_plus_one_len = left_half_int_plus_one.length;\n    var left_half_int_plus_one_rev = left_half_int_plus_one.split(\"\").reverse().join(\"\");\n    var new_num = left_half_int_plus_one + left_half_int_plus_one_rev;\n    if (num_len % 2 == 0){\n      return new_num;\n    }\n    else {\n      var new_num_int = parseInt(new_num);\n      var new_num_int_plus_ten = new_num_int + 10;\n      return new_num_int_plus_ten;\n    }\n  }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let num_half = Math.floor(num_len/2);\n    let num_left = num_str.slice(0, num_half);\n    let num_right = num_str.slice(num_len - num_half);\n    let num_left_rev = num_left.split('').reverse().join('');\n    if(num_left === num_left_rev){\n        let num_left_int = parseInt(num_left);\n        num_left_int++;\n        num_left = num_left_int.toString();\n        num_left_rev = num_left.split('').reverse().join('');\n        return parseInt(num_left + num_left_rev);\n    }\n    else{\n        return parseInt(num_left + num_left_rev);\n    }\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var left_half = num_str.substr(0, Math.floor(num_len/2));\n    var right_half = num_str.substr(Math.ceil(num_len/2), num_len);\n    var left_half_rev = left_half.split('').reverse().join('');\n    var palindrome = left_half + left_half_rev;\n    if(palindrome > num){\n        return palindrome;\n    }\n    else{\n        var left_half_int = parseInt(left_half);\n        var left_half_int_plus_one = left_half_int + 1;\n        var left_half_int_plus_one_str = left_half_int_plus_one.toString();\n        var left_half_int_plus_one_str_rev = left_half_int_plus_one_str.split('').reverse().join('');\n        var palindrome = left_half_int_plus_one_str + left_half_int_plus_one_str_rev;\n        return palindrome;\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid = Math.floor(num_len/2);\n    let left_half = num_str.substring(0, mid);\n    let right_half = num_str.substring(mid + num_len % 2, num_len);\n    let right_half_rev = right_half.split(\"\").reverse().join(\"\");\n    if(left_half < right_half_rev){\n        return parseInt(left_half + num_str.substring(mid, mid + num_len % 2) + right_half_rev);\n    }\n    let next_palindrome = parseInt(left_half + num_str.substring(mid, mid + num_len % 2) + right_half_rev) + 1;\n    let next_palindrome_str = next_palindrome.toString();\n    let next_palindrome_len = next_palindrome_str.length;\n    let next_palindrome_mid = Math.floor(next_palindrome_len/2);\n    let next_palindrome_left_half = next_palindrome_str.substring(0, next_palindrome_mid);\n    let next_palindrome_right_half = next_palindrome_str.substring(next_palindrome_mid + next_palindrome_len % 2, next_palindrome_len);\n    let next_palindrome_right_half_rev = next_palindrome_right_half.split(\"\").reverse().join(\"\");\n    if(next_palindrome_left_half === next_palindrome_right_half_rev){\n        return next_palindrome;\n    }\n    return next_palindrome + Math.pow(10, next_palindrome_len - next_palindrome_mid) - 1;\n}\n",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var left_half = num_str.substring(0, Math.floor(num_str_len/2));\n  var right_half = num_str.substring(Math.ceil(num_str_len/2));\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  var new_num = parseInt(left_half + right_half_rev);\n  var new_num_rev = parseInt(left_half_rev + right_half);\n  if (new_num > num){\n    return new_num;\n  }\n  else if (new_num_rev > num){\n    return new_num_rev;\n  }\n  else {\n    return next_smallest_palindrome(num + 1);\n  }\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var mid = Math.floor(num_len/2);\n    var left = num_str.substring(0, mid);\n    var right = num_str.substring(mid+1, num_len);\n    var left_rev = left.split(\"\").reverse().join(\"\");\n    var right_rev = right.split(\"\").reverse().join(\"\");\n    if(num_len % 2 == 0){\n        var left_int = parseInt(left);\n        var right_int = parseInt(right);\n        var left_rev_int = parseInt(left_rev);\n        var right_rev_int = parseInt(right_rev);\n        if(left_int < right_rev_int){\n            return parseInt(left + left_rev);\n        }\n        else if(left_int > right_rev_int){\n            return parseInt(left_rev + right);\n        }\n        else{\n            return parseInt(left + left_rev);\n        }\n    }\n    else{\n        var left_int = parseInt(left);\n        var right_int = parseInt(right);\n        var left_rev_int = parseInt(left_rev);\n        var right_rev_int = parseInt(right_rev);\n        if(left_int < right_rev_int){\n            return parseInt(left + num_str[mid] + left_rev);\n        }\n        else if(left_int > right_rev_int){\n            return parseInt(left_rev + num_str[mid] + right);\n        }\n        else{\n            return parseInt(left + num_str[mid] + left_rev);\n        }\n    }\n}\n",
    "  var num_str = num.toString();\n  var len = num_str.length;\n  var half_len = Math.floor(len/2);\n  var left_half = num_str.substring(0,half_len);\n  var right_half = num_str.substring(half_len,len);\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  var left_half_num = parseInt(left_half);\n  var right_half_num = parseInt(right_half);\n  var left_half_rev_num = parseInt(left_half_rev);\n  var right_half_rev_num = parseInt(right_half_rev);\n  if(left_half_num == right_half_rev_num){\n    if(left_half_num == right_half_num){\n      if(len % 2 == 0){\n        var new_num = left_half_num + 1;\n        var new_num_str = new_num.toString();\n        var new_num_len = new_num_str.length;\n        var new_num_half_len = Math.floor(new_num_len/2);\n        var new_left_half = new_num_str.substring(0,new_num_half_len);\n        var new_right_half = new_num_str.substring(new_num_half_len,new_num_len);\n        var new_left_half_rev = new_left_half.split(\"\").reverse().join(\"\");\n        var new_right_half_rev = new_right_half.split(\"\").reverse().join(\"\");\n        var new_left_half_num = parseInt(new_left_half);\n        var new_right_half_num = parseInt(new_right_half);\n        var new_left_half_rev_num = parseInt(new_left_half_rev);\n        var new_right_half_rev_num = parseInt(new_right_half_rev);\n        if(new_left",
    "  var num_string = num.toString();\n  var num_length = num_string.length;\n  var num_half = Math.floor(num_length/2);\n  var num_left = num_string.substring(0,num_half);\n  var num_right = num_string.substring(num_length-num_half,num_length);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_rev_int = parseInt(num_right_rev);\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_rev_int_next = num_left_rev_int+1;\n  var num_left_rev_int_next_string = num_left_rev_int_next.toString();\n  var num_left_rev_int_next_string_length = num_left_rev_int_next_string.length;\n  var num_left_rev_int_next_string_half = Math.floor(num_left_rev_int_next_string_length/2);\n  var num_left_rev_int_next_string_left = num_left_rev_int_next_string.substring(0,num_left_rev_int_next_string_half);\n  var num_left_rev_int_next_string_right = num_left_rev_int_next_string.substring(num_left_rev_int_next_string_length-num_left_rev_int_next_string_half,num_left_rev_int_next_string_length);\n  var num_left_rev_int_next_string_left_rev = num_left_rev_int_next_string_left.split(\"\").reverse().join(\"\");\n  var num_left_rev_int_next_string_right_rev = num_left_rev_int_next",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_str.substring(0, half_len);\n  var right_half = num_str.substring(half_len + num_len % 2, num_len);\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  var left_half_int = parseInt(left_half);\n  var right_half_int = parseInt(right_half);\n  var left_half_rev_int = parseInt(left_half_rev);\n  var right_half_rev_int = parseInt(right_half_rev);\n  if(left_half_int < right_half_rev_int){\n    return parseInt(left_half + right_half_rev);\n  }\n  else if(left_half_int > right_half_rev_int){\n    return parseInt(left_half_rev + right_half);\n  }\n  else{\n    if(left_half_int == 9){\n      var new_left_half = \"1\";\n      for(var i = 1; i < half_len; i++){\n        new_left_half += \"0\";\n      }\n      new_left_half += \"1\";\n      return parseInt(new_left_half);\n    }\n    else{\n      return parseInt(left_half_int + 1 + right_half_rev_int);\n    }\n  }\n}\n",
    "  //your code here\n  var numStr = num.toString();\n  var numLen = numStr.length;\n  var halfLen = Math.floor(numLen / 2);\n  var left = numStr.substring(0, halfLen);\n  var right = numStr.substring(halfLen + numLen % 2);\n  var leftRev = left.split(\"\").reverse().join(\"\");\n  var nextPalindrome = parseInt(left + (numLen % 2 ? numStr[halfLen] : \"\") + leftRev);\n  if (nextPalindrome > num) {\n    return nextPalindrome;\n  }\n  var mid = parseInt(left) + 1;\n  var midStr = mid.toString();\n  var midLen = midStr.length;\n  if (midLen > halfLen) {\n    return parseInt(midStr + midStr.split(\"\").reverse().join(\"\"));\n  }\n  left = midStr;\n  leftRev = left.split(\"\").reverse().join(\"\");\n  return parseInt(left + (numLen % 2 ? numStr[halfLen] : \"\") + leftRev);\n}\n",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var palindrome = false;\n  var i = 0;\n  var j = num_str_len - 1;\n  var mid = Math.floor(num_str_len / 2);\n  var left = '';\n  var right = '';\n  var left_num = 0;\n  var right_num = 0;\n  var left_num_str = '';\n  var right_num_str = '';\n  var left_num_str_len = 0;\n  var right_num_str_len = 0;\n  var left_num_str_mid = 0;\n  var right_num_str_mid = 0;\n  var left_num_str_mid_num = 0;\n  var right_num_str_mid_num = 0;\n  var left_num_str_mid_num_str = '';\n  var right_num_str_mid_num_str = '';\n  var left_num_str_mid_num_str_len = 0;\n  var right_num_str_mid_num_str_len = 0;\n  var left_num_str_mid_num_str_mid = 0;\n  var right_num_str_mid_num_str_mid = 0;\n  var left_num_str_mid_num_str_mid_num = 0;\n  var right_num_str_mid_num_str_mid_num = 0;\n  var left_num_str_mid_num_str_mid_num_str = '';\n  var right_num_str_mid_num_str_mid_num_str = '';\n  var left_num_str_mid_num_str_mid_num_str_len = 0;\n  var right_num_str_mid_num_str_mid_num_str_len = 0;\n  var left_num_str_mid_num_str_mid_num_str_mid = 0;\n  var right_num_str_mid_num_str_mid_num_str_mid = 0;\n  var left_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_str.split('').reverse();\n  var is_palindrome = true;\n  for(var i = 0; i < num_len; i++){\n    if(num_arr[i] !== num_arr_rev[i]){\n      is_palindrome = false;\n    }\n  }\n  if(is_palindrome){\n    return num;\n  }\n  else{\n    var num_arr_rev_join = num_arr_rev.join('');\n    var num_arr_rev_join_int = parseInt(num_arr_rev_join);\n    var num_arr_join = num_arr.join('');\n    var num_arr_join_int = parseInt(num_arr_join);\n    if(num_arr_rev_join_int > num_arr_join_int){\n      return num_arr_rev_join_int;\n    }\n    else{\n      var num_arr_join_int_plus_one = num_arr_join_int + 1;\n      var num_arr_join_int_plus_one_str = num_arr_join_int_plus_one.toString();\n      var num_arr_join_int_plus_one_str_len = num_arr_join_int_plus_one_str.length;\n      var num_arr_join_int_plus_one_str_arr = num_arr_join_int_plus_one_str.split('');\n      var num_arr_join_int_plus_one_str_arr_rev = num_arr_join_int_plus_one_str.split('').reverse();\n      var is_palindrome_plus_one = true;\n      for(var i = 0; i < num_arr_join_int_plus_one_str_len; i++){\n        if(num_arr_join_int_plus_one_str_arr[i] !== num_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_arr.slice().reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_int = parseInt(num_arr_rev_str);\n  var num_arr_rev_int_str = num_arr_rev_int.toString();\n  var num_arr_rev_int_len = num_arr_rev_int_str.length;\n  var num_arr_rev_int_arr = num_arr_rev_int_str.split('');\n  var num_arr_rev_int_arr_rev = num_arr_rev_int_arr.slice().reverse();\n  var num_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev.join('');\n  var num_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_str);\n  var num_arr_rev_int_arr_rev_int_str = num_arr_rev_int_arr_rev_int.toString();\n  var num_arr_rev_int_arr_rev_int_len = num_arr_rev_int_arr_rev_int_str.length;\n  var num_arr_rev_int_arr_rev_int_arr = num_arr_rev_int_arr_rev_int_str.split('');\n  var num_arr_rev_int_arr_rev_int_arr_rev = num_arr_rev_int_arr_rev_int_arr.slice().reverse();\n  var num_arr_rev_int_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev_int_arr_rev.join('');\n  var num_arr_rev_int_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_int_arr_",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var num_str_half_len = Math.floor(num_str_len/2);\n  var left_half = num_str.substring(0, num_str_half_len);\n  var right_half = num_str.substring(num_str_half_len + num_str_len % 2);\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var next_palindrome = parseInt(left_half + right_half);\n  if(next_palindrome > num){\n    return next_palindrome;\n  }\n  else{\n    var left_half_int = parseInt(left_half);\n    var right_half_int = parseInt(right_half);\n    if(left_half_int < right_half_int){\n      left_half_int = left_half_int + 1;\n      left_half = left_half_int.toString();\n      left_half_rev = left_half.split(\"\").reverse().join(\"\");\n      next_palindrome = parseInt(left_half + right_half);\n      return next_palindrome;\n    }\n    else if(left_half_int > right_half_int){\n      left_half_int = left_half_int + 1;\n      left_half = left_half_int.toString();\n      left_half_rev = left_half.split(\"\").reverse().join(\"\");\n      next_palindrome = parseInt(left_half + right_half);\n      return next_palindrome;\n    }\n    else{\n      if(num_str_len % 2 == 0){\n        left_half_int = left_half_int + 1;\n        left_half = left_half_int.toString();\n        left_half_rev = left_half.split(\"\").reverse().join(\"\");\n        next_palindrome = parseInt(left_half + left_half_rev);\n        return next_palindrome;\n      }\n      else{\n        left_",
    "  var num_string = num.toString();\n  var num_length = num_string.length;\n  var num_half = Math.floor(num_length/2);\n  var num_first_half = num_string.substring(0,num_half);\n  var num_second_half = num_string.substring(num_half+1,num_length);\n  var num_first_half_reversed = num_first_half.split(\"\").reverse().join(\"\");\n  var num_second_half_reversed = num_second_half.split(\"\").reverse().join(\"\");\n  var num_first_half_int = parseInt(num_first_half);\n  var num_second_half_int = parseInt(num_second_half);\n  var num_first_half_reversed_int = parseInt(num_first_half_reversed);\n  var num_second_half_reversed_int = parseInt(num_second_half_reversed);\n  var num_first_half_reversed_string = num_first_half_reversed_int.toString();\n  var num_second_half_reversed_string = num_second_half_reversed_int.toString();\n  var num_first_half_reversed_string_length = num_first_half_reversed_string.length;\n  var num_second_half_reversed_string_length = num_second_half_reversed_string.length;\n  var num_first_half_reversed_string_zeros = \"\";\n  var num_second_half_reversed_string_zeros = \"\";\n  var num_first_half_reversed_string_zeros_length = num_first_half_reversed_string_length - num_first_half.length;\n  var num_second_half_reversed_string_zeros_length = num_second_half_reversed_string_length - num_second_half.length;\n  var num_first_half_reversed_string_zeros_length_diff = num_first_",
    "  var num_str = num.toString();\n  var num_arr = num_str.split(\"\");\n  var num_len = num_arr.length;\n  var num_half = Math.floor(num_len/2);\n  var num_half_arr = num_arr.slice(0,num_half);\n  var num_half_arr_rev = num_half_arr.slice(0).reverse();\n  var num_half_str = num_half_arr.join(\"\");\n  var num_half_str_rev = num_half_arr_rev.join(\"\");\n  var num_half_int = parseInt(num_half_str);\n  var num_half_int_rev = parseInt(num_half_str_rev);\n  var num_half_int_next = num_half_int + 1;\n  var num_half_int_next_str = num_half_int_next.toString();\n  var num_half_int_next_str_rev = num_half_int_next_str.split(\"\").reverse().join(\"\");\n  var num_half_int_next_str_rev_int = parseInt(num_half_int_next_str_rev);\n  var num_half_int_next_str_rev_int_str = num_half_int_next_str_rev_int.toString();\n  var num_half_int_next_str_rev_int_str_arr = num_half_int_next_str_rev_int_str.split(\"\");\n  var num_half_int_next_str_rev_int_str_arr_len = num_half_int_next_str_rev_int_str_arr.length;\n  var num_half_int_next_str_rev_int_str_arr_len_diff = num_half - num_half_int_next_str_rev_int_str_arr_len;\n  var num_half_int_next_str_rev_int_str_arr_len_diff_arr = [];\n  for(var i=0; i<num_half_int_next_str_rev_int_str_arr",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var left_half = num_str.substring(0, Math.floor(num_len/2));\n    var right_half = num_str.substring(Math.ceil(num_len/2));\n    var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n    var new_num = left_half + left_half_rev;\n    if(new_num > num){\n        return new_num;\n    }\n    else{\n        var new_left_half = (parseInt(left_half) + 1).toString();\n        var new_left_half_rev = new_left_half.split(\"\").reverse().join(\"\");\n        return new_left_half + new_left_half_rev;\n    }\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len / 2);\n    var num_left = num_str.substr(0, num_half);\n    var num_right = num_str.substr(num_len - num_half);\n    var num_left_rev = num_left.split('').reverse().join('');\n    var num_right_rev = num_right.split('').reverse().join('');\n    var num_left_int = parseInt(num_left);\n    var num_right_int = parseInt(num_right);\n    var num_left_rev_int = parseInt(num_left_rev);\n    var num_right_rev_int = parseInt(num_right_rev);\n    var num_left_rev_int_next = num_left_rev_int + 1;\n    var num_left_rev_int_next_str = num_left_rev_int_next.toString();\n    var num_left_rev_int_next_str_len = num_left_rev_int_next_str.length;\n    var num_left_rev_int_next_str_half = Math.floor(num_left_rev_int_next_str_len / 2);\n    var num_left_rev_int_next_str_left = num_left_rev_int_next_str.substr(0, num_left_rev_int_next_str_half);\n    var num_left_rev_int_next_str_right = num_left_rev_int_next_str.substr(num_left_rev_int_next_str_len - num_left_rev_int_next_str_half);\n    var num_left_rev_int_next_str_left_rev = num_left_rev_int_next_str_left.split('').reverse().join('');\n    var num_left_rev_int_next_str_right_rev = num_left_rev_int_next_str_right.split('').reverse().join",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var num_str_half_len = Math.floor(num_str_len/2);\n  var num_str_half = num_str.substr(0, num_str_half_len);\n  var num_str_half_rev = num_str_half.split('').reverse().join('');\n  var num_str_half_rev_num = parseInt(num_str_half_rev);\n  var num_str_half_num = parseInt(num_str_half);\n  var num_str_half_rev_num_plus_one = num_str_half_rev_num + 1;\n  var num_str_half_rev_num_plus_one_str = num_str_half_rev_num_plus_one.toString();\n  var num_str_half_rev_num_plus_one_str_len = num_str_half_rev_num_plus_one_str.length;\n  var num_str_half_rev_num_plus_one_str_half_len = Math.floor(num_str_half_rev_num_plus_one_str_len/2);\n  var num_str_half_rev_num_plus_one_str_half = num_str_half_rev_num_plus_one_str.substr(0, num_str_half_rev_num_plus_one_str_half_len);\n  var num_str_half_rev_num_plus_one_str_half_rev = num_str_half_rev_num_plus_one_str_half.split('').reverse().join('');\n  var num_str_half_rev_num_plus_one_str_half_rev_num = parseInt(num_str_half_rev_num_plus_one_str_half_rev);\n  var num_str_half_rev_num_plus_one_str_half_num = parseInt(num_str_half_rev_num_plus_one_str_half);\n  var num_str_half_",
    "  var num_arr = num.toString().split('');\n  var num_len = num_arr.length;\n  var i = 0;\n  var j = num_len - 1;\n  var mid = Math.floor(num_len/2);\n  var left_half = num_arr.slice(0, mid);\n  var right_half = num_arr.slice(mid + 1, num_len);\n  var left_half_rev = left_half.slice(0).reverse();\n  var right_half_rev = right_half.slice(0).reverse();\n  var left_half_int = parseInt(left_half.join(''));\n  var right_half_int = parseInt(right_half.join(''));\n  var left_half_rev_int = parseInt(left_half_rev.join(''));\n  var right_half_rev_int = parseInt(right_half_rev.join(''));\n  var left_half_plus_one = left_half_int + 1;\n  var left_half_plus_one_arr = left_half_plus_one.toString().split('');\n  var left_half_plus_one_rev_arr = left_half_plus_one_arr.slice(0).reverse();\n  var left_half_plus_one_rev_int = parseInt(left_half_plus_one_rev_arr.join(''));\n  var left_half_plus_one_int = parseInt(left_half_plus_one_arr.join(''));\n  var left_half_plus_one_rev_int = parseInt(left_half_plus_one_rev_arr.join(''));\n  var left_half_plus_one_rev_int_str = left_half_plus_one_rev_int.toString();\n  var left_half_plus_one_rev_int_str_len = left_half_plus_one_rev_int_str.length;\n  var left_half_plus_one_rev_int_str_arr = left_half_plus_one_rev_int_str.split('');\n  var left_half",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let num_half = Math.floor(num_len / 2);\n    let num_first_half = num_str.slice(0, num_half);\n    let num_second_half = num_str.slice(num_half + (num_len % 2), num_len);\n    let num_first_half_rev = num_first_half.split('').reverse().join('');\n    let num_first_half_rev_int = parseInt(num_first_half_rev);\n    let num_first_half_int = parseInt(num_first_half);\n    let num_second_half_int = parseInt(num_second_half);\n    let num_second_half_rev_int = parseInt(num_second_half.split('').reverse().join(''));\n    let num_first_half_rev_str = num_first_half_rev_int.toString();\n    let num_first_half_rev_str_len = num_first_half_rev_str.length;\n    let num_first_half_rev_str_half = Math.floor(num_first_half_rev_str_len / 2);\n    let num_first_half_rev_str_first_half = num_first_half_rev_str.slice(0, num_first_half_rev_str_half);\n    let num_first_half_rev_str_second_half = num_first_half_rev_str.slice(num_first_half_rev_str_half + (num_first_half_rev_str_len % 2), num_first_half_rev_str_len);\n    let num_first_half_rev_str_first_half_int = parseInt(num_first_half_rev_str_first_half);\n    let num_first_half_rev_str_second_half_int = parseInt(num_first_half_rev_str_second_half);\n    if(num_first_half_rev_int > num_second_half_int){\n        return parseInt",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_arr.slice().reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_num = parseInt(num_arr_rev_str);\n  var num_arr_rev_num_str = num_arr_rev_num.toString();\n  var num_arr_rev_num_len = num_arr_rev_num_str.length;\n  var num_arr_rev_num_arr = num_arr_rev_num_str.split('');\n  var num_arr_rev_num_arr_rev = num_arr_rev_num_arr.slice().reverse();\n  var num_arr_rev_num_arr_rev_str = num_arr_rev_num_arr_rev.join('');\n  var num_arr_rev_num_arr_rev_num = parseInt(num_arr_rev_num_arr_rev_str);\n  var num_arr_rev_num_arr_rev_num_str = num_arr_rev_num_arr_rev_num.toString();\n  var num_arr_rev_num_arr_rev_num_len = num_arr_rev_num_arr_rev_num_str.length;\n  var num_arr_rev_num_arr_rev_num_arr = num_arr_rev_num_arr_rev_num_str.split('');\n  var num_arr_rev_num_arr_rev_num_arr_rev = num_arr_rev_num_arr_rev_num_arr.slice().reverse();\n  var num_arr_rev_num_arr_rev_num_arr_rev_str = num_arr_rev_num_arr_rev_num_arr_rev.join('');\n  var num_arr_rev_num_arr_rev_num_arr_rev_num = parseInt(num_arr_rev_num_arr_rev_num_arr_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.substring(0, num_half);\n  var num_right = num_str.substring(num_half + num_len%2);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  var num_left_rev_num = parseInt(num_left_rev);\n  var num_right_rev_num = parseInt(num_right_rev);\n  var num_left_num = parseInt(num_left);\n  var num_right_num = parseInt(num_right);\n  if(num_left_rev_num > num_right_rev_num){\n    return parseInt(num_left + num_left_rev);\n  }else if(num_left_rev_num < num_right_rev_num){\n    if(num_len%2 === 0){\n      return parseInt(num_left + num_left_rev);\n    }else{\n      return parseInt(num_left + num_left_rev.substring(1));\n    }\n  }else{\n    if(num_len%2 === 0){\n      return parseInt(num_left + num_left_rev);\n    }else{\n      if(num_left_num === 9){\n        return parseInt(num_left + num_left_rev.substring(1));\n      }else{\n        return parseInt(num_left + (num_left_num + 1) + num_left_rev.substring(1));\n      }\n    }\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var mid_index = Math.floor(num_len/2);\n  var left_half = num_arr.slice(0, mid_index);\n  var right_half = num_arr.slice(mid_index + num_len % 2, num_len);\n  var left_half_rev = left_half.slice().reverse();\n  var right_half_rev = right_half.slice().reverse();\n  var left_half_int = parseInt(left_half.join(''));\n  var right_half_int = parseInt(right_half.join(''));\n  var left_half_rev_int = parseInt(left_half_rev.join(''));\n  var right_half_rev_int = parseInt(right_half_rev.join(''));\n  var left_half_inc = left_half_int + 1;\n  var left_half_inc_str = left_half_inc.toString();\n  var left_half_inc_arr = left_half_inc_str.split('');\n  var left_half_inc_rev = left_half_inc_arr.slice().reverse();\n  var left_half_inc_rev_int = parseInt(left_half_inc_rev.join(''));\n  var left_half_dec = left_half_int - 1;\n  var left_half_dec_str = left_half_dec.toString();\n  var left_half_dec_arr = left_half_dec_str.split('');\n  var left_half_dec_rev = left_half_dec_arr.slice().reverse();\n  var left_half_dec_rev_int = parseInt(left_half_dec_rev.join(''));\n  var left_half_inc_rev_str = left_half_inc_rev.join('');\n  var left_half_dec_rev_str = left_half_dec_rev.join('');\n  var left_half_inc_rev_len = left_",
    "  let num_str = num.toString();\n  let num_str_len = num_str.length;\n  let left_half = num_str.slice(0, (num_str_len / 2));\n  let right_half = num_str.slice((num_str_len / 2));\n  let left_half_len = left_half.length;\n  let right_half_len = right_half.length;\n  let left_half_int = parseInt(left_half);\n  let right_half_int = parseInt(right_half);\n  let left_half_int_plus_one = left_half_int + 1;\n  let left_half_int_plus_one_str = left_half_int_plus_one.toString();\n  let left_half_int_plus_one_str_len = left_half_int_plus_one_str.length;\n  let left_half_int_plus_one_str_len_diff = left_half_int_plus_one_str_len - left_half_len;\n  let left_half_int_plus_one_str_len_diff_str = left_half_int_plus_one_str_len_diff.toString();\n  let left_half_int_plus_one_str_len_diff_str_len = left_half_int_plus_one_str_len_diff_str.length;\n  let left_half_int_plus_one_str_len_diff_str_len_diff = left_half_int_plus_one_str_len_diff_str_len - left_half_int_plus_one_str_len_diff_str_len;\n  let left_half_int_plus_one_str_len_diff_str_len_diff_str = left_half_int_plus_one_str_len_diff_str_len_diff.toString();\n  let left_half_int_plus_one_str_len_diff_str_len_diff_str_len = left_half_int_plus_one_str_len_diff_str_len_diff_str.length;\n  let left",
    "  var num_str = num.toString();\n  var num_length = num_str.length;\n  var num_half = Math.floor(num_length / 2);\n  var num_left = num_str.substring(0, num_half);\n  var num_right = num_str.substring(num_length - num_half);\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_int_rev = parseInt(num_left.split(\"\").reverse().join(\"\"));\n  var num_right_int_rev = parseInt(num_right.split(\"\").reverse().join(\"\"));\n  var num_left_int_rev_str = num_left_int_rev.toString();\n  var num_right_int_rev_str = num_right_int_rev.toString();\n  var num_left_int_rev_str_length = num_left_int_rev_str.length;\n  var num_right_int_rev_str_length = num_right_int_rev_str.length;\n  var num_left_int_rev_str_length_diff = num_half - num_left_int_rev_str_length;\n  var num_right_int_rev_str_length_diff = num_half - num_right_int_rev_str_length;\n  var num_left_int_rev_str_length_diff_str = \"\";\n  var num_right_int_rev_str_length_diff_str = \"\";\n  var num_left_int_rev_str_length_diff_str_length = num_left_int_rev_str_length_diff.toString().length;\n  var num_right_int_rev_str_length_diff_str_length = num_right_int_rev_str_length_diff.toString().length;\n  var num_left_int_rev_str_length_diff_str_length_diff = num_half - num_left_int_rev_str_length_diff_str_length;\n  var num_right_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_half_str = num_str.slice(0, num_half);\n  var num_half_str_rev = num_half_str.split(\"\").reverse().join(\"\");\n  var num_half_str_rev_int = parseInt(num_half_str_rev);\n  var num_half_str_int = parseInt(num_half_str);\n  var num_half_str_rev_int_plus_one = num_half_str_rev_int + 1;\n  var num_half_str_rev_int_plus_one_str = num_half_str_rev_int_plus_one.toString();\n  var num_half_str_rev_int_plus_one_str_rev = num_half_str_rev_int_plus_one_str.split(\"\").reverse().join(\"\");\n  var num_half_str_rev_int_plus_one_str_rev_int = parseInt(num_half_str_rev_int_plus_one_str_rev);\n  var num_half_str_rev_int_plus_one_str_rev_int_plus_one = num_half_str_rev_int_plus_one_str_rev_int + 1;\n  var num_half_str_rev_int_plus_one_str_rev_int_plus_one_str = num_half_str_rev_int_plus_one_str_rev_int_plus_one.toString();\n  var num_half_str_rev_int_plus_one_str_rev_int_plus_one_str_rev = num_half_str_rev_int_plus_one_str_rev_int_plus_one_str.split(\"\").reverse().join(\"\");\n  var num_half_str_rev_int_plus_one_str_rev_int_plus_one_str_rev_int = parseInt(num_half_str_rev_int_plus_one_str_rev_int_",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len/2);\n    var num_half_rev = num_str.substring(0,num_half).split(\"\").reverse().join(\"\");\n    var num_half_rev_int = parseInt(num_half_rev);\n    var num_half_int = parseInt(num_str.substring(0,num_half));\n    var num_half_rev_int_next = num_half_rev_int + 1;\n    var num_half_rev_int_next_str = num_half_rev_int_next.toString();\n    var num_half_rev_int_next_str_rev = num_half_rev_int_next_str.split(\"\").reverse().join(\"\");\n    var num_half_rev_int_next_str_rev_int = parseInt(num_half_rev_int_next_str_rev);\n    if(num_half_rev_int_next_str_rev_int < num_half_int){\n        var num_half_rev_int_next_str_rev_int_str = num_half_rev_int_next_str_rev_int.toString();\n        var num_half_rev_int_next_str_rev_int_str_len = num_half_rev_int_next_str_rev_int_str.length;\n        var num_half_rev_int_next_str_rev_int_str_len_diff = num_half - num_half_rev_int_next_str_rev_int_str_len;\n        var num_half_rev_int_next_str_rev_int_str_len_diff_str = \"\";\n        for(var i = 0; i < num_half_rev_int_next_str_rev_int_str_len_diff; i++){\n            num_half_rev_int_next_str_rev_int_str_len_diff_str += \"0\";\n        }\n        num_half_rev_int_next_str_rev_",
    "  var num_str = num.toString();\n  var len = num_str.length;\n  var mid = Math.floor(len/2);\n  var left_half = num_str.substr(0,mid);\n  var right_half = num_str.substr(mid+len%2,mid);\n  var new_num = left_half + right_half.split('').reverse().join('');\n  if(new_num > num_str){\n    return parseInt(new_num);\n  }\n  if(len%2){\n    var mid_num = parseInt(num_str[mid]);\n    var mid_num_plus_one = mid_num + 1;\n    var mid_num_plus_one_str = mid_num_plus_one.toString();\n    return parseInt(left_half + mid_num_plus_one_str + left_half.split('').reverse().join(''));\n  }\n  else{\n    var right_half_int = parseInt(right_half);\n    var right_half_int_plus_one = right_half_int + 1;\n    var right_half_int_plus_one_str = right_half_int_plus_one.toString();\n    return parseInt(left_half + right_half_int_plus_one_str + left_half.split('').reverse().join(''));\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_str_len = num_str.length;\n  var num_str_half = Math.floor(num_str_len/2);\n  var num_str_half_rev = num_str_half;\n  if(num_str_len % 2 != 0){\n    num_str_half_rev = num_str_half + 1;\n  }\n  var num_str_half_rev_str = num_str.substring(0, num_str_half_rev);\n  var num_str_half_rev_str_rev = num_str_half_rev_str.split(\"\").reverse().join(\"\");\n  var num_str_half_rev_str_rev_num = parseInt(num_str_half_rev_str_rev);\n  var num_str_half_str = num_str.substring(num_str_half, num_str_len);\n  var num_str_half_str_num = parseInt(num_str_half_str);\n  if(num_str_half_str_num < num_str_half_rev_str_rev_num){\n    num_str_half_str_num = num_str_half_rev_str_rev_num;\n  }\n  else{\n    num_str_half_rev_str_rev_num += 1;\n    num_str_half_str_num = num_str_half_rev_str_rev_num;\n  }\n  var num_str_half_str_num_str = num_str_half_str_num.toString();\n  var num_str_half_str_num_str_len = num_str_half_str_num_str.length;\n  var num_str_half_str_num_str_half = Math.floor(num_str_half_str_num_str_len/2);\n  var num_str_half_str_num_str_half_rev = num_str_half_str_num_str_half;\n  if(num_str_half_str_num_str_len % 2 != 0){\n    num_",
    "    var num_str = num.toString();\n    var num_length = num_str.length;\n    var num_arr = num_str.split('');\n    var num_arr_rev = num_str.split('').reverse();\n    var num_arr_rev_join = num_arr_rev.join('');\n    var num_arr_rev_join_int = parseInt(num_arr_rev_join);\n    var num_arr_rev_join_int_str = num_arr_rev_join_int.toString();\n    var num_arr_rev_join_int_str_length = num_arr_rev_join_int_str.length;\n    var num_arr_rev_join_int_str_length_half = num_arr_rev_join_int_str_length / 2;\n    var num_arr_rev_join_int_str_length_half_floor = Math.floor(num_arr_rev_join_int_str_length_half);\n    var num_arr_rev_join_int_str_length_half_ceil = Math.ceil(num_arr_rev_join_int_str_length_half);\n    var num_arr_rev_join_int_str_length_half_floor_int = parseInt(num_arr_rev_join_int_str_length_half_floor);\n    var num_arr_rev_join_int_str_length_half_ceil_int = parseInt(num_arr_rev_join_int_str_length_half_ceil);\n    var num_arr_rev_join_int_str_length_half_floor_int_str = num_arr_rev_join_int_str_length_half_floor_int.toString();\n    var num_arr_rev_join_int_str_length_half_ceil_int_str = num_arr_rev_join_int_str_length_half_ceil_int.toString();\n    var num_arr_rev_join_int_str_length_half_floor_int_str_length = num_arr_rev_join_int_str_length_half",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_arr = num_str.split('');\n    var left_half = num_arr.slice(0, Math.floor(num_len/2));\n    var right_half = num_arr.slice(Math.ceil(num_len/2));\n    var left_half_rev = left_half.slice().reverse();\n    var right_half_rev = right_half.slice().reverse();\n    var left_half_rev_str = left_half_rev.join('');\n    var right_half_rev_str = right_half_rev.join('');\n    var left_half_rev_num = parseInt(left_half_rev_str);\n    var right_half_rev_num = parseInt(right_half_rev_str);\n    var left_half_num = parseInt(left_half.join(''));\n    var right_half_num = parseInt(right_half.join(''));\n    var new_num;\n    if(num_len % 2 === 0){\n        if(left_half_num < right_half_num){\n            new_num = left_half_rev_num + right_half_rev_num;\n        }\n        else if(left_half_num > right_half_num){\n            new_num = left_half_rev_num + right_half_rev_num;\n        }\n        else{\n            new_num = left_half_rev_num + right_half_rev_num;\n        }\n    }\n    else{\n        if(left_half_num < right_half_num){\n            new_num = left_half_rev_num + right_half_rev_num;\n        }\n        else if(left_half_num > right_half_num){\n            new_num = left_half_rev_num + right_half_rev_num;\n        }\n        else{\n            new_num = left_half_rev_num + right_half_rev_num;\n        }\n    }\n    return new_num;\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_arr.slice().reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_num = parseInt(num_arr_rev_str);\n  var num_arr_rev_num_str = num_arr_rev_num.toString();\n  var num_arr_rev_num_len = num_arr_rev_num_str.length;\n  var num_arr_rev_num_arr = num_arr_rev_num_str.split('');\n  var num_arr_rev_num_arr_rev = num_arr_rev_num_arr.slice().reverse();\n  var num_arr_rev_num_arr_rev_str = num_arr_rev_num_arr_rev.join('');\n  var num_arr_rev_num_arr_rev_num = parseInt(num_arr_rev_num_arr_rev_str);\n  if(num_arr_rev_num_len == num_len){\n    if(num_arr_rev_num_arr_rev_num > num){\n      return num_arr_rev_num_arr_rev_num;\n    }\n    else{\n      var num_arr_rev_num_arr_rev_num_str = num_arr_rev_num_arr_rev_num.toString();\n      var num_arr_rev_num_arr_rev_num_len = num_arr_rev_num_arr_rev_num_str.length;\n      var num_arr_rev_num_arr_rev_num_arr = num_arr_rev_num_arr_rev_num_str.split('');\n      var num_arr_rev_num_arr_rev_num_arr_rev = num_arr_rev_num_arr_rev_num_arr.slice().reverse();\n      var num_arr_rev_num_arr_rev_num_arr_rev_str = num_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.substring(0, num_half);\n  var num_right = num_str.substring(num_half + num_len % 2, num_len);\n  var num_left_rev = num_left.split('').reverse().join('');\n  if(num_left < num_right){\n    num_left = (parseInt(num_left) + 1).toString();\n    num_left_rev = num_left.split('').reverse().join('');\n  }\n  return parseInt(num_left + num_left_rev);\n}\n",
    "    num = num + 1;\n    while(!is_palindrome(num)){\n        num++;\n    }\n    return num;\n}\n",
    "\tvar num_str = num.toString();\n\tvar num_len = num_str.length;\n\tvar num_half = Math.floor(num_len/2);\n\tvar num_left = num_str.substring(0,num_half);\n\tvar num_right = num_str.substring(num_len-num_half,num_len);\n\tvar num_left_rev = num_left.split(\"\").reverse().join(\"\");\n\tvar num_right_rev = num_right.split(\"\").reverse().join(\"\");\n\tvar num_left_int = parseInt(num_left);\n\tvar num_right_int = parseInt(num_right);\n\tvar num_left_rev_int = parseInt(num_left_rev);\n\tvar num_right_rev_int = parseInt(num_right_rev);\n\tvar num_left_rev_int_plus_one = num_left_rev_int+1;\n\tvar num_left_rev_int_plus_one_str = num_left_rev_int_plus_one.toString();\n\tvar num_left_rev_int_plus_one_str_len = num_left_rev_int_plus_one_str.length;\n\tvar num_left_rev_int_plus_one_str_half = Math.floor(num_left_rev_int_plus_one_str_len/2);\n\tvar num_left_rev_int_plus_one_str_left = num_left_rev_int_plus_one_str.substring(0,num_left_rev_int_plus_one_str_half);\n\tvar num_left_rev_int_plus_one_str_right = num_left_rev_int_plus_one_str.substring(num_left_rev_int_plus_one_str_len-num_left_rev_int_plus_one_str_half,num_left_rev_int_plus_one_str_len);\n\tvar num_left_rev_int_plus_one_str_left_rev = num_left_rev_int_plus_one_str_left.split(\"",
    "  var num_str = num.toString();\n  var len = num_str.length;\n  var mid = Math.floor(len/2);\n  var left_half = num_str.substr(0,mid);\n  var right_half = num_str.substr(mid+1);\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  var left_half_int = parseInt(left_half);\n  var right_half_int = parseInt(right_half);\n  var left_half_rev_int = parseInt(left_half_rev);\n  var right_half_rev_int = parseInt(right_half_rev);\n  var left_half_int_plus_one = left_half_int+1;\n  var left_half_int_plus_one_str = left_half_int_plus_one.toString();\n  var left_half_int_plus_one_str_rev = left_half_int_plus_one_str.split(\"\").reverse().join(\"\");\n  var left_half_int_plus_one_str_rev_int = parseInt(left_half_int_plus_one_str_rev);\n  var left_half_int_plus_one_str_rev_int_plus_one = left_half_int_plus_one_str_rev_int+1;\n  var left_half_int_plus_one_str_rev_int_plus_one_str = left_half_int_plus_one_str_rev_int_plus_one.toString();\n  var left_half_int_plus_one_str_rev_int_plus_one_str_rev = left_half_int_plus_one_str_rev_int_plus_one_str.split(\"\").reverse().join(\"\");\n  var left_half_int_plus_one_str_rev_int_plus_one_str_rev_int = parseInt(left_half_int_plus_one_str_rev_int_plus_one_str_rev);\n ",
    "  var num_str = num.toString();\n  var num_length = num_str.length;\n  var left_half = num_str.substring(0, num_length/2);\n  var right_half = num_str.substring(num_length/2 + num_length%2, num_length);\n  var left_half_int = parseInt(left_half);\n  var right_half_int = parseInt(right_half);\n  if(left_half_int < right_half_int){\n    left_half_int++;\n    left_half = left_half_int.toString();\n    right_half = left_half.split(\"\").reverse().join(\"\");\n    if(num_length%2 === 1){\n      right_half = right_half.substring(1, right_half.length);\n    }\n    return parseInt(left_half + right_half);\n  }\n  else if(left_half_int > right_half_int){\n    right_half = left_half.split(\"\").reverse().join(\"\");\n    if(num_length%2 === 1){\n      right_half = right_half.substring(1, right_half.length);\n    }\n    return parseInt(left_half + right_half);\n  }\n  else{\n    return next_smallest_palindrome(num + 1);\n  }\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_mid = Math.floor(num_len/2);\n    var num_left = num_str.slice(0,num_mid);\n    var num_right = num_str.slice(num_mid+num_len%2,num_len);\n    var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n    if(num_left < num_right){\n        return parseInt(num_left + num_left_rev);\n    }\n    else{\n        var num_left_int = parseInt(num_left);\n        var num_left_int_next = num_left_int + 1;\n        var num_left_int_next_str = num_left_int_next.toString();\n        var num_left_int_next_str_rev = num_left_int_next_str.split(\"\").reverse().join(\"\");\n        return parseInt(num_left_int_next_str + num_left_int_next_str_rev);\n    }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var left_half = num_str.substring(0, (num_len/2));\n  var right_half = num_str.substring((num_len/2), num_len);\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var new_num = left_half + left_half_rev;\n  if (new_num > num){\n    return new_num;\n  }\n  else{\n    var left_half_int = parseInt(left_half);\n    left_half_int++;\n    left_half = left_half_int.toString();\n    left_half_rev = left_half.split(\"\").reverse().join(\"\");\n    new_num = left_half + left_half_rev;\n    return new_num;\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_length = num_str.length;\n  var num_half = Math.floor(num_length/2);\n  var num_first_half = num_str.substring(0,num_half);\n  var num_second_half = num_str.substring(num_half+1,num_length);\n  var num_first_half_reverse = num_first_half.split(\"\").reverse().join(\"\");\n  var num_second_half_reverse = num_second_half.split(\"\").reverse().join(\"\");\n  var num_first_half_reverse_int = parseInt(num_first_half_reverse);\n  var num_second_half_reverse_int = parseInt(num_second_half_reverse);\n  var num_first_half_int = parseInt(num_first_half);\n  var num_second_half_int = parseInt(num_second_half);\n  var num_first_half_int_plus_one = num_first_half_int + 1;\n  var num_first_half_int_plus_one_str = num_first_half_int_plus_one.toString();\n  var num_first_half_int_plus_one_str_length = num_first_half_int_plus_one_str.length;\n  var num_first_half_int_plus_one_str_half = Math.floor(num_first_half_int_plus_one_str_length/2);\n  var num_first_half_int_plus_one_str_first_half = num_first_half_int_plus_one_str.substring(0,num_first_half_int_plus_one_str_half);\n  var num_first_half_int_plus_one_str_second_half = num_first_half_int_plus_one_str.substring(num_first_half_int_plus_one_str_half+1,num_first_half_int_plus_one_str_length);\n  var num_first_half_int_plus_one_str_first_half_reverse =",
    "    var num_str = num.toString();\n    var num_length = num_str.length;\n    var num_half_length = Math.floor(num_length/2);\n    var num_half_length_plus_one = num_half_length + 1;\n    var num_half_length_minus_one = num_half_length - 1;\n    var num_half = num_str.substring(0, num_half_length);\n    var num_half_plus_one = num_str.substring(0, num_half_length_plus_one);\n    var num_half_minus_one = num_str.substring(0, num_half_length_minus_one);\n    var num_half_reversed = num_half.split(\"\").reverse().join(\"\");\n    var num_half_plus_one_reversed = num_half_plus_one.split(\"\").reverse().join(\"\");\n    var num_half_minus_one_reversed = num_half_minus_one.split(\"\").reverse().join(\"\");\n    var num_palindrome = num_half + num_half_reversed;\n    var num_palindrome_plus_one = num_half_plus_one + num_half_plus_one_reversed;\n    var num_palindrome_minus_one = num_half_minus_one + num_half_minus_one_reversed;\n    if (num_length % 2 == 0){\n        if (num_palindrome > num){\n            return num_palindrome;\n        }\n        else{\n            return num_palindrome_plus_one;\n        }\n    }\n    else{\n        if (num_palindrome > num){\n            return num_palindrome;\n        }\n        else{\n            return num_palindrome_plus_one;\n        }\n    }\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len/2);\n    var num_left = num_str.substring(0, num_half);\n    var num_right = num_str.substring(num_len-num_half, num_len);\n    var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n    var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n    var num_left_int = parseInt(num_left);\n    var num_right_int = parseInt(num_right);\n    var num_left_rev_int = parseInt(num_left_rev);\n    var num_right_rev_int = parseInt(num_right_rev);\n    var num_left_rev_str = num_left_rev_int.toString();\n    var num_right_rev_str = num_right_rev_int.toString();\n    var num_left_rev_len = num_left_rev_str.length;\n    var num_right_rev_len = num_right_rev_str.length;\n    var num_left_rev_half = Math.floor(num_left_rev_len/2);\n    var num_right_rev_half = Math.floor(num_right_rev_len/2);\n    var num_left_rev_left = num_left_rev_str.substring(0, num_left_rev_half);\n    var num_right_rev_left = num_right_rev_str.substring(0, num_right_rev_half);\n    var num_left_rev_right = num_left_rev_str.substring(num_left_rev_len-num_left_rev_half, num_left_rev_len);\n    var num_right_rev_right = num_right_rev_str.substring(num_right_rev_len-num_right_rev_half, num_right_rev_len);\n    var num_left_rev_left_int = parseInt(num_",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len/2);\n    var num_left = num_str.substring(0,num_half);\n    var num_right = num_str.substring(num_len-num_half,num_len);\n    var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n    if(num_left < num_left_rev){\n        return parseInt(num_left + num_left_rev);\n    }\n    else{\n        var num_left_int = parseInt(num_left);\n        var num_left_int_plus = num_left_int + 1;\n        var num_left_int_plus_str = num_left_int_plus.toString();\n        var num_left_int_plus_str_rev = num_left_int_plus_str.split(\"\").reverse().join(\"\");\n        return parseInt(num_left_int_plus_str + num_left_int_plus_str_rev);\n    }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_mid = Math.floor(num_len/2);\n  var num_left = num_str.substring(0, num_mid);\n  var num_right = num_str.substring(num_mid + num_len % 2);\n  var num_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_next = parseInt(num_left + num_right) + 1;\n  var num_next_str = num_next.toString();\n  var num_next_len = num_next_str.length;\n  var num_next_mid = Math.floor(num_next_len/2);\n  var num_next_left = num_next_str.substring(0, num_next_mid);\n  var num_next_right = num_next_str.substring(num_next_mid + num_next_len % 2);\n  var num_next_rev = num_next_left.split(\"\").reverse().join(\"\");\n  if(num_next_rev == num_next_right){\n    return num_next;\n  }\n  else{\n    return next_smallest_palindrome(num_next);\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_arr.slice().reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_int = parseInt(num_arr_rev_str);\n  var num_arr_rev_int_str = num_arr_rev_int.toString();\n  var num_arr_rev_int_len = num_arr_rev_int_str.length;\n  var num_arr_rev_int_arr = num_arr_rev_int_str.split('');\n  var num_arr_rev_int_arr_rev = num_arr_rev_int_arr.slice().reverse();\n  var num_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev.join('');\n  var num_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_str);\n  var num_arr_rev_int_arr_rev_int_str = num_arr_rev_int_arr_rev_int.toString();\n  var num_arr_rev_int_arr_rev_int_len = num_arr_rev_int_arr_rev_int_str.length;\n  var num_arr_rev_int_arr_rev_int_arr = num_arr_rev_int_arr_rev_int_str.split('');\n  var num_arr_rev_int_arr_rev_int_arr_rev = num_arr_rev_int_arr_rev_int_arr.slice().reverse();\n  var num_arr_rev_int_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev_int_arr_rev.join('');\n  var num_arr_rev_int_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_int_arr_",
    "  var num_str = num.toString();\n  var num_length = num_str.length;\n  var num_half = Math.floor(num_length/2);\n  var num_left = num_str.substring(0,num_half);\n  var num_right = num_str.substring(num_half);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_rev_int = parseInt(num_right_rev);\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_rev_int_plus_one = num_left_rev_int + 1;\n  var num_left_rev_int_plus_one_str = num_left_rev_int_plus_one.toString();\n  var num_left_rev_int_plus_one_str_length = num_left_rev_int_plus_one_str.length;\n  var num_left_rev_int_plus_one_str_half = Math.floor(num_left_rev_int_plus_one_str_length/2);\n  var num_left_rev_int_plus_one_str_left = num_left_rev_int_plus_one_str.substring(0,num_left_rev_int_plus_one_str_half);\n  var num_left_rev_int_plus_one_str_right = num_left_rev_int_plus_one_str.substring(num_left_rev_int_plus_one_str_half);\n  var num_left_rev_int_plus_one_str_left_rev = num_left_rev_int_plus_one_str_left.split(\"\").reverse().join(\"\");\n  var num_left_rev_int_plus_one_str_right_rev = num_left_rev_int_plus_one_str",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var left_half = num_str.substring(0, Math.floor(num_len/2));\n    var middle = num_len % 2 == 0 ? '' : num_str.charAt(Math.floor(num_len/2));\n    var right_half = left_half.split('').reverse().join('');\n    var new_num = left_half + middle + right_half;\n    if(new_num > num){\n        return new_num;\n    }\n    if(middle == ''){\n        middle = '0';\n    }\n    var left_half_int = parseInt(left_half);\n    var middle_int = parseInt(middle);\n    left_half_int = left_half_int + 1;\n    left_half = left_half_int.toString();\n    middle = middle_int.toString();\n    right_half = left_half.split('').reverse().join('');\n    new_num = left_half + middle + right_half;\n    return new_num;\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.slice(0,num_half);\n  var num_right = num_str.slice(num_len-num_half,num_len);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_int = parseInt(num_right);\n  if(num_left_rev_int < num_right_int){\n    num_left = (parseInt(num_left)+1).toString();\n    num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  }\n  if(num_len%2 == 0){\n    return parseInt(num_left+num_left_rev);\n  }else{\n    return parseInt(num_left+num_str[num_half]+num_left_rev);\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_arr.slice(0).reverse();\n  var num_arr_rev_str = num_arr_rev.join('');\n  var num_arr_rev_num = parseInt(num_arr_rev_str);\n  if(num_len % 2 === 0){\n    var num_arr_half = num_arr.slice(0, num_len/2);\n    var num_arr_half_rev = num_arr_half.slice(0).reverse();\n    var num_arr_half_rev_str = num_arr_half_rev.join('');\n    var num_arr_half_rev_num = parseInt(num_arr_half_rev_str);\n    if(num_arr_half_rev_num > num_arr_rev_num){\n      var num_arr_half_rev_num_str = num_arr_half_rev_num.toString();\n      var num_arr_half_rev_num_arr = num_arr_half_rev_num_str.split('');\n      var num_arr_half_rev_num_arr_rev = num_arr_half_rev_num_arr.slice(0).reverse();\n      var num_arr_half_rev_num_arr_rev_str = num_arr_half_rev_num_arr_rev.join('');\n      var num_arr_half_rev_num_arr_rev_num = parseInt(num_arr_half_rev_num_arr_rev_str);\n      var num_arr_half_rev_num_arr_rev_num_str = num_arr_half_rev_num_arr_rev_num.toString();\n      var num_arr_half_rev_num_arr_rev_num_arr = num_arr_half_rev_num_arr_rev_num_str.split('');\n      var num_arr_half_rev_num_arr_rev_num_arr_rev = num_arr_",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len/2);\n    var num_left = num_str.substring(0, num_half);\n    var num_right = num_str.substring(num_len - num_half, num_len);\n    var num_left_rev = num_left.split('').reverse().join('');\n    var num_right_rev = num_right.split('').reverse().join('');\n    var num_left_int = parseInt(num_left);\n    var num_right_int = parseInt(num_right);\n    var num_left_rev_int = parseInt(num_left_rev);\n    var num_right_rev_int = parseInt(num_right_rev);\n    var num_left_rev_int_plus = num_left_rev_int + 1;\n    var num_left_rev_int_plus_str = num_left_rev_int_plus.toString();\n    var num_left_rev_int_plus_str_len = num_left_rev_int_plus_str.length;\n    var num_left_rev_int_plus_str_half = Math.floor(num_left_rev_int_plus_str_len/2);\n    var num_left_rev_int_plus_str_left = num_left_rev_int_plus_str.substring(0, num_left_rev_int_plus_str_half);\n    var num_left_rev_int_plus_str_right = num_left_rev_int_plus_str.substring(num_left_rev_int_plus_str_len - num_left_rev_int_plus_str_half, num_left_rev_int_plus_str_len);\n    var num_left_rev_int_plus_str_left_rev = num_left_rev_int_plus_str_left.split('').reverse().join('');\n    var num_left_rev_int_plus_str_right_rev = num_left",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_arr = num_str.split('');\n    var num_arr_rev = num_str.split('').reverse();\n    var num_arr_rev_join = num_arr_rev.join('');\n    var num_arr_rev_join_int = parseInt(num_arr_rev_join);\n    var num_arr_rev_join_int_str = num_arr_rev_join_int.toString();\n    var num_arr_rev_join_int_str_len = num_arr_rev_join_int_str.length;\n    var num_arr_rev_join_int_str_len_diff = num_len - num_arr_rev_join_int_str_len;\n    var num_arr_rev_join_int_str_len_diff_str = num_arr_rev_join_int_str_len_diff.toString();\n    var num_arr_rev_join_int_str_len_diff_str_arr = num_arr_rev_join_int_str_len_diff_str.split('');\n    var num_arr_rev_join_int_str_len_diff_str_arr_rev = num_arr_rev_join_int_str_len_diff_str_arr.reverse();\n    var num_arr_rev_join_int_str_len_diff_str_arr_rev_join = num_arr_rev_join_int_str_len_diff_str_arr_rev.join('');\n    var num_arr_rev_join_int_str_len_diff_str_arr_rev_join_int = parseInt(num_arr_rev_join_int_str_len_diff_str_arr_rev_join);\n    var num_arr_rev_join_int_str_len_diff_str_arr_rev_join_int_str = num_arr_rev_join_int_str_len_diff_str_arr_rev_join_int.toString();\n    var num_arr_rev_join_",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_len_half = Math.floor(num_len/2);\n  var num_arr = num_str.split('');\n  var num_arr_rev = num_arr.slice(0).reverse();\n  var num_arr_half = num_arr.slice(0, num_len_half);\n  var num_arr_half_rev = num_arr_half.slice(0).reverse();\n  var num_arr_half_rev_str = num_arr_half_rev.join('');\n  var num_arr_half_rev_str_num = parseInt(num_arr_half_rev_str);\n  var num_arr_half_rev_str_num_next = num_arr_half_rev_str_num + 1;\n  var num_arr_half_rev_str_num_next_str = num_arr_half_rev_str_num_next.toString();\n  var num_arr_half_rev_str_num_next_str_len = num_arr_half_rev_str_num_next_str.length;\n  var num_arr_half_rev_str_num_next_str_len_diff = num_len_half - num_arr_half_rev_str_num_next_str_len;\n  var num_arr_half_rev_str_num_next_str_len_diff_arr = [];\n  for(var i = 0; i < num_arr_half_rev_str_num_next_str_len_diff; i++){\n    num_arr_half_rev_str_num_next_str_len_diff_arr.push('0');\n  }\n  var num_arr_half_rev_str_num_next_str_len_diff_arr_str = num_arr_half_rev_str_num_next_str_len_diff_arr.join('');\n  var num_arr_half_rev_str_num_next_str_len_diff_arr_str_num = parseInt(num_arr_half_",
    "    let num_str = num.toString();\n    let num_length = num_str.length;\n    let num_half = Math.floor(num_length / 2);\n    let num_left = num_str.substring(0, num_half);\n    let num_right = num_str.substring(num_length - num_half);\n    let num_left_rev = num_left.split('').reverse().join('');\n    if (num_left < num_right) {\n        num_left = (parseInt(num_left) + 1).toString();\n        num_left_rev = num_left.split('').reverse().join('');\n    }\n    let result = num_left + num_left_rev;\n    if (num_length % 2 == 1) {\n        result = num_left + num_str[num_half] + num_left_rev;\n    }\n    return parseInt(result);\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len / 2);\n  var num_left = num_str.substring(0, num_half);\n  var num_right = num_str.substring(num_half + num_len % 2);\n  var num_left_rev = num_left.split('').reverse().join('');\n  var num_right_rev = num_right.split('').reverse().join('');\n  var num_left_rev_num = parseInt(num_left_rev);\n  var num_right_rev_num = parseInt(num_right_rev);\n  var num_left_num = parseInt(num_left);\n  var num_right_num = parseInt(num_right);\n  var num_left_rev_num_str = num_left_rev_num.toString();\n  var num_right_rev_num_str = num_right_rev_num.toString();\n  var num_left_num_str = num_left_num.toString();\n  var num_right_num_str = num_right_num.toString();\n  var num_left_rev_num_len = num_left_rev_num_str.length;\n  var num_right_rev_num_len = num_right_rev_num_str.length;\n  var num_left_num_len = num_left_num_str.length;\n  var num_right_num_len = num_right_num_str.length;\n  var num_left_rev_num_half = Math.floor(num_left_rev_num_len / 2);\n  var num_right_rev_num_half = Math.floor(num_right_rev_num_len / 2);\n  var num_left_num_half = Math.floor(num_left_num_len / 2);\n  var num_right_num_half = Math.floor(num_right_num_len / 2);\n  var num_left_rev_num_left = num_left_rev_num",
    "  var num_string = num.toString();\n  var num_length = num_string.length;\n  var num_half_length = Math.floor(num_length/2);\n  var num_half_string = num_string.slice(0, num_half_length);\n  var num_half_string_reversed = num_half_string.split(\"\").reverse().join(\"\");\n  var num_half_string_reversed_int = parseInt(num_half_string_reversed);\n  var num_half_string_int = parseInt(num_half_string);\n  var num_half_string_reversed_int_plus_one = num_half_string_reversed_int + 1;\n  var num_half_string_reversed_int_plus_one_string = num_half_string_reversed_int_plus_one.toString();\n  var num_half_string_reversed_int_plus_one_string_reversed = num_half_string_reversed_int_plus_one_string.split(\"\").reverse().join(\"\");\n  var num_half_string_reversed_int_plus_one_string_reversed_int = parseInt(num_half_string_reversed_int_plus_one_string_reversed);\n  var num_half_string_reversed_int_plus_one_string_reversed_int_plus_one = num_half_string_reversed_int_plus_one_string_reversed_int + 1;\n  var num_half_string_reversed_int_plus_one_string_reversed_int_plus_one_string = num_half_string_reversed_int_plus_one_string_reversed_int_plus_one.toString();\n  var num_half_string_reversed_int_plus_one_string_reversed_int_plus_one_string_reversed = num_half_string_reversed_int_plus_one_string_reversed_int_plus_one_string.split(\"\").reverse().join",
    "  var str = num.toString();\n  var len = str.length;\n  var mid = Math.floor(len/2);\n  var left = str.substr(0,mid);\n  var right = str.substr(mid+1);\n  if(len%2 === 0){\n    right = str.substr(mid);\n  }\n  if(left === right.split('').reverse().join('')){\n    return num;\n  }\n  var left_num = parseInt(left);\n  var right_num = parseInt(right);\n  var left_num_next = left_num+1;\n  var left_num_next_str = left_num_next.toString();\n  var right_num_next = left_num_next_str.split('').reverse().join('');\n  if(len%2 === 0){\n    return parseInt(left_num_next_str+right_num_next);\n  }else{\n    return parseInt(left_num_next_str+str[mid]+right_num_next);\n  }\n}\n",
    "    //find the next smallest palindrome\n    //return the next smallest palindrome\n    let num_str = num.toString();\n    let num_arr = num_str.split('');\n    let num_len = num_arr.length;\n    let num_half = Math.floor(num_len/2);\n    let num_left = num_arr.slice(0,num_half);\n    let num_right = num_arr.slice(num_half,num_len);\n    let num_right_rev = num_right.reverse();\n    let num_left_rev = num_left.reverse();\n    let num_left_rev_join = num_left_rev.join('');\n    let num_right_rev_join = num_right_rev.join('');\n    let num_left_rev_join_int = parseInt(num_left_rev_join);\n    let num_right_rev_join_int = parseInt(num_right_rev_join);\n    let num_left_rev_join_int_str = num_left_rev_join_int.toString();\n    let num_right_rev_join_int_str = num_right_rev_join_int.toString();\n    let num_left_rev_join_int_str_len = num_left_rev_join_int_str.length;\n    let num_right_rev_join_int_str_len = num_right_rev_join_int_str.length;\n    let num_left_rev_join_int_str_len_diff = num_half - num_left_rev_join_int_str_len;\n    let num_right_rev_join_int_str_len_diff = num_half - num_right_rev_join_int_str_len;\n    let num_left_rev_join_int_str_len_diff_arr = [];\n    let num_right_rev_join_int_str_len_diff_arr = [];\n    let num_left_rev_join_int_str_len_diff_arr_join = '';\n    let num_right_rev_join_int_str",
    "  var num_str = num.toString();\n  var num_length = num_str.length;\n  var is_odd = num_length % 2;\n  var left_half = num_str.substring(0, Math.floor(num_length/2));\n  var right_half = num_str.substring(Math.ceil(num_length/2), num_length);\n  var left_half_int = parseInt(left_half);\n  var right_half_int = parseInt(right_half);\n  var left_half_int_next = left_half_int + 1;\n  var left_half_next = left_half_int_next.toString();\n  var left_half_next_length = left_half_next.length;\n  var left_half_next_length_diff = left_half.length - left_half_next.length;\n  var left_half_next_padded = left_half_next;\n  if (left_half_next_length_diff > 0) {\n    for (var i = 0; i < left_half_next_length_diff; i++) {\n      left_half_next_padded = '0' + left_half_next_padded;\n    }\n  }\n  var left_half_next_padded_reversed = left_half_next_padded.split('').reverse().join('');\n  var next_palindrome = left_half_next_padded + left_half_next_padded_reversed;\n  if (is_odd) {\n    next_palindrome = left_half_next_padded + left_half_next_padded_reversed.substring(1, left_half_next_padded_reversed.length);\n  }\n  return parseInt(next_palindrome);\n}\n",
    "  //find the next smallest palindrome\n  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.substring(0,num_half);\n  var num_right = num_str.substring(num_len-num_half,num_len);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  if(num_left_rev < num_right){\n    num_left = (parseInt(num_left)+1).toString();\n    num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  }\n  var num_new = num_left + num_left_rev;\n  return parseInt(num_new);\n}\n",
    "    var num_str = num.toString();\n    var num_str_len = num_str.length;\n    var num_str_len_half = Math.floor(num_str_len/2);\n    var num_str_len_half_plus = Math.ceil(num_str_len/2);\n    var num_str_len_half_minus = Math.floor(num_str_len/2)-1;\n    var num_str_len_half_plus_minus = Math.ceil(num_str_len/2)-1;\n    var num_str_len_half_plus_plus = Math.ceil(num_str_len/2)+1;\n    var num_str_len_half_minus_minus = Math.floor(num_str_len/2)-2;\n    var num_str_len_half_plus_plus_plus = Math.ceil(num_str_len/2)+2;\n    var num_str_len_half_minus_minus_minus = Math.floor(num_str_len/2)-3;\n    var num_str_len_half_plus_plus_plus_plus = Math.ceil(num_str_len/2)+3;\n    var num_str_len_half_plus_plus_plus_plus_plus = Math.ceil(num_str_len/2)+4;\n    var num_str_len_half_minus_minus_minus_minus = Math.floor(num_str_len/2)-4;\n    var num_str_len_half_plus_plus_plus_plus_plus_plus = Math.ceil(num_str_len/2)+5;\n    var num_str_len_half_minus_minus_minus_minus_minus = Math.floor(num_str_len/2)-5;\n    var num_str_len_half_plus_plus_plus_plus_plus_plus_plus = Math.ceil(num_str_len/2)+6;\n    var num_str_len_half_minus_minus_minus_minus_minus_minus = Math.floor(num_str_len/2)-6;\n    var num",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var left = Math.floor(num_len/2);\n  var right = Math.ceil(num_len/2);\n  var left_str = num_str.substring(0, left);\n  var right_str = num_str.substring(right);\n  var left_num = parseInt(left_str);\n  var right_num = parseInt(right_str);\n  if(left_num === right_num){\n    return num;\n  }\n  else{\n    var left_num_str = (left_num + 1).toString();\n    var left_num_len = left_num_str.length;\n    var left_num_len_diff = left - left_num_len;\n    var left_num_str_pad = left_num_str;\n    for(var i = 0; i < left_num_len_diff; i++){\n      left_num_str_pad = \"0\" + left_num_str_pad;\n    }\n    var right_num_str = left_num_str_pad.split(\"\").reverse().join(\"\");\n    var palindrome = left_num_str_pad + right_num_str;\n    return parseInt(palindrome);\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var left_half = num_str.substring(0, Math.floor(num_len/2));\n  var right_half = num_str.substring(Math.ceil(num_len/2));\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var new_num = left_half + left_half_rev;\n  if(new_num > num){\n    return new_num;\n  }\n  else{\n    var new_num_int = parseInt(new_num);\n    var new_num_int_plus_one = new_num_int + 1;\n    var new_num_plus_one = new_num_int_plus_one.toString();\n    var new_num_plus_one_len = new_num_plus_one.length;\n    var new_num_plus_one_left_half = new_num_plus_one.substring(0, Math.floor(new_num_plus_one_len/2));\n    var new_num_plus_one_right_half = new_num_plus_one.substring(Math.ceil(new_num_plus_one_len/2));\n    var new_num_plus_one_left_half_rev = new_num_plus_one_left_half.split(\"\").reverse().join(\"\");\n    var new_num_plus_one_new_num = new_num_plus_one_left_half + new_num_plus_one_left_half_rev;\n    return new_num_plus_one_new_num;\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.substring(0, num_half);\n  var num_right = num_str.substring(num_len - num_half, num_len);\n  var num_left_rev = num_left.split('').reverse().join('');\n  var num_right_rev = num_right.split('').reverse().join('');\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_rev_int = parseInt(num_right_rev);\n  var num_left_rev_str = num_left_rev_int.toString();\n  var num_right_rev_str = num_right_rev_int.toString();\n  var num_left_rev_len = num_left_rev_str.length;\n  var num_right_rev_len = num_right_rev_str.length;\n  var num_left_rev_half = Math.floor(num_left_rev_len/2);\n  var num_right_rev_half = Math.floor(num_right_rev_len/2);\n  var num_left_rev_left = num_left_rev_str.substring(0, num_left_rev_half);\n  var num_right_rev_left = num_right_rev_str.substring(0, num_right_rev_half);\n  var num_left_rev_right = num_left_rev_str.substring(num_left_rev_len - num_left_rev_half, num_left_rev_len);\n  var num_right_rev_right = num_right_rev_str.substring(num_right_rev_len - num_right_rev_half, num_right_rev_len);\n  var num_left_rev_left_int = parse",
    "    let num_string = num.toString();\n    let num_length = num_string.length;\n    let num_half = Math.floor(num_length / 2);\n    let num_first_half = num_string.substring(0, num_half);\n    let num_second_half = num_string.substring(num_half + (num_length % 2), num_length);\n    let num_first_half_rev = num_first_half.split('').reverse().join('');\n    let num_second_half_rev = num_second_half.split('').reverse().join('');\n    let num_first_half_rev_int = parseInt(num_first_half_rev);\n    let num_second_half_rev_int = parseInt(num_second_half_rev);\n    let num_first_half_int = parseInt(num_first_half);\n    let num_second_half_int = parseInt(num_second_half);\n    let num_first_half_rev_int_plus_one = num_first_half_rev_int + 1;\n    let num_first_half_rev_int_plus_one_string = num_first_half_rev_int_plus_one.toString();\n    let num_first_half_rev_int_plus_one_string_length = num_first_half_rev_int_plus_one_string.length;\n    let num_first_half_rev_int_plus_one_string_half = Math.floor(num_first_half_rev_int_plus_one_string_length / 2);\n    let num_first_half_rev_int_plus_one_string_first_half = num_first_half_rev_int_plus_one_string.substring(0, num_first_half_rev_int_plus_one_string_half);\n    let num_first_half_rev_int_plus_one_string_second_half = num_first_half_rev_int_plus_one_string.substring(num_first_half_rev_int_plus_one_string_half + (num_first",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var mid_index = Math.floor(num_len/2);\n  var left_index = mid_index - 1;\n  var right_index = num_len % 2 === 0 ? mid_index : mid_index + 1;\n  var left_half = num_str.substring(0, left_index + 1);\n  var right_half = num_str.substring(right_index);\n  var left_half_rev = left_half.split('').reverse().join('');\n  var next_palindrome = parseInt(left_half + left_half_rev);\n  if(next_palindrome > num){\n    return next_palindrome;\n  }\n  if(left_half.length === 1){\n    if(left_half === '9'){\n      return parseInt('11');\n    }\n    return parseInt(left_half) + 1;\n  }\n  var mid_num = parseInt(left_half[left_index]) + 1;\n  var mid_num_str = mid_num.toString();\n  if(mid_num_str.length === 2){\n    left_half = (parseInt(left_half) + 1).toString();\n    mid_num_str = '0';\n  }\n  left_half = left_half.substring(0, left_index) + mid_num_str;\n  left_half_rev = left_half.split('').reverse().join('');\n  return parseInt(left_half + left_half_rev);\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var palindrome = false;\n  var palindrome_str = '';\n  var palindrome_num = 0;\n  var i = 0;\n\n  while(!palindrome){\n    if(num_len % 2 === 0){\n      palindrome_str = num_str.slice(0, num_half) + num_str.slice(0, num_half).split('').reverse().join('');\n    }else{\n      palindrome_str = num_str.slice(0, num_half) + num_str.slice(num_half+1, num_len).split('').reverse().join('');\n    }\n    palindrome_num = parseInt(palindrome_str);\n    if(palindrome_num > num){\n      palindrome = true;\n    }else{\n      num_str = (parseInt(num_str) + 1).toString();\n      num_len = num_str.length;\n      num_half = Math.floor(num_len/2);\n    }\n  }\n  return palindrome_num;\n}\n",
    "  var num_str = num.toString();\n  var num_arr = num_str.split('');\n  var num_len = num_arr.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_arr.slice(0, half_len);\n  var right_half = num_arr.slice(half_len + num_len % 2, num_len);\n  var left_half_rev = left_half.slice().reverse();\n  var right_half_rev = right_half.slice().reverse();\n  var left_half_rev_str = left_half_rev.join('');\n  var right_half_rev_str = right_half_rev.join('');\n  var left_half_rev_num = parseInt(left_half_rev_str);\n  var right_half_rev_num = parseInt(right_half_rev_str);\n  var left_half_num = parseInt(left_half.join(''));\n  var right_half_num = parseInt(right_half.join(''));\n  var result;\n\n  if(left_half_num === right_half_num){\n    if(num_len % 2 === 0){\n      result = parseInt(left_half_rev_str + right_half_rev_str);\n    } else {\n      result = parseInt(left_half_rev_str + num_arr[half_len] + right_half_rev_str);\n    }\n  } else if(left_half_num < right_half_num){\n    if(num_len % 2 === 0){\n      result = parseInt(left_half_rev_str + right_half_rev_str);\n    } else {\n      result = parseInt(left_half_rev_str + num_arr[half_len] + right_half_rev_str);\n    }\n  } else {\n    if(num_len % 2 === 0){\n      result = parseInt(left_half_rev_str + right_half_rev_str);\n    } else {\n      result = parseInt(left_half_rev_str +",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_str.substring(0,half_len);\n  var right_half = num_str.substring(num_len-half_len,num_len);\n  var left_half_num = parseInt(left_half);\n  var right_half_num = parseInt(right_half);\n  var left_half_num_next = left_half_num + 1;\n  var left_half_num_next_str = left_half_num_next.toString();\n  var left_half_num_next_str_len = left_half_num_next_str.length;\n  var left_half_num_next_str_pad = left_half_num_next_str.padStart(half_len,'0');\n  var right_half_num_next_str_pad = left_half_num_next_str_pad.split(\"\").reverse().join(\"\");\n  var palindrome_next = parseInt(left_half_num_next_str_pad + right_half_num_next_str_pad);\n  return palindrome_next;\n}\n",
    "    var palindrome = num;\n    while(!is_palindrome(palindrome)){\n        palindrome++;\n    }\n    return palindrome;\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_mid = Math.floor(num_len/2);\n  var num_left = num_str.substring(0, num_mid);\n  var num_right = num_str.substring(num_mid + num_len%2, num_len);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_rev_int = parseInt(num_right_rev);\n  if(num_left_int > num_right_rev_int){\n    return parseInt(num_left + num_left_rev);\n  }\n  else if(num_left_int < num_right_rev_int){\n    num_left_int++;\n    num_left = num_left_int.toString();\n    num_left_rev = num_left.split(\"\").reverse().join(\"\");\n    return parseInt(num_left + num_left_rev);\n  }\n  else{\n    if(num_left_int == 9){\n      var nine_str = \"\";\n      for(var i = 0; i < num_mid; i++){\n        nine_str += \"9\";\n      }\n      return parseInt(\"1\" + nine_str + \"1\");\n    }\n    else{\n      num_left_int++;\n      num_left = num_left_int.toString();\n      num_left_rev = num_left.split(\"\").reverse().join(\"\");\n      return parseInt(num_left + num_left_rev);\n    }\n  }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid = Math.floor(num_len/2);\n    let left_side = num_str.substring(0, mid);\n    let right_side = num_str.substring(mid + num_len % 2, num_len);\n    let next_palindrome = parseInt(left_side + (num_len % 2 ? num_str[mid] : '') + left_side.split('').reverse().join(''));\n    if(next_palindrome > num){\n        return next_palindrome;\n    }\n    if(num_len % 2 && parseInt(num_str[mid]) < 9){\n        return parseInt(left_side + (parseInt(num_str[mid]) + 1) + left_side.split('').reverse().join(''));\n    }\n    if(parseInt(left_side) === parseInt(left_side.split('').reverse().join(''))){\n        left_side = (parseInt(left_side) + 1).toString();\n        return parseInt(left_side + (num_len % 2 ? '0' : '') + left_side.split('').reverse().join(''));\n    }\n    let carry = 1;\n    let left_side_arr = left_side.split('');\n    for(let i = left_side_arr.length - 1; i >= 0; i--){\n        let sum = parseInt(left_side_arr[i]) + carry;\n        if(sum > 9){\n            carry = 1;\n            left_side_arr[i] = '0';\n        }\n        else{\n            left_side_arr[i] = sum.toString();\n            carry = 0;\n        }\n    }\n    left_side = left_side_arr.join('');\n    return parseInt(left_side + (num_len % 2 ? '0' : '') + left_side.split('').reverse().join(''));\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_str.substring(0,half_len);\n  var right_half = num_str.substring(half_len+1);\n  var left_half_int = parseInt(left_half);\n  var right_half_int = parseInt(right_half);\n  var left_half_int_next = left_half_int + 1;\n  var left_half_next = left_half_int_next.toString();\n  var left_half_next_len = left_half_next.length;\n  var left_half_next_len_diff = half_len - left_half_next_len;\n  var left_half_next_padded = left_half_next;\n  for (var i = 0; i < left_half_next_len_diff; i++){\n    left_half_next_padded = \"0\" + left_half_next_padded;\n  }\n  var right_half_next = left_half_next_padded.split(\"\").reverse().join(\"\");\n  var next_palindrome = left_half_next_padded + num_str[half_len] + right_half_next;\n  return parseInt(next_palindrome);\n}\n",
    "  var palindrome = num;\n  var digits = num.toString().length;\n  var left_half = Math.floor(digits/2);\n  var right_half = Math.ceil(digits/2);\n  var left_half_num = parseInt(num.toString().substring(0, left_half));\n  var right_half_num = parseInt(num.toString().substring(right_half, digits));\n  var left_half_num_str = left_half_num.toString();\n  var right_half_num_str = right_half_num.toString();\n  var left_half_num_str_rev = left_half_num_str.split('').reverse().join('');\n  var right_half_num_str_rev = right_half_num_str.split('').reverse().join('');\n  var left_half_num_rev = parseInt(left_half_num_str_rev);\n  var right_half_num_rev = parseInt(right_half_num_str_rev);\n  var left_half_num_rev_str = left_half_num_rev.toString();\n  var right_half_num_rev_str = right_half_num_rev.toString();\n  var left_half_num_rev_str_rev = left_half_num_rev_str.split('').reverse().join('');\n  var right_half_num_rev_str_rev = right_half_num_rev_str.split('').reverse().join('');\n  var left_half_num_rev_rev = parseInt(left_half_num_rev_str_rev);\n  var right_half_num_rev_rev = parseInt(right_half_num_rev_str_rev);\n  var left_half_num_rev_rev_str = left_half_num_rev_rev.toString();\n  var right_half_num_rev_rev_str = right_half_num_rev_rev.toString();\n  var left_half_num_rev_rev_str_rev = left_half_num_rev_rev",
    "    let palindrome = num;\n    while(!is_palindrome(palindrome)){\n        palindrome++;\n    }\n    return palindrome;\n}\n",
    "  if(num < 0){\n    return \"not a valid number\";\n  }\n  if(num < 10){\n    return num;\n  }\n  var num_string = num.toString();\n  var num_length = num_string.length;\n  var left_half = num_string.slice(0, Math.floor(num_length/2));\n  var right_half = num_string.slice(Math.ceil(num_length/2));\n  var left_half_num = parseInt(left_half);\n  var right_half_num = parseInt(right_half);\n  if(left_half_num < right_half_num){\n    left_half_num++;\n    left_half = left_half_num.toString();\n    right_half = left_half.split(\"\").reverse().join(\"\");\n    if(num_length % 2 === 0){\n      return parseInt(left_half + right_half);\n    }\n    else{\n      return parseInt(left_half + num_string[Math.floor(num_length/2)] + right_half);\n    }\n  }\n  else{\n    left_half = left_half_num.toString();\n    right_half = left_half.split(\"\").reverse().join(\"\");\n    if(num_length % 2 === 0){\n      return parseInt(left_half + right_half);\n    }\n    else{\n      return parseInt(left_half + num_string[Math.floor(num_length/2)] + right_half);\n    }\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var half_len = Math.floor(num_len/2);\n  var left_half = num_str.substring(0,half_len);\n  var right_half = num_str.substring(half_len,num_len);\n  var left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  var right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  if(num_len%2 === 0){\n    if(left_half_rev > right_half){\n      return parseInt(left_half + left_half_rev);\n    }\n    else{\n      var left_half_int = parseInt(left_half);\n      left_half_int++;\n      left_half = left_half_int.toString();\n      left_half_rev = left_half.split(\"\").reverse().join(\"\");\n      return parseInt(left_half + left_half_rev);\n    }\n  }\n  else{\n    var middle = num_str.substring(half_len,half_len+1);\n    if(left_half_rev > right_half){\n      return parseInt(left_half + middle + left_half_rev);\n    }\n    else{\n      var left_half_int = parseInt(left_half);\n      left_half_int++;\n      left_half = left_half_int.toString();\n      left_half_rev = left_half.split(\"\").reverse().join(\"\");\n      return parseInt(left_half + middle + left_half_rev);\n    }\n  }\n}\n",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.slice(0,num_half);\n  var num_right = num_str.slice(num_len-num_half,num_len);\n  var num_left_rev = num_left.split('').reverse().join('');\n  if(num_left_rev > num_right){\n    return num_left + num_left_rev;\n  }\n  else{\n    var num_left_int = parseInt(num_left);\n    num_left_int++;\n    num_left = num_left_int.toString();\n    num_left_rev = num_left.split('').reverse().join('');\n    return num_left + num_left_rev;\n  }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid_idx = Math.floor(num_len/2);\n    let left_idx = mid_idx;\n    let right_idx = num_len % 2 === 0 ? mid_idx : mid_idx + 1;\n    let left_str = num_str.slice(0, left_idx);\n    let right_str = num_str.slice(right_idx);\n    let left_num = parseInt(left_str);\n    let right_num = parseInt(right_str);\n    let new_num = 0;\n    if(left_num === right_num){\n        new_num = num + 1;\n    }\n    else{\n        new_num = left_num + 1;\n    }\n    let new_num_str = new_num.toString();\n    let new_num_len = new_num_str.length;\n    let new_mid_idx = Math.floor(new_num_len/2);\n    let new_left_idx = new_mid_idx;\n    let new_right_idx = new_num_len % 2 === 0 ? new_mid_idx : new_mid_idx + 1;\n    let new_left_str = new_num_str.slice(0, new_left_idx);\n    let new_right_str = new_num_str.slice(new_right_idx);\n    let new_left_num = parseInt(new_left_str);\n    let new_right_num = parseInt(new_right_str);\n    let new_left_num_str = new_left_num.toString();\n    let new_right_num_str = new_right_num.toString();\n    let new_right_num_str_rev = new_right_num_str.split('').reverse().join('');\n    let new_num_str_rev = new_left_num_str + new_right_num_str_rev;\n    let new_num_rev = parseInt(new_num",
    "  var num_str = num.toString();\n  var num_len = num_str.length;\n  var num_half = Math.floor(num_len/2);\n  var num_left = num_str.substring(0,num_half);\n  var num_right = num_str.substring(num_len-num_half,num_len);\n  var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  var num_left_int = parseInt(num_left);\n  var num_right_int = parseInt(num_right);\n  var num_left_rev_int = parseInt(num_left_rev);\n  var num_right_rev_int = parseInt(num_right_rev);\n  var num_left_rev_int_plus_one = num_left_rev_int + 1;\n  var num_left_rev_int_plus_one_str = num_left_rev_int_plus_one.toString();\n  var num_left_rev_int_plus_one_str_len = num_left_rev_int_plus_one_str.length;\n  var num_left_rev_int_plus_one_str_half = Math.floor(num_left_rev_int_plus_one_str_len/2);\n  var num_left_rev_int_plus_one_str_left = num_left_rev_int_plus_one_str.substring(0,num_left_rev_int_plus_one_str_half);\n  var num_left_rev_int_plus_one_str_right = num_left_rev_int_plus_one_str.substring(num_left_rev_int_plus_one_str_len-num_left_rev_int_plus_one_str_half,num_left_rev_int_plus_one_str_len);\n  var num_left_rev_int_plus_one_str_left_rev = num_left_rev_int_plus_one_str_left.split(\"",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len/2);\n    var num_left = num_str.substring(0, num_half);\n    var num_right = num_str.substring(num_len - num_half, num_len);\n    var num_left_rev = num_right.split('').reverse().join('');\n    var num_left_int = parseInt(num_left);\n    var num_left_rev_int = parseInt(num_left_rev);\n    var num_left_int_next = num_left_int + 1;\n    var num_left_int_next_str = num_left_int_next.toString();\n    var num_left_int_next_rev = num_left_int_next_str.split('').reverse().join('');\n    var num_left_int_next_rev_int = parseInt(num_left_int_next_rev);\n    var num_left_int_next_rev_int_str = num_left_int_next_rev_int.toString();\n    var num_left_int_next_rev_int_str_len = num_left_int_next_rev_int_str.length;\n    var num_left_int_next_rev_int_str_len_diff = num_half - num_left_int_next_rev_int_str_len;\n    var num_left_int_next_rev_int_str_len_diff_str = '';\n    for(var i = 0; i < num_left_int_next_rev_int_str_len_diff; i++){\n        num_left_int_next_rev_int_str_len_diff_str += '0';\n    }\n    var num_left_int_next_rev_int_str_len_diff_str_final = num_left_int_next_rev_int_str_len_diff_str + num_left_int_next_rev_int_str;\n    var num_left_int_",
    "\tvar num_str = num.toString();\n\tvar num_len = num_str.length;\n\tvar num_arr = num_str.split(\"\");\n\tvar num_arr_rev = num_arr.slice(0).reverse();\n\tvar num_arr_rev_str = num_arr_rev.join(\"\");\n\tvar num_arr_rev_int = parseInt(num_arr_rev_str);\n\tvar num_arr_rev_int_str = num_arr_rev_int.toString();\n\tvar num_arr_rev_int_len = num_arr_rev_int_str.length;\n\tvar num_arr_rev_int_arr = num_arr_rev_int_str.split(\"\");\n\tvar num_arr_rev_int_arr_rev = num_arr_rev_int_arr.slice(0).reverse();\n\tvar num_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev.join(\"\");\n\tvar num_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_str);\n\tvar num_arr_rev_int_arr_rev_int_str = num_arr_rev_int_arr_rev_int.toString();\n\tvar num_arr_rev_int_arr_rev_int_len = num_arr_rev_int_arr_rev_int_str.length;\n\tvar num_arr_rev_int_arr_rev_int_arr = num_arr_rev_int_arr_rev_int_str.split(\"\");\n\tvar num_arr_rev_int_arr_rev_int_arr_rev = num_arr_rev_int_arr_rev_int_arr.slice(0).reverse();\n\tvar num_arr_rev_int_arr_rev_int_arr_rev_str = num_arr_rev_int_arr_rev_int_arr_rev.join(\"\");\n\tvar num_arr_rev_int_arr_rev_int_arr_rev_int = parseInt(num_arr_rev_int_arr_rev_int_arr_",
    "  var num_str = num.toString();\n  var num_arr = num_str.split('');\n  var num_len = num_arr.length;\n  var is_odd = num_len % 2;\n  var mid_index = Math.floor(num_len / 2);\n  var left_half = num_arr.slice(0, mid_index);\n  var right_half = num_arr.slice(mid_index + is_odd);\n  var left_half_rev = left_half.slice().reverse();\n  var right_half_rev = right_half.slice().reverse();\n  var left_half_rev_str = left_half_rev.join('');\n  var right_half_rev_str = right_half_rev.join('');\n  var left_half_rev_num = parseInt(left_half_rev_str);\n  var right_half_rev_num = parseInt(right_half_rev_str);\n  var mid_num = parseInt(num_arr[mid_index]);\n  var mid_num_plus_1 = mid_num + 1;\n  var mid_num_plus_1_str = mid_num_plus_1.toString();\n  var mid_num_plus_1_arr = mid_num_plus_1_str.split('');\n  var mid_num_plus_1_len = mid_num_plus_1_arr.length;\n  var mid_num_plus_1_is_odd = mid_num_plus_1_len % 2;\n  var mid_num_plus_1_mid_index = Math.floor(mid_num_plus_1_len / 2);\n  var mid_num_plus_1_left_half = mid_num_plus_1_arr.slice(0, mid_num_plus_1_mid_index);\n  var mid_num_plus_1_right_half = mid_num_plus_1_arr.slice(mid_num_plus_1_mid_index + mid_num_plus_1_is_odd);\n  var mid_num_plus_1_left_half_rev = mid_num_",
    "    if(num < 0) return -1;\n    if(num < 10) return num + 1;\n    if(num === 11) return 22;\n    var num_str = num.toString();\n    var len = num_str.length;\n    var mid = Math.floor(len / 2);\n    var left = num_str.substring(0, mid);\n    var right = num_str.substring(mid + len % 2, len);\n    var left_num = parseInt(left);\n    var right_num = parseInt(right);\n    if(left_num < right_num){\n        left = left_num + 1;\n        right = left;\n    }\n    else if(left_num > right_num){\n        right = left_num;\n    }\n    else{\n        var left_num = parseInt(left);\n        left = left_num + 1;\n        right = left;\n    }\n    var palindrome = left.toString() + right.toString();\n    if(len % 2 === 1){\n        palindrome = left.toString() + num_str[mid] + right.toString();\n    }\n    return parseInt(palindrome);\n}\n",
    "    var num_str = num.toString();\n    var num_len = num_str.length;\n    var num_half = Math.floor(num_len/2);\n    var num_left = num_str.substring(0, num_half);\n    var num_right = num_str.substring(num_len - num_half, num_len);\n    var num_left_rev = num_left.split(\"\").reverse().join(\"\");\n    var num_right_rev = num_right.split(\"\").reverse().join(\"\");\n    var num_left_rev_int = parseInt(num_left_rev);\n    var num_right_rev_int = parseInt(num_right_rev);\n    var num_left_int = parseInt(num_left);\n    var num_right_int = parseInt(num_right);\n    var num_left_rev_int_plus_one = num_left_rev_int + 1;\n    var num_left_rev_int_plus_one_str = num_left_rev_int_plus_one.toString();\n    var num_left_rev_int_plus_one_str_len = num_left_rev_int_plus_one_str.length;\n    var num_left_rev_int_plus_one_str_half = Math.floor(num_left_rev_int_plus_one_str_len/2);\n    var num_left_rev_int_plus_one_str_left = num_left_rev_int_plus_one_str.substring(0, num_left_rev_int_plus_one_str_half);\n    var num_left_rev_int_plus_one_str_right = num_left_rev_int_plus_one_str.substring(num_left_rev_int_plus_one_str_len - num_left_rev_int_plus_one_str_half, num_left_rev_int_plus_one_str_len);\n    var num_left_rev_int_plus_one_str_left_rev = num_left_rev_int_plus_one_str_left.split(\"",
    "  var num_str = num.toString();\n  var num_arr = num_str.split('');\n  var num_len = num_arr.length;\n  var half_len = Math.floor(num_len/2);\n  var first_half = num_arr.slice(0, half_len);\n  var second_half = num_arr.slice(half_len, num_len);\n  var second_half_reversed = second_half.reverse();\n  var new_num = first_half.concat(second_half_reversed);\n  var new_num_int = parseInt(new_num.join(''));\n  if (new_num_int > num){\n    return new_num_int;\n  } else {\n    var first_half_int = parseInt(first_half.join(''));\n    var first_half_int_plus_one = first_half_int + 1;\n    var first_half_int_plus_one_str = first_half_int_plus_one.toString();\n    var first_half_int_plus_one_arr = first_half_int_plus_one_str.split('');\n    var first_half_int_plus_one_len = first_half_int_plus_one_arr.length;\n    var first_half_int_plus_one_half_len = Math.floor(first_half_int_plus_one_len/2);\n    var first_half_int_plus_one_first_half = first_half_int_plus_one_arr.slice(0, first_half_int_plus_one_half_len);\n    var first_half_int_plus_one_second_half = first_half_int_plus_one_arr.slice(first_half_int_plus_one_half_len, first_half_int_plus_one_len);\n    var first_half_int_plus_one_second_half_reversed = first_half_int_plus_one_second_half.reverse();\n    var first_half_int_plus_one_new_num = first_half_int_plus_",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let num_half = Math.floor(num_len/2);\n    let num_half_str = num_str.slice(0, num_half);\n    let num_half_rev = num_half_str.split(\"\").reverse().join(\"\");\n    let num_half_rev_int = parseInt(num_half_rev);\n    let num_half_int = parseInt(num_half_str);\n    let num_half_rev_int_str = num_half_rev_int.toString();\n    let num_half_int_str = num_half_int.toString();\n    let num_half_rev_int_str_len = num_half_rev_int_str.length;\n    let num_half_int_str_len = num_half_int_str.length;\n    let num_half_rev_int_str_len_diff = num_half - num_half_rev_int_str_len;\n    let num_half_int_str_len_diff = num_half - num_half_int_str_len;\n    let num_half_rev_int_str_len_diff_str = \"\";\n    let num_half_int_str_len_diff_str = \"\";\n    let num_half_rev_int_str_len_diff_str_rev = \"\";\n    let num_half_int_str_len_diff_str_rev = \"\";\n    let num_half_rev_int_str_len_diff_str_rev_int = 0;\n    let num_half_int_str_len_diff_str_rev_int = 0;\n    let num_half_rev_int_str_len_diff_str_rev_int_str = \"\";\n    let num_half_int_str_len_diff_str_rev_int_str = \"\";\n    let num_half_rev_int_str_len_diff_str_rev_int_str_len = 0;\n    let num_half_int_str_len_diff_str_rev_",
    "  var num_str = num.toString();\n  var num_arr = num_str.split('');\n  var num_len = num_arr.length;\n  var mid_index = Math.floor(num_len/2);\n  var left_index = mid_index - 1;\n  var right_index = (num_len % 2) ? mid_index + 1 : mid_index;\n  var end_index = num_len - 1;\n  var left_side = '';\n  var right_side = '';\n  var left_side_rev = '';\n  var right_side_rev = '';\n  var left_side_int = 0;\n  var right_side_int = 0;\n  var left_side_rev_int = 0;\n  var right_side_rev_int = 0;\n  var palindrome = '';\n  var palindrome_int = 0;\n  var next_palindrome = 0;\n\n  while(left_index >= 0 && num_arr[left_index] === num_arr[right_index]){\n    left_index--;\n    right_index++;\n  }\n\n  if(left_index < 0 || num_arr[left_index] < num_arr[right_index]){\n    left_side = num_arr.slice(0, mid_index).join('');\n    right_side = num_arr.slice(mid_index, end_index + 1).join('');\n    left_side_int = parseInt(left_side);\n    right_side_int = parseInt(right_side);\n    left_side_rev_int = parseInt(left_side.split('').reverse().join(''));\n    right_side_rev_int = parseInt(right_side.split('').reverse().join(''));\n    left_side_int++;\n    left_side_rev_int++;\n    left_side = left_side_int.toString();\n    right_side = right_side_int.toString();\n    left_side_rev = left_side_rev_int.toString();\n    right_side_rev = right_side_rev_"
  ]
}
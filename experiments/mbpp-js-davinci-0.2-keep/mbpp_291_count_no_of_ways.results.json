{
  "name": "mbpp_291_count_no_of_ways",
  "language": "js",
  "prompt": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_291_count_no_of_ways.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n  if(n == 0 || k == 0) return 0;\n  if(n == 1) return k;\n  if(n == 2) return k * k;\n\n  var same = k;\n  var diff = k * (k - 1);\n  for(var i = 3; i <= n; i++){\n    var temp = diff;\n    diff = (same + diff) * (k - 1);\n    same = temp;\n  }\n  return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k * k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 0) return 0;\n\tif(n == 1) return k;\n\tvar same = k;\n\tvar diff = k * (k - 1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff) * (k - 1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var diff_color = k*(k-1);\n    var same_color = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff_color;\n        diff_color = (diff_color + same_color)*(k-1);\n        same_color = temp;\n    }\n    return diff_color + same_color;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 2; i < n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar diff_color_counts = k*(k-1);\n\tvar same_color_counts = k;\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff_color_counts;\n\t\tdiff_color_counts = (diff_color_counts + same_color_counts) * (k-1);\n\t\tsame_color_counts = temp;\n\t}\n\treturn diff_color_counts + same_color_counts;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n === 0) return 0;\n    if(n === 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 2; i < n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    let same = k;\n    let diff = k * (k - 1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same+diff)*(k-1);\n        same = temp;\n    }\n    return same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let diff = k*(k-1);\n    let same = k;\n    for(let i=3; i<=n; i++){\n        let temp = diff;\n        diff = (diff+same)*(k-1);\n        same = temp;\n    }\n    return diff+same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i=3; i<=n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar diff = k*(k-1);\n\tvar same = k;\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (diff + same)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same+diff)*(k-1);\n        same = temp;\n    }\n    return same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k * k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n==1) return k;\n\tif(n==2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i=3; i<=n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same+diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n==1)\n        return k;\n    if(n==2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same+diff)*(k-1);\n        same = temp;\n    }\n    return same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff) * (k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k * k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 0)\n\t\treturn 0;\n\tif(n == 1)\n\t\treturn k;\n\tif(n == 2)\n\t\treturn k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (diff + same) * (k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same+diff)*(k-1);\n        same = temp;\n    }\n    return same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n==0) return 0;\n    if(n==1) return k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i=2; i<n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n==1) return k;\n    if(n==2) return k*k;\n    var diff_color_counts = k*(k-1);\n    var same_color_counts = k;\n    for(var i=3; i<=n; i++){\n        var temp = diff_color_counts;\n        diff_color_counts = (diff_color_counts + same_color_counts) * (k-1);\n        same_color_counts = temp;\n    }\n    return diff_color_counts + same_color_counts;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same+diff)*(k-1);\n        same = temp;\n    }\n    return same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n === 0) return 0;\n    if(n === 1) return k;\n    if(n === 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 2; i < n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1)\n\t\treturn k;\n\tif(n == 2)\n\t\treturn k*k;\n\tvar diff = k*(k-1);\n\tvar same = k;\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (diff + same)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n==0) return 0;\n    if(n==1) return k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i=2; i<n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i=3; i<=n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n === 0) return 0;\n    if(n === 1) return k;\n    if(n === 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let diff = k*(k-1);\n    let same = k;\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n  if(n == 0) return 0;\n  if(n == 1) return k;\n  if(n == 2) return k*k;\n  var same = k;\n  var diff = k*(k-1);\n  for(var i = 3; i <= n; i++){\n    var temp = diff;\n    diff = (same + diff)*(k-1);\n    same = temp;\n  }\n  return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 2; i < n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1)\n\t\treturn k;\n\tif(n == 2)\n\t\treturn k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i=3; i<=n; i++){\n        let temp = diff;\n        diff = (same+diff)*(k-1);\n        same = temp;\n    }\n    return same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i=3; i<=n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 0)\n\t\treturn 0;\n\tif(n == 1)\n\t\treturn k;\n\tif(n == 2)\n\t\treturn k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 2; i < n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff) * (k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n==1) return k;\n\tif(n==2) return k*k;\n\tvar diff = k*(k-1);\n\tvar same = k;\n\tfor(var i=3; i<=n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (diff + same)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn diff+same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0 || k == 0)\n        return 0;\n    if(n == 1)\n        return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let diff = k*(k-1);\n    let same = k;\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 2; i < n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k * k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i=3; i<=n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n==1) return k;\n    if(n==2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n==1)\n        return k;\n    if(n==2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3;i<=n;i++){\n        var temp = diff;\n        diff = (same+diff)*(k-1);\n        same = temp;\n    }\n    return same+diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0 || k == 0)\n        return 0;\n    if(n == 1)\n        return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1)\n\t\treturn k;\n\tif(n == 2)\n\t\treturn k*k;\n\tvar diff_color_counts = k*(k-1);\n\tvar same_color_counts = k;\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff_color_counts;\n\t\tdiff_color_counts = (diff_color_counts + same_color_counts) * (k-1);\n\t\tsame_color_counts = temp;\n\t}\n\treturn diff_color_counts + same_color_counts;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    var same = 0, diff = k;\n    for(var i = 2; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    var same = 0;\n    var diff = k;\n    for(var i=2; i<=n; i++){\n        var temp = diff;\n        diff = (same+diff)*(k-1);\n        same = temp;\n    }\n    return same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var diff_color_count = k*(k-1);\n    var same_color_count = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff_color_count;\n        diff_color_count = (diff_color_count + same_color_count) * (k-1);\n        same_color_count = temp;\n    }\n    return diff_color_count + same_color_count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar diff = k*(k-1);\n\tvar same = k;\n\tfor(var i=3; i<=n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (diff + same)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    let same = 0;\n    let diff = k;\n    for(let i = 2; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff_color = k*(k-1);\n    var same_color = k;\n    for(var i=3; i<=n; i++){\n        var temp = diff_color;\n        diff_color = (diff_color + same_color)*(k-1);\n        same_color = temp;\n    }\n    return diff_color + same_color;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    var same = 0;\n    var diff = k;\n    for(var i = 2; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 2; i < n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n  if(n == 1) return k;\n  if(n == 2) return k*k;\n  var same = k;\n  var diff = k*(k-1);\n  for(var i=3; i<=n; i++){\n    var temp = diff;\n    diff = (same+diff)*(k-1);\n    same = temp;\n  }\n  return same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n==1) return k;\n    if(n==2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same+diff)*(k-1);\n        same = temp;\n    }\n    return same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k * k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff) * (k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n==1) return k;\n    if(n==2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n<=0) return 0;\n    if(n==1) return k;\n    if(n==2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i=3; i<=n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 0 || k == 0)\n\t\treturn 0;\n\tif(n == 1)\n\t\treturn k;\n\tif(n == 2)\n\t\treturn k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k * k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let diff = k*(k-1);\n    let same = k;\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same+diff)*(k-1);\n        same = temp;\n    }\n    return same+diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n === 0) return 0;\n    if(n === 1) return k;\n    if(n === 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    var same = 0, diff = k;\n    for(var i = 2; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar diff = k*(k-1);\n\tvar same = k;\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (diff + same)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k * k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n <= 0)\n\t\treturn 0;\n\tif(n == 1)\n\t\treturn k;\n\tif(n == 2)\n\t\treturn k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff) * (k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 0) return 0;\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar diff = k*(k-1);\n\tvar same = k;\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (diff + same)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar diff_color_counts = k*(k-1);\n\tvar same_color_counts = k;\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff_color_counts;\n\t\tdiff_color_counts = (diff_color_counts + same_color_counts) * (k-1);\n\t\tsame_color_counts = temp;\n\t}\n\treturn diff_color_counts + same_color_counts;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1)\n        return k;\n    if(n == 2)\n        return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 0) return 0;\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff) * (k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i=3; i<=n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0 || k == 0) return 0;\n    if(n == 1) return k;\n    var same = k;\n    var diff = k * (k - 1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k - 1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n\tif(n == 0) return 0;\n\tif(n == 1) return k;\n\tif(n == 2) return k*k;\n\tvar same = k;\n\tvar diff = k*(k-1);\n\tfor(var i = 3; i <= n; i++){\n\t\tvar temp = diff;\n\t\tdiff = (same + diff)*(k-1);\n\t\tsame = temp;\n\t}\n\treturn same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0 || k == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var same = k;\n    var diff = k*(k-1);\n    for(var i = 3; i <= n; i++){\n        var temp = diff;\n        diff = (same + diff)*(k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 0) return 0;\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    let same = k;\n    let diff = k*(k-1);\n    for(let i = 3; i <= n; i++){\n        let temp = diff;\n        diff = (same + diff) * (k-1);\n        same = temp;\n    }\n    return same + diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1665510183,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n  if(n == 1) return k;\n  if(n == 2) return k*k;\n  var diff = k*(k-1);\n  var same = k;\n  for(var i = 3; i <= n; i++){\n    var temp = diff;\n    diff = (diff + same)*(k-1);\n    same = temp;\n  }\n  return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways(n, k){\n    if(n == 1) return k;\n    if(n == 2) return k*k;\n    var diff = k*(k-1);\n    var same = k;\n    for(var i=3; i<=n; i++){\n        var temp = diff;\n        diff = (diff + same)*(k-1);\n        same = temp;\n    }\n    return diff + same;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_no_of_ways;\n  assert.deepEqual(candidate(2, 4),16);\n  assert.deepEqual(candidate(3, 2),6);\n  assert.deepEqual(candidate(4, 4),228);\n}\n\ntest();",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
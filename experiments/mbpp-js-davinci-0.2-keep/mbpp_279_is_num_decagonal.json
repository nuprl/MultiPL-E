{
  "name": "mbpp_279_is_num_decagonal",
  "language": "js",
  "prompt": "//Write a function to find the nth decagonal number.\nfunction is_num_decagonal(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_num_decagonal;\n  assert.deepEqual(candidate(3),27);\n  assert.deepEqual(candidate(7),175);\n  assert.deepEqual(candidate(10),370);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}",
    "    return Number.isInteger((Math.sqrt(1+4*2*n))/2-0.5);\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "\tvar num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num % 1 === 0;\n}\n",
    "    var nth_decagonal = (3 * Math.pow(n, 2) - n) / 2;\n    return nth_decagonal;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "    var num = (Math.sqrt(4*n+1)+1)/2;\n    if(num%1 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var num = (Math.sqrt(1+4*2*n)-1)/2;\n    if(num%1==0){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var nth_decagonal = n * (3 * n - 2);\n    return nth_decagonal;\n}",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "  var nth_num = 0;\n  var i = 1;\n  while(nth_num < n){\n    nth_num = i * (3 * i - 1) / 2;\n    i++;\n  }\n  if(nth_num == n){\n    return true;\n  }\n  return false;\n}\n",
    "    var a = (Math.sqrt(1+4*2*n)-1)/2;\n    if(a%1==0){\n        return true;\n    }\n    return false;\n}\n",
    "\tvar num = (Math.sqrt(4*n+1)+1)/2;\n\tif(num%1 == 0){\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    var num = (Math.sqrt(4*n+1)+1)/2;\n    if(num%1 == 0){\n        return true;\n    }\n    return false;\n}",
    "\treturn (Math.sqrt(4*n+1)%1 == 0 && Math.sqrt(4*n+1)%4 == 1);\n}\n",
    "    var nth_decagonal = 0;\n    var i = 1;\n    while(nth_decagonal < n){\n        nth_decagonal = (i * (3 * i - 1)) / 2;\n        i++;\n    }\n    if(nth_decagonal == n){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}"
  ]
}
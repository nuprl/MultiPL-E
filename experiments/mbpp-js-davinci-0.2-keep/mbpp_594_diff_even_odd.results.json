{
  "name": "mbpp_594_diff_even_odd",
  "language": "js",
  "prompt": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd_num = list1[j];\n            count_odd += 1;\n            break;\n        }\n    }\n    if(count_even == 0 || count_odd == 0){\n        return 0;\n    }\n    else{\n        return even_num - odd_num;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            if(count_even == 1){\n                break;\n            }\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            count_odd += 1;\n            if(count_odd == 1){\n                break;\n            }\n        }\n    }\n    return even_num - odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var n = list1.length;\n    for(var i = 0; i < n; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < n; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            count_odd += 1;\n            break;\n        }\n    }\n    if(count_even == 0 || count_odd == 0){\n        return 0;\n    }\n    else{\n        return even_num - odd_num;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n  var even = 0;\n  var odd = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 == 0){\n      even = list1[i];\n      break;\n    }\n  }\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 != 0){\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even-odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n  var even = 0;\n  var odd = 0;\n  for(var i=0;i<list1.length;i++){\n    if(list1[i]%2==0){\n      even = list1[i];\n      break;\n    }\n  }\n  for(var i=0;i<list1.length;i++){\n    if(list1[i]%2!=0){\n      odd = list1[i];\n      break;\n    }\n  }\n  return even-odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            count_odd += 1;\n            break;\n        }\n    }\n    if(count_even == 0 || count_odd == 0){\n        return 0;\n    }\n    else{\n        return even_num - odd_num;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n  var even = 0;\n  var odd = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 == 0){\n      even = list1[i];\n      break;\n    }\n  }\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 != 0){\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0]-odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n  var even = 0;\n  var odd = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 == 0){\n      even = list1[i];\n      break;\n    }\n  }\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 != 0){\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even-odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            break;\n        }\n    }\n    diff = even_num - odd_num;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    return even_list[0] - odd_list[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0] - odd_list[0];\n    return diff;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd = list1[j];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var even_diff = even_list[0] - even_list[1];\n    var odd_diff = odd_list[0] - odd_list[1];\n    return even_diff + odd_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmptcl3075z.js:22:10)\n    at Object.<anonymous> (/tmp/tmptcl3075z.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0] - odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_list.push(list1[i]);\n        }\n        else {\n            odd_list.push(list1[i]);\n        }\n    }\n    return even_list[0] - odd_list[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var even_num = even_list[0];\n    var odd_num = odd_list[0];\n    var diff = even_num - odd_num;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n  var even = 0;\n  var odd = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 == 0){\n      even = list1[i];\n      break;\n    }\n  }\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 != 0){\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var even_num = even_list[0];\n    var odd_num = odd_list[0];\n    var diff = even_num - odd_num;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var even_num = even_list[0];\n    var odd_num = odd_list[0];\n    var diff = even_num - odd_num;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    return even_list[0]-odd_list[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even-odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd = list1[j];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var even_num = even_list[0];\n    var odd_num = odd_list[0];\n    var diff = even_num - odd_num;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    return even_list[0]-odd_list[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            if(count_even == 1){\n                break;\n            }\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            count_odd += 1;\n            if(count_odd == 1){\n                break;\n            }\n        }\n    }\n    return even_num - odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var even_num = even_list[0];\n    var odd_num = odd_list[0];\n    var diff = even_num - odd_num;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    return even_list[0] - odd_list[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n  var even = 0;\n  var odd = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 == 0){\n      even = list1[i];\n      break;\n    }\n  }\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 != 0){\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            count_odd += 1;\n            break;\n        }\n    }\n    if(count_even == 0 || count_odd == 0){\n        return 0;\n    }\n    else{\n        return even_num - odd_num;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    console.log(even_list);\n    console.log(odd_list);\n    var diff = even_list[0] - odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "[ 4, 6, 8 ]\n[ 1, 3, 5, 7, 1 ]\n[ 2, 4, 6, 8, 10 ]\n[ 1, 3, 5, 7, 9 ]\n[ 10 ]\n[ 1, 5, 7, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 1){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n  var even = 0;\n  var odd = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 == 0){\n      even = list1[i];\n      break;\n    }\n  }\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 != 0){\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    return even_list[0]-odd_list[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even-odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            break;\n        }\n    }\n    diff = even_num - odd_num;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0] - odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even-odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0] - odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\ndiff_even_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0]-odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            if(count_even == 1){\n                break;\n            }\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd_num = list1[j];\n            count_odd += 1;\n            if(count_odd == 1){\n                break;\n            }\n        }\n    }\n    return even_num - odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0] - odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd = list1[j];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 1){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            break;\n        }\n    }\n    return even_num - odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            if(count_even == 1){\n                break;\n            }\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            count_odd += 1;\n            if(count_odd == 1){\n                break;\n            }\n        }\n    }\n    return even_num - odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0] - odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    var diff = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    diff = even_list[0] - odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd = list1[j];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    return even_list[0]-odd_list[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0] - odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    return even_list[0]-odd_list[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    return even_list[0] - odd_list[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            if(count_even == 1){\n                break;\n            }\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            count_odd += 1;\n            if(count_odd == 1){\n                break;\n            }\n        }\n    }\n    return even_num - odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd_num = list1[i];\n            count_odd += 1;\n            break;\n        }\n    }\n    if(count_even == 0 || count_odd == 0){\n        return 0;\n    }\n    else{\n        return even_num - odd_num;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            break;\n        }\n    }\n    diff = even_num - odd_num;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even-odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0] - odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            count_odd += 1;\n            break;\n        }\n    }\n    if(count_even == 0 || count_odd == 0){\n        return 0;\n    }\n    else{\n        return even_num - odd_num;\n    }\n}\ndiff_even_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0]-odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd = list1[j];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even-odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            if(count_even == 1){\n                break;\n            }\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd_num = list1[j];\n            count_odd += 1;\n            if(count_odd == 1){\n                break;\n            }\n        }\n    }\n    var result = even_num - odd_num;\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            if(count_even == 1){\n                break;\n            }\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd_num = list1[j];\n            count_odd += 1;\n            if(count_odd == 1){\n                break;\n            }\n        }\n    }\n    return even_num - odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count_even += 1;\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd_num = list1[j];\n            count_odd += 1;\n            break;\n        }\n    }\n    if(count_even == 0 || count_odd == 0){\n        return 0;\n    }\n    else{\n        return even_num - odd_num;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n  var even_list = [];\n  var odd_list = [];\n  for (var i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even_list.push(list1[i]);\n    }\n    else {\n      odd_list.push(list1[i]);\n    }\n  }\n  var even = even_list[0];\n  var odd = odd_list[0];\n  var diff = even - odd;\n  return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0] - odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var even = even_list[0];\n    var odd = odd_list[0];\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n  var even = 0;\n  var odd = 0;\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 == 0){\n      even = list1[i];\n      break;\n    }\n  }\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i] % 2 != 0){\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var even_diff = even_list[0]-even_list[1];\n    var odd_diff = odd_list[0]-odd_list[1];\n    return even_diff+odd_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-4\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpjrrs4zwv.js:22:10)\n    at Object.<anonymous> (/tmp/tmpjrrs4zwv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -4,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var even_diff = even_list[0] - even_list[1];\n    var odd_diff = odd_list[0] - odd_list[1];\n    console.log(even_diff);\n    console.log(odd_diff);\n}\ndiff_even_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "-2\n-2\n-2\n-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmps1w246n2.js:25:10)\n    at Object.<anonymous> (/tmp/tmps1w246n2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_list.push(list1[i]);\n        }\n        else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var diff = even_list[0]-odd_list[0];\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the difference of the first even and first odd number of a given list.\nfunction diff_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var diff = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    diff = even - odd;\n    return diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = diff_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),9);\n}\n\ntest();",
      "timestamp": 1665510314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
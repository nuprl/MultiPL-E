{
  "name": "mbpp_411_snake_to_camel",
  "language": "js",
  "prompt": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_411_snake_to_camel.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split('_');\n    var camel = words[0];\n    for(var i = 1; i < words.length; i++){\n        camel += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return camel;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp0nt35cl1.js:15:10)\n    at Object.<anonymous> (/tmp/tmp0nt35cl1.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp9zgthvbu.js:15:10)\n    at Object.<anonymous> (/tmp/tmp9zgthvbu.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split(\"_\");\n    let camelWord = newWord[0];\n    for(let i = 1; i < newWord.length; i++){\n        camelWord += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return camelWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp49xw978l.js:15:10)\n    at Object.<anonymous> (/tmp/tmp49xw978l.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var result = newWord[0];\n    for(var i = 1; i < newWord.length; i++){\n        result += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpv5doznd3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpv5doznd3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpl10_7vvd.js:11:10)\n    at Object.<anonymous> (/tmp/tmpl10_7vvd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var newWord2 = newWord.map(function(val,index){\n        if(index!=0){\n            return val.charAt(0).toUpperCase()+val.slice(1);\n        }\n        else{\n            return val;\n        }\n    });\n    return newWord2.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpwfm9qhfl.js:19:10)\n    at Object.<anonymous> (/tmp/tmpwfm9qhfl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        var newWord = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n        newArr.push(newWord);\n    }\n    return newArr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substring(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp3mzgskjj.js:15:10)\n    at Object.<anonymous> (/tmp/tmp3mzgskjj.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var camelWord = newWord[0];\n    for(var i = 1; i < newWord.length; i++){\n        camelWord += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return camelWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmprt8alwln.js:15:10)\n    at Object.<anonymous> (/tmp/tmprt8alwln.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/([-_][a-z])/ig, ($1) => {\n        return $1.toUpperCase()\n            .replace('-', '')\n            .replace('_', '');\n    });\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpqyl4zgbt.js:14:10)\n    at Object.<anonymous> (/tmp/tmpqyl4zgbt.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp6akhub5i.js:19:10)\n    at Object.<anonymous> (/tmp/tmp6akhub5i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substring(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpw4ha887z.js:14:10)\n    at Object.<anonymous> (/tmp/tmpw4ha887z.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.split(\"_\");\n    for(var i = 1; i < result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpc6bw_xet.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc6bw_xet.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp2a1brq3i.js:11:10)\n    at Object.<anonymous> (/tmp/tmp2a1brq3i.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].substring(1);\n    }\n    return arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp3qq307v5.js:14:10)\n    at Object.<anonymous> (/tmp/tmp3qq307v5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8dgwci6p.js:20:10)\n    at Object.<anonymous> (/tmp/tmp8dgwci6p.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/([-_][a-z])/g, function($1){return $1.toUpperCase().replace(/[-_]/,'');});\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpf703_alh.js:11:10)\n    at Object.<anonymous> (/tmp/tmpf703_alh.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_array.length; i++){\n        if(i == 0){\n            new_word += word_array[i];\n        }\n        else{\n            new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n        }\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp6k1ystj9.js:21:10)\n    at Object.<anonymous> (/tmp/tmp6k1ystj9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    var camel = arr[0];\n    for(var i = 1; i < arr.length; i++){\n        camel += arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return camel;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpzhfppjuz.js:15:10)\n    at Object.<anonymous> (/tmp/tmpzhfppjuz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var array = word.split('_');\n    var newWord = array[0];\n    for(var i = 1; i < array.length; i++){\n        newWord += array[i].charAt(0).toUpperCase() + array[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpcrdq7s_9.js:15:10)\n    at Object.<anonymous> (/tmp/tmpcrdq7s_9.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_g99tfku.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_g99tfku.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5qgy_0_9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp5qgy_0_9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var result = newWord[0];\n    for(var i = 1; i < newWord.length; i++){\n        result += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpv5doznd3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpv5doznd3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }\n        else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmplhr7kgoj.js:20:10)\n    at Object.<anonymous> (/tmp/tmplhr7kgoj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let result = '';\n    for(let i = 0; i < word.length; i++){\n        if(word[i] === '_'){\n            result += word[i+1].toUpperCase();\n            i++;\n        }else{\n            result += word[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpqoo387vm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpqoo387vm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = \"\";\n    for(let i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpguo1tdf1.js:19:10)\n    at Object.<anonymous> (/tmp/tmpguo1tdf1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5qgy_0_9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp5qgy_0_9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            result += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            result += word[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpthp_hfzh.js:20:10)\n    at Object.<anonymous> (/tmp/tmpthp_hfzh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp9gls270t.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9gls270t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }\n        else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmplhr7kgoj.js:20:10)\n    at Object.<anonymous> (/tmp/tmplhr7kgoj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.split(\"_\");\n    for(var i = 1; i < result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpyn1hrvca.js:15:10)\n    at Object.<anonymous> (/tmp/tmpyn1hrvca.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/([-_][a-z])/g, function($1){return $1.toUpperCase().replace(/[-_]/,'');});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpw77fcpw8.js:10:10)\n    at Object.<anonymous> (/tmp/tmpw77fcpw8.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var array = word.split(\"_\");\n    var newWord = \"\";\n    for(var i = 0; i < array.length; i++){\n        newWord += array[i].charAt(0).toUpperCase() + array[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n    }\n    return newArr.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var result = newWord[0];\n    for(var i = 1; i < newWord.length; i++){\n        result += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpv5doznd3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpv5doznd3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n  var result = word.split('_');\n  for(var i = 1; i < result.length; i++){\n    result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n  }\n  return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmplh3g44_e.js:14:10)\n    at Object.<anonymous> (/tmp/tmplh3g44_e.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/_\\w/g, function(m){return m[1].toUpperCase();});\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpmtg0_srx.js:11:10)\n    at Object.<anonymous> (/tmp/tmpmtg0_srx.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5qgy_0_9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp5qgy_0_9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        } else {\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmppkd225st.js:20:10)\n    at Object.<anonymous> (/tmp/tmppkd225st.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5qgy_0_9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp5qgy_0_9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.split(\"_\");\n    for(var i = 1; i < result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpc6bw_xet.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc6bw_xet.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpls2gdyyo.js:14:10)\n    at Object.<anonymous> (/tmp/tmpls2gdyyo.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }\n        else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpyovoj_bm.js:21:10)\n    at Object.<anonymous> (/tmp/tmpyovoj_bm.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split(\"_\");\n    var newWord = \"\";\n    for(var i = 0; i < words.length; i++){\n        newWord += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n  return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpzvk2nc_0.js:11:10)\n    at Object.<anonymous> (/tmp/tmpzvk2nc_0.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp7348z6iw.js:20:10)\n    at Object.<anonymous> (/tmp/tmp7348z6iw.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split(\"_\");\n    var newWord = \"\";\n    for(var i = 0; i < words.length; i++){\n        if(i == 0){\n            newWord += words[i];\n        }\n        else{\n            newWord += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n        }\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpxuv62dki.js:21:10)\n    at Object.<anonymous> (/tmp/tmpxuv62dki.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_a8vgl1p.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_a8vgl1p.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_array.length; i++){\n        if(i == 0){\n            new_word += word_array[i];\n        }\n        else{\n            new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n        }\n    }\n    return new_word;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpmvx68apx.js:20:10)\n    at Object.<anonymous> (/tmp/tmpmvx68apx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmphd5as644.js:19:10)\n    at Object.<anonymous> (/tmp/tmphd5as644.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split('_');\n    var newWord = words[0];\n    for(var i = 1; i < words.length; i++){\n        newWord += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpi6f6ijm4.js:15:10)\n    at Object.<anonymous> (/tmp/tmpi6f6ijm4.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.split(\"_\");\n    for(var i = 1; i < result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpc6bw_xet.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc6bw_xet.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }\n        else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmplhr7kgoj.js:20:10)\n    at Object.<anonymous> (/tmp/tmplhr7kgoj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpls2gdyyo.js:14:10)\n    at Object.<anonymous> (/tmp/tmpls2gdyyo.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_/g, ' ').replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();}).replace(/ /g,'');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var wordArray = word.split(\"_\");\n    var camelCase = wordArray[0];\n    for(var i = 1; i < wordArray.length; i++){\n        camelCase += wordArray[i].charAt(0).toUpperCase() + wordArray[i].slice(1);\n    }\n    return camelCase;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpygo5zvrn.js:16:10)\n    at Object.<anonymous> (/tmp/tmpygo5zvrn.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_a8vgl1p.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_a8vgl1p.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var str = word.split('_');\n    for(var i = 1; i < str.length; i++){\n        str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp21944s3r.js:14:10)\n    at Object.<anonymous> (/tmp/tmp21944s3r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_g99tfku.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_g99tfku.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp6akhub5i.js:19:10)\n    at Object.<anonymous> (/tmp/tmp6akhub5i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var result = word[0];\n    for(var i = 1; i < word.length; i++){\n        result += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvozu7e1g.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvozu7e1g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split('_');\n    var result = words[0];\n    for (var i = 1; i < words.length; i++) {\n        result += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpgdvg8njs.js:15:10)\n    at Object.<anonymous> (/tmp/tmpgdvg8njs.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] == \"_\"){\n            result += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            result += word[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpezrgzpdh.js:20:10)\n    at Object.<anonymous> (/tmp/tmpezrgzpdh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_/g, ' ').replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();}).replace(/ /g,'');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n    }\n    return newArr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_\\w/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpl7akqu2h.js:10:10)\n    at Object.<anonymous> (/tmp/tmpl7akqu2h.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i=0; i<word_array.length; i++){\n        new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n    }\n    return new_word;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var newWord2 = newWord.map(function(word, index){\n        if(index > 0){\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        }\n        return word;\n    });\n    return newWord2.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp6yhhdd6_.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6yhhdd6_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var array = word.split(\"_\");\n    var newArray = [];\n    for(var i = 0; i < array.length; i++){\n        newArray.push(array[i].charAt(0).toUpperCase() + array[i].slice(1));\n    }\n    return newArray.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = '';\n    for(let i = 0; i < word.length; i++){\n        if(word[i] === '_'){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpgubzpsp2.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgubzpsp2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp2a1brq3i.js:11:10)\n    at Object.<anonymous> (/tmp/tmp2a1brq3i.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = \"\";\n    for(let i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpguo1tdf1.js:19:10)\n    at Object.<anonymous> (/tmp/tmpguo1tdf1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word_array = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_array.length; i++){\n        if(i == 0){\n            new_word += word_array[i];\n        }\n        else{\n            new_word += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n        }\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp6k1ystj9.js:21:10)\n    at Object.<anonymous> (/tmp/tmp6k1ystj9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = \"\";\n    var i = 0;\n    while(i < word.length){\n        if(word[i] == \"_\"){\n            result += word[i+1].toUpperCase();\n            i += 2;\n        }\n        else{\n            result += word[i];\n            i++;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp9ewrhzfa.js:22:10)\n    at Object.<anonymous> (/tmp/tmp9ewrhzfa.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/_\\w/g, function(m){return m[1].toUpperCase();});\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpu776d2n0.js:12:10)\n    at Object.<anonymous> (/tmp/tmpu776d2n0.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfknztev0.js:15:10)\n    at Object.<anonymous> (/tmp/tmpfknztev0.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var newWord = word[0];\n    for(var i = 1; i < word.length; i++){\n        newWord += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvgs3f93w.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvgs3f93w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5qgy_0_9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp5qgy_0_9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmphd5as644.js:19:10)\n    at Object.<anonymous> (/tmp/tmphd5as644.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split(\"_\");\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpc6v6q20m.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc6v6q20m.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split(\"_\");\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpc6v6q20m.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc6v6q20m.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmprsdanvr1.js:11:10)\n    at Object.<anonymous> (/tmp/tmprsdanvr1.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var newWord2 = newWord.map(function(word, index){\n        if(index > 0){\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        } else {\n            return word;\n        }\n    });\n    return newWord2.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpv2fjgt8j.js:18:10)\n    at Object.<anonymous> (/tmp/tmpv2fjgt8j.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8dgwci6p.js:20:10)\n    at Object.<anonymous> (/tmp/tmp8dgwci6p.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.split('_');\n    for(var i=1; i<result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpm5cm1wr8.js:14:10)\n    at Object.<anonymous> (/tmp/tmpm5cm1wr8.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].substring(1);\n    }\n    return arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp3qq307v5.js:14:10)\n    at Object.<anonymous> (/tmp/tmp3qq307v5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp9gls270t.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9gls270t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split('_');\n    var newWord = words[0];\n    for(var i = 1; i < words.length; i++){\n        newWord += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpi6f6ijm4.js:15:10)\n    at Object.<anonymous> (/tmp/tmpi6f6ijm4.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var newWord = word[0];\n    for(var i = 1; i < word.length; i++){\n        newWord += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvgs3f93w.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvgs3f93w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }\n        else{\n            var newWord = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n            newArr.push(newWord);\n        }\n    }\n    var newWord = newArr.join(\"\");\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpnq4e9ck5.js:23:10)\n    at Object.<anonymous> (/tmp/tmpnq4e9ck5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var result = newWord[0];\n    for(var i = 1; i < newWord.length; i++){\n        result += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpv5doznd3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpv5doznd3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8dgwci6p.js:20:10)\n    at Object.<anonymous> (/tmp/tmp8dgwci6p.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    var new_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        new_arr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n    }\n    return new_arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split(\"_\");\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpc6v6q20m.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc6v6q20m.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i === 0){\n            newArr.push(arr[i]);\n        } else {\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpx9mm390z.js:20:10)\n    at Object.<anonymous> (/tmp/tmpx9mm390z.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(\\-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpco4q7llj.js:10:10)\n    at Object.<anonymous> (/tmp/tmpco4q7llj.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n  var newWord = word.split(\"_\");\n  var result = newWord[0];\n  for(var i = 1; i < newWord.length; i++){\n    result += newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpo5yi6c_a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpo5yi6c_a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    var newWord2 = newWord.map(function(word,index){\n        if(index > 0){\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        }\n        return word;\n    });\n    return newWord2.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpua9y69xz.js:17:10)\n    at Object.<anonymous> (/tmp/tmpua9y69xz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split('_');\n    var newWord = arr[0];\n    for(var i = 1; i < arr.length; i++){\n        newWord += arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmph64yijpm.js:16:10)\n    at Object.<anonymous> (/tmp/tmph64yijpm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n    }\n    return newArr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmphd5as644.js:19:10)\n    at Object.<anonymous> (/tmp/tmphd5as644.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }\n        else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmplhr7kgoj.js:20:10)\n    at Object.<anonymous> (/tmp/tmplhr7kgoj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split('_');\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp79p1homg.js:15:10)\n    at Object.<anonymous> (/tmp/tmp79p1homg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_g99tfku.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_g99tfku.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split('_');\n    var camelCase = words[0];\n    for(var i = 1; i < words.length; i++){\n        camelCase += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return camelCase;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp3ubxsn41.js:16:10)\n    at Object.<anonymous> (/tmp/tmp3ubxsn41.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split('_');\n    var camel = words[0];\n    for(var i = 1; i < words.length; i++){\n        camel += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return camel;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpxd1hlaq4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxd1hlaq4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var newWord = word[0];\n    for(var i = 1; i < word.length; i++){\n        newWord += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return newWord;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpq2wx8sre.js:16:10)\n    at Object.<anonymous> (/tmp/tmpq2wx8sre.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    for(var i = 1; i < arr.length; i++){\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpls2gdyyo.js:14:10)\n    at Object.<anonymous> (/tmp/tmpls2gdyyo.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }\n        else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmplhr7kgoj.js:20:10)\n    at Object.<anonymous> (/tmp/tmplhr7kgoj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newarr = [];\n    for(var i = 0; i < arr.length; i++){\n        newarr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n    }\n    return newarr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp2a1brq3i.js:11:10)\n    at Object.<anonymous> (/tmp/tmp2a1brq3i.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        } else {\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp9xgfvlq0.js:20:10)\n    at Object.<anonymous> (/tmp/tmp9xgfvlq0.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split('_');\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpsacf1_53.js:14:10)\n    at Object.<anonymous> (/tmp/tmpsacf1_53.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp2a1brq3i.js:11:10)\n    at Object.<anonymous> (/tmp/tmp2a1brq3i.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.replace(/_[a-z]/g, function(match){\n        return match[1].toUpperCase();\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8trht9of.js:13:10)\n    at Object.<anonymous> (/tmp/tmp8trht9of.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.split('_');\n    for(var i = 1; i < result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp2rys0gss.js:14:10)\n    at Object.<anonymous> (/tmp/tmp2rys0gss.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpfvdzvf2_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfvdzvf2_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.split(\"_\");\n    for(var i = 1; i < result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpc6bw_xet.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc6bw_xet.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substring(1);\n    }\n    return newWord.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpq_4xo0e6.js:15:10)\n    at Object.<anonymous> (/tmp/tmpq_4xo0e6.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var newWord = word[0];\n    for(var i = 1; i < word.length; i++){\n        newWord += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvgs3f93w.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvgs3f93w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substr(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpyph8ye_s.js:14:10)\n    at Object.<anonymous> (/tmp/tmpyph8ye_s.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = \"\";\n    var word_array = word.split(\"_\");\n    for(var i = 0; i < word_array.length; i++){\n        if(i == 0){\n            result += word_array[i];\n        }\n        else{\n            result += word_array[i].charAt(0).toUpperCase() + word_array[i].slice(1);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpgz02x7uc.js:20:10)\n    at Object.<anonymous> (/tmp/tmpgz02x7uc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(i == 0){\n            newArr.push(arr[i]);\n        }\n        else{\n            newArr.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));\n        }\n    }\n    return newArr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmplhr7kgoj.js:20:10)\n    at Object.<anonymous> (/tmp/tmplhr7kgoj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split('_');\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpsacf1_53.js:14:10)\n    at Object.<anonymous> (/tmp/tmpsacf1_53.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split('_');\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp_g99tfku.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_g99tfku.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/_([a-z])/g, function (g) { return g[1].toUpperCase(); });\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp914ownwx.js:10:10)\n    at Object.<anonymous> (/tmp/tmp914ownwx.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5qgy_0_9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp5qgy_0_9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var array = word.split('_');\n    var new_word = '';\n    for(var i=0; i<array.length; i++){\n        new_word += array[i].charAt(0).toUpperCase() + array[i].slice(1);\n    }\n    return new_word;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split('_');\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpgn3zvoax.js:14:10)\n    at Object.<anonymous> (/tmp/tmpgn3zvoax.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var arr = word.split(\"_\");\n    var camel = arr[0];\n    for(var i = 1; i < arr.length; i++){\n        camel += arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return camel;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpuryls4bv.js:15:10)\n    at Object.<anonymous> (/tmp/tmpuryls4bv.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    var newWord = word[0];\n    for(var i = 1; i < word.length; i++){\n        newWord += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvgs3f93w.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvgs3f93w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] === \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8dgwci6p.js:20:10)\n    at Object.<anonymous> (/tmp/tmp8dgwci6p.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    let newWord = word.split(\"_\");\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpvccd7kwz.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvccd7kwz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var words = word.split(\"_\");\n    var camel = words[0];\n    for(var i = 1; i < words.length; i++){\n        camel += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return camel;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpeqem9m93.js:15:10)\n    at Object.<anonymous> (/tmp/tmpeqem9m93.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var word = word.split(\"_\");\n    for(var i = 1; i < word.length; i++){\n        word[i] = word[i].charAt(0).toUpperCase() + word[i].slice(1);\n    }\n    return word.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp5qgy_0_9.js:14:10)\n    at Object.<anonymous> (/tmp/tmp5qgy_0_9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpoo8y1nwt.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoo8y1nwt.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substring(1);\n    }\n    return newWord.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpw4ha887z.js:14:10)\n    at Object.<anonymous> (/tmp/tmpw4ha887z.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'android_tv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmps42v4lz9.js:10:10)\n    at Object.<anonymous> (/tmp/tmps42v4lz9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'android_tv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    return word.replace(/([-_][a-z])/g, (group) => group.toUpperCase()\n    .replace('-', '')\n    .replace('_', ''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmpwvuxcgol.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwvuxcgol.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given snake case string to camel case string.\nfunction snake_to_camel(word){\n    var result = word.split('_');\n    for(var i = 1; i < result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"android_tv\"),\"AndroidTv\");\n  assert.deepEqual(candidate(\"google_pixel\"),\"GooglePixel\");\n  assert.deepEqual(candidate(\"apple_watch\"),\"AppleWatch\");\n}\n\ntest();",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'androidTv'\n\nshould loosely deep-equal\n\n'AndroidTv'\n    at test (/tmp/tmp8vxcp19f.js:15:10)\n    at Object.<anonymous> (/tmp/tmp8vxcp19f.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'androidTv',\n  expected: 'AndroidTv',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_750_add_tuple",
  "language": "js",
  "prompt": "//Write a function to add the given tuple to the given list.\nfunction add_tuple(test_list, test_tup){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_750_add_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_tuple;\n  assert.deepEqual(candidate([5, 6, 7], [9, 10]),[5, 6, 7, 9, 10]);\n  assert.deepEqual(candidate([6, 7, 8], [10, 11]),[6, 7, 8, 10, 11]);\n  assert.deepEqual(candidate([7, 8, 9], [11, 12]),[7, 8, 9, 11, 12]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.append(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = test_list;\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = test_list.slice();\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = test_list.slice();\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = test_list.slice();\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var res = test_list.concat(test_tup);\n    return res;\n}\n",
    "    test_list.push(test_tup)\n    return test_list\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp = test_list.slice();\n    temp.push(test_tup);\n    return temp;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = [];\n    temp_list = test_list.concat(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var res = test_list.concat(test_tup);\n    return res;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = test_list.slice();\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = test_list.slice(0);\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp = test_list.slice(0);\n    temp.push(test_tup);\n    return temp;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp = test_list.slice();\n    temp.push(test_tup);\n    return temp;\n}\n",
    "    test_list.append(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = [];\n    temp_list = test_list.concat(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp = test_list.slice();\n    temp.push(test_tup);\n    return temp;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var new_list = test_list.concat(test_tup);\n    return new_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = test_list;\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    var new_list = test_list.concat(test_tup);\n    return new_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var res = test_list.concat(test_tup);\n    return res;\n}",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = test_list.slice();\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = [];\n    temp_list = test_list.slice(0);\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = test_list.slice();\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    var temp_list = test_list.slice(0);\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n\ntest_list = [1, 2, 3];\ntest_tup = (4, 5, 6);",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = [];\n    temp_list = test_list.concat(test_tup);\n    return temp_list;\n}\nvar test_list = [1, 2, 3, 4];\nvar test_tup = [5, 6];",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var res = test_list.concat(test_tup);\n    return res;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n",
    "    var temp_list = test_list.slice();\n    temp_list.push(test_tup);\n    return temp_list;\n}\n",
    "    test_list.push(test_tup);\n    return test_list;\n}\n"
  ]
}
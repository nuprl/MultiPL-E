{
  "name": "mbpp_781_count_divisors",
  "language": "js",
  "prompt": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_781_count_divisors.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqaabzsiv.js:17:10)\n    at Object.<anonymous> (/tmp/tmpqaabzsiv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqaabzsiv.js:17:10)\n    at Object.<anonymous> (/tmp/tmpqaabzsiv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count += 1;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        console.log(\"Even\");\n    }\n    else{\n        console.log(\"Odd\");\n    }\n}\ncount_divisors(10);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "Even\nEven\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnqyxkhb3.js:23:10)\n    at Object.<anonymous> (/tmp/tmpnqyxkhb3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqaabzsiv.js:17:10)\n    at Object.<anonymous> (/tmp/tmpqaabzsiv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i=1; i<=n; i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    if(count%2==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqaabzsiv.js:17:10)\n    at Object.<anonymous> (/tmp/tmpqaabzsiv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqaabzsiv.js:17:10)\n    at Object.<anonymous> (/tmp/tmpqaabzsiv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++){\n        if (n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpav0he0wo.js:17:10)\n    at Object.<anonymous> (/tmp/tmpav0he0wo.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        console.log(\"Even\");\n    }\n    else{\n        console.log(\"Odd\");\n    }\n}\n\ncount_divisors(10);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "Even\nEven\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmplv0sy6mr.js:24:10)\n    at Object.<anonymous> (/tmp/tmplv0sy6mr.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        console.log(\"Even\");\n    }\n    else{\n        console.log(\"Odd\");\n    }\n}\ncount_divisors(10);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "Even\nEven\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnqyxkhb3.js:23:10)\n    at Object.<anonymous> (/tmp/tmpnqyxkhb3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++){\n        if (n % i == 0){\n            count += 1;\n        }\n    }\n    if (count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++){\n        if (n % i == 0){\n            count += 1;\n        }\n    }\n    if (count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    if(count%2==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666122956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0y3fjnlr.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0y3fjnlr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    if(count % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
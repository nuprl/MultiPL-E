{
  "name": "mbpp_251_insert_element",
  "language": "js",
  "prompt": "//Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.\nfunction insert_element(list, element){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_251_insert_element.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = insert_element;\n  assert.deepEqual(candidate([\"Red\", \"Green\", \"Black\"], \"c\"),[\"c\", \"Red\", \"c\", \"Green\", \"c\", \"Black\"]);\n  assert.deepEqual(candidate([\"python\", \"java\"], \"program\"),[\"program\", \"python\", \"program\", \"java\"]);\n  assert.deepEqual(candidate([\"happy\", \"sad\"], \"laugh\"),[\"laugh\", \"happy\", \"laugh\", \"sad\"]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for (var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for (var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for (var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "  var new_list = [];\n  for(var i = 0; i < list.length; i++){\n    new_list.push(element);\n    new_list.push(list[i]);\n  }\n  return new_list;\n}\n",
    "  var new_list = [];\n  for(var i = 0; i < list.length; i++){\n    new_list.push(element);\n    new_list.push(list[i]);\n  }\n  return new_list;\n}\n",
    "    var new_list = [];\n    for (var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list.length; i++){\n        new_list.push(element);\n        new_list.push(list[i]);\n    }\n    return new_list;\n}\n"
  ]
}
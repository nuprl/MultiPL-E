{
  "name": "mbpp_299_max_aggregate",
  "language": "js",
  "prompt": "//Write a function to calculate the maximum aggregate from the list of tuples.\nfunction max_aggregate(stdata){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_299_max_aggregate.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_aggregate;\n  assert.deepEqual(candidate([[\"Juan Whelan\", 90], [\"Sabah Colley\", 88], [\"Peter Nichols\", 7], [\"Juan Whelan\", 122], [\"Sabah Colley\", 84]]),[\"Juan Whelan\", 212]);\n  assert.deepEqual(candidate([[\"Juan Whelan\", 50], [\"Sabah Colley\", 48], [\"Peter Nichols\", 37], [\"Juan Whelan\", 22], [\"Sabah Colley\", 14]]),[\"Juan Whelan\", 72]);\n  assert.deepEqual(candidate([[\"Juan Whelan\", 10], [\"Sabah Colley\", 20], [\"Peter Nichols\", 30], [\"Juan Whelan\", 40], [\"Sabah Colley\", 50]]),[\"Sabah Colley\", 70]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var max = 0;\n    for(var i=0; i<stdata.length; i++){\n        if(stdata[i][1] > max){\n            max = stdata[i][1];\n        }\n    }\n    return max;\n}\n",
    "\tvar max = 0;\n\tfor(var i=0;i<stdata.length;i++){\n\t\tif(stdata[i][1]>max){\n\t\t\tmax = stdata[i][1];\n\t\t}\n\t}\n\treturn max;\n}\n",
    "\tvar max_aggregate = 0;\n\tfor(var i=0;i<stdata.length;i++){\n\t\tvar aggregate = stdata[i].maths + stdata[i].physics + stdata[i].chemistry;\n\t\tif(aggregate > max_aggregate){\n\t\t\tmax_aggregate = aggregate;\n\t\t}\n\t}\n\treturn max_aggregate;\n}\n",
    "\tvar max = 0;\n\tfor(var i = 0; i < stdata.length; i++){\n\t\tif(stdata[i][1] > max){\n\t\t\tmax = stdata[i][1];\n\t\t}\n\t}\n\treturn max;\n}\n",
    "    var max_aggregate = 0;\n    for(var i=0;i<stdata.length;i++){\n        var aggregate = stdata[i].Maths + stdata[i].Physics + stdata[i].Chemistry;\n        if(aggregate > max_aggregate){\n            max_aggregate = aggregate;\n        }\n    }\n    return max_aggregate;\n}",
    "\tvar max = 0;\n\tfor(var i=0;i<stdata.length;i++){\n\t\tif(stdata[i][1]>max){\n\t\t\tmax = stdata[i][1];\n\t\t}\n\t}\n\treturn max;\n}\n",
    "    var max_aggregate = 0;\n    for(var i=0;i<stdata.length;i++){\n        var aggregate = stdata[i].Maths + stdata[i].English + stdata[i].Science;\n        if(aggregate > max_aggregate){\n            max_aggregate = aggregate;\n        }\n    }\n    return max_aggregate;\n}",
    "    var max = stdata[0][1];\n    for(var i=1;i<stdata.length;i++){\n        if(stdata[i][1]>max){\n            max = stdata[i][1];\n        }\n    }\n    return max;\n}",
    "\tvar max = 0;\n\tfor(var i=0;i<stdata.length;i++){\n\t\tif(stdata[i][1]>max){\n\t\t\tmax = stdata[i][1];\n\t\t}\n\t}\n\treturn max;\n}\n",
    "\tvar max_aggregate = 0;\n\tfor(var i=0;i<stdata.length;i++){\n\t\tvar aggregate = stdata[i][1]+stdata[i][2]+stdata[i][3];\n\t\tif(aggregate>max_aggregate){\n\t\t\tmax_aggregate = aggregate;\n\t\t}\n\t}\n\treturn max_aggregate;\n}\n",
    "    var max = 0;\n    for(var i=0;i<stdata.length;i++){\n        if(stdata[i][1]>max){\n            max = stdata[i][1];\n        }\n    }\n    return max;\n}",
    "    var max_aggregate = 0;\n    for(var i=0;i<stdata.length;i++){\n        if(max_aggregate < stdata[i].aggregate){\n            max_aggregate = stdata[i].aggregate;\n        }\n    }\n    return max_aggregate;\n}\n",
    "\tvar max_aggregate = 0;\n\tfor(var i=0;i<stdata.length;i++){\n\t\tvar aggregate = stdata[i].english + stdata[i].maths + stdata[i].science;\n\t\tif(aggregate > max_aggregate){\n\t\t\tmax_aggregate = aggregate;\n\t\t}\n\t}\n\treturn max_aggregate;\n}\n",
    "\tvar max_aggregate = 0;\n\tfor(var i=0;i<stdata.length;i++){\n\t\tvar aggregate = stdata[i].english + stdata[i].maths + stdata[i].science;\n\t\tif(aggregate > max_aggregate){\n\t\t\tmax_aggregate = aggregate;\n\t\t}\n\t}\n\treturn max_aggregate;\n}\n",
    "\tvar max = 0;\n\tfor(var i=0;i<stdata.length;i++){\n\t\tif(stdata[i][1]>max){\n\t\t\tmax = stdata[i][1];\n\t\t}\n\t}\n\treturn max;\n}\n",
    "\tvar max = 0;\n\tfor(var i=0;i<stdata.length;i++){\n\t\tvar temp = stdata[i].reduce(function(a,b){\n\t\t\treturn a+b;\n\t\t});\n\t\tif(temp>max){\n\t\t\tmax = temp;\n\t\t}\n\t}\n\treturn max;\n}\n",
    "    var max = 0;\n    for(var i = 0; i < stdata.length; i++){\n        if(stdata[i][1] > max){\n            max = stdata[i][1];\n        }\n    }\n    return max;\n}\n",
    "\tvar max = 0;\n\tfor(var i=0; i<stdata.length; i++){\n\t\tif(max < stdata[i][1]){\n\t\t\tmax = stdata[i][1];\n\t\t}\n\t}\n\treturn max;\n}\n",
    "\tvar max = 0;\n\tfor(var i=0; i<stdata.length; i++){\n\t\tif(stdata[i][1] > max){\n\t\t\tmax = stdata[i][1];\n\t\t}\n\t}\n\treturn max;\n}\n",
    "  var max = 0;\n  for(var i=0;i<stdata.length;i++){\n    var sum = 0;\n    for(var j=0;j<stdata[i].length;j++){\n      sum += stdata[i][j];\n    }\n    if(sum>max){\n      max = sum;\n    }\n  }\n  return max;\n}\n"
  ]
}
{
  "name": "mbpp_608_bell_Number",
  "language": "js",
  "prompt": "//Write a python function to find nth bell number.\nfunction bell_Number(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_608_bell_Number.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = bell_Number;\n  assert.deepEqual(candidate(2),2);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),15);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i <= n; i++) {\n        bell[i] = [1];\n        for (var j = 1; j < i; j++) {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n        bell[i][i] = 1;\n    }\n    return bell[n];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i < n; i++) {\n        bell[i] = [1];\n        for (var j = 1; j < i; j++) {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n        bell[i].push(1);\n    }\n    return bell[n - 1];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i < n; i++) {\n        bell[i] = [];\n        bell[i][0] = bell[i - 1][i - 1];\n        for (var j = 1; j <= i; j++)\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n    }\n    return bell[n - 1][0];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i < n; i++) {\n        bell[i] = [];\n        bell[i][0] = bell[i - 1][i - 1];\n        for (var j = 1; j <= i; j++) {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n    }\n    return bell[n - 1][0];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i < n; i++) {\n        bell[i] = [];\n        bell[i][0] = bell[i - 1][i - 1];\n        for (var j = 1; j <= i; j++)\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n    }\n    return bell[n - 1][0];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i < n; i++){\n        bell.push([]);\n        bell[i][0] = bell[i-1][i-1];\n        for (var j = 1; j <= i; j++){\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n        }\n    }\n    return bell[n-1][0];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i <= n; i++) {\n        bell[i] = [1];\n        for (var j = 1; j < i; j++) {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n        bell[i].push(1);\n    }\n    return bell[n - 1];\n}",
    "    let bell = [[1], [1, 1]];\n    for (let i = 2; i <= n; i++) {\n        bell[i] = [];\n        bell[i][0] = bell[i - 1][i - 1];\n        for (let j = 1; j <= i; j++) {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n    }\n    return bell[n][0];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i <= n; i++) {\n        bell[i] = [1];\n        for (var j = 1; j < i; j++) {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n        bell[i].push(1);\n    }\n    return bell[n - 1];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i <= n; i++) {\n        var temp = [1];\n        for (var j = 1; j < i; j++) {\n            temp[j] = bell[i - 1][j - 1] + temp[j - 1];\n        }\n        temp.push(1);\n        bell.push(temp);\n    }\n    return bell[n - 1];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i <= n; i++) {\n        var temp = [1];\n        for (var j = 1; j < i; j++) {\n            temp[j] = temp[j - 1] + bell[i - 1][j];\n        }\n        temp.push(1);\n        bell.push(temp);\n    }\n    return bell[n - 1];\n}",
    "    var bell = [[1], [1,1]];\n    for(var i = 2; i <= n; i++){\n        bell[i] = [1];\n        for(var j = 1; j < i; j++){\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n        }\n        bell[i].push(1);\n    }\n    return bell[n-1];\n}",
    "    var bell = [[1], [1, 1]];\n    for(var i = 2; i <= n; i++){\n        bell[i] = [];\n        bell[i][0] = bell[i - 1][i - 1];\n        for(var j = 1; j <= i; j++){\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n    }\n    return bell[n][0];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i <= n; i++) {\n        bell[i] = [1];\n        for (var j = 1; j < i; j++) {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n        bell[i][i] = 1;\n    }\n    return bell[n][n - 1];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i < n; i++) {\n        bell[i] = [];\n        bell[i][0] = bell[i - 1][i - 1];\n        for (var j = 1; j <= i; j++) {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n    }\n    return bell[n - 1][0];\n}",
    "    var bell = [[1], [1, 1]];\n    for(var i = 2; i < n; i++){\n        bell[i] = [1];\n        for(var j = 1; j <= i; j++){\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n        bell[i][i] = 1;\n    }\n    return bell[n - 1][n - 1];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i <= n; i++) {\n        var temp = [1];\n        for (var j = 1; j < i; j++) {\n            temp.push(bell[i - 1][j - 1] + temp[j - 1]);\n        }\n        temp.push(1);\n        bell.push(temp);\n    }\n    return bell[n - 1][n - 1];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i < n; i++) {\n        bell.push([]);\n        bell[i][0] = bell[i - 1][i - 1];\n        for (var j = 1; j <= i; j++) {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n    }\n    return bell[n - 1][n - 1];\n}",
    "    var bell = [[1], [1, 1]];\n    for (var i = 2; i <= n; i++) {\n        bell[i] = [];\n        bell[i][0] = bell[i - 1][i - 1];\n        for (var j = 1; j <= i; j++) {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n        }\n    }\n    return bell[n][0];\n}",
    "    var bell = [[1], [1,1]];\n    for(var i = 2; i <= n; i++){\n        bell[i] = [1];\n        for(var j = 1; j < i; j++){\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n        }\n        bell[i][i] = 1;\n    }\n    return bell[n-1];\n}\n"
  ]
}
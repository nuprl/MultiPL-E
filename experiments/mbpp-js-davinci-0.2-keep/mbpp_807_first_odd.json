{
  "name": "mbpp_807_first_odd",
  "language": "js",
  "prompt": "//Write a python function to find the first odd number in a given list of numbers.\nfunction first_odd(nums){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_807_first_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_odd;\n  assert.deepEqual(candidate([1, 3, 5]),1);\n  assert.deepEqual(candidate([2, 4, 1, 3]),1);\n  assert.deepEqual(candidate([8, 9, 1]),9);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "  for(var i=0;i<nums.length;i++){\n    if(nums[i]%2!=0){\n      return nums[i];\n    }\n  }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n    return \"No odd numbers found\";\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}\nfirst_odd([1,2,3,4,5,6,7,8,9,10])\n",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(let i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}\nfirst_odd([1,2,3,4,5,6,7,8,9,10]);\n",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}\nfirst_odd([1,2,3,4,5,6,7,8,9,10])\n",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}\nfirst_odd([1,2,3,4,5,6,7,8,9,10])\n",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2 != 0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(let i=0; i<nums.length; i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(let i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}"
  ]
}
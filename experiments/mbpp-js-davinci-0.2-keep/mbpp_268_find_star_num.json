{
  "name": "mbpp_268_find_star_num",
  "language": "js",
  "prompt": "//Write a function to find the n'th star number.\nfunction find_star_num(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_star_num;\n  assert.deepEqual(candidate(3),37);\n  assert.deepEqual(candidate(4),73);\n  assert.deepEqual(candidate(5),121);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var starNum = 1;\n    for(var i = 1; i < n; i++){\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}",
    "    var star_num = 1;\n    for(var i = 1; i < n; i++){\n        star_num = star_num + (2 * i);\n    }\n    return star_num;\n}",
    "    let starNum = 0;\n    for(let i = 1; i <= n; i++){\n        starNum = (starNum * 10) + i;\n    }\n    return starNum;\n}\n",
    "    var star_num = 1;\n    var i = 1;\n    while(i < n){\n        star_num += 2;\n        i++;\n    }\n    return star_num;\n}",
    "    var starNum = 1;\n    for(var i = 1; i < n; i++){\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}",
    "    var star_num = 1;\n    for(var i = 1; i < n; i++){\n        star_num = star_num + (i * 2);\n    }\n    return star_num;\n}",
    "    var starNum = 1;\n    for(var i = 1; i < n; i++){\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}",
    "    var starNumber = 1;\n    while(n > 1){\n        starNumber = starNumber + (starNumber + 1);\n        n--;\n    }\n    return starNumber;\n}",
    "    var num = 1;\n    var star_num = 0;\n    while(n > 0){\n        star_num = star_num + num;\n        num++;\n        n--;\n    }\n    return star_num;\n}",
    "    var starNum = 1;\n    for(var i = 1; i < n; i++){\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}",
    "    var num = 0;\n    for(var i = 1; i <= n; i++){\n        num = (num + i);\n    }\n    return num;\n}",
    "    let starNum = 0;\n    for(let i = 1; i <= n; i++){\n        starNum = (starNum * 10) + i;\n    }\n    return starNum;\n}",
    "    var starNumber = 1;\n    for(var i = 1; i < n; i++){\n        starNumber = (starNumber * 10) + 1;\n    }\n    return starNumber;\n}",
    "    var starNumber = 1;\n    for(var i=1; i<n; i++){\n        starNumber = starNumber + (i*2);\n    }\n    return starNumber;\n}",
    "    var num = 1;\n    var i = 1;\n    while(i < n){\n        num = num + 2;\n        i++;\n    }\n    return num;\n}",
    "    var starNum = 1;\n    for(var i = 1; i < n; i++){\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}",
    "    let starNum = 0;\n    for(let i = 1; i <= n; i++){\n        starNum = (starNum * 10) + i;\n    }\n    return starNum;\n}",
    "    var starNum = 1;\n    for(var i = 1; i < n; i++){\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}",
    "    var starNum = 1;\n    for(var i = 1; i < n; i++){\n        starNum = starNum + (2 * i);\n    }\n    return starNum;\n}\n",
    "    var starNum = 1;\n    for(var i = 1; i < n; i++){\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}"
  ]
}
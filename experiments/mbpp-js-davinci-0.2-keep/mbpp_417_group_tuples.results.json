{
  "name": "mbpp_417_group_tuples",
  "language": "js",
  "prompt": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_417_group_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = false;\n        for(var j=0;j<result.length;j++){\n            if(result[j][0] == Input[i][0]){\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpzgj7vnwm.js:24:10)\n    at Object.<anonymous> (/tmp/tmpzgj7vnwm.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                flag = 1;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,7],[3,8],[1,9],[1,10]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var output = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = false;\n        for(var j=0;j<output.length;j++){\n            if(Input[i][0] == output[j][0]){\n                flag = true;\n                output[j].push(Input[i][1]);\n            }\n        }\n        if(flag == false){\n            output.push(Input[i]);\n        }\n    }\n    return output;\n}\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result[result_index] = [];\n            result[result_index].push(Input[i][0]);\n            result[result_index].push(Input[i][1]);\n            result_index++;\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    let result = [];\n    let temp = [];\n    let flag = 0;\n    for(let i = 0; i < Input.length; i++){\n        for(let j = 0; j < Input[i].length; j++){\n            if(Input[i][j] == Input[i+1][j]){\n                temp.push(Input[i][j]);\n                flag = 1;\n            }\n            else{\n                flag = 0;\n                break;\n            }\n        }\n        if(flag == 1){\n            result.push(temp);\n            temp = [];\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "/tmp/tmpwyi3hefc.js:8\n            if(Input[i][j] == Input[i+1][j]){\n                                        ^\n\nTypeError: Cannot read properties of undefined (reading '0')\n    at group_tuples (/tmp/tmpwyi3hefc.js:8:41)\n    at test (/tmp/tmpwyi3hefc.js:30:20)\n    at Object.<anonymous> (/tmp/tmpwyi3hefc.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input.length;j++){\n            if(i!=j){\n                if(Input[i][0]==Input[j][0]){\n                    flag = 1;\n                }\n                else{\n                    flag = 0;\n                    break;\n                }\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpbbvjmzfb.js:29:10)\n    at Object.<anonymous> (/tmp/tmpbbvjmzfb.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                flag = true;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(flag == false){\n            result[result_index] = [];\n            result[result_index].push(Input[i][0]);\n            result[result_index].push(Input[i][1]);\n            result_index++;\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input.length;j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = 1;\n            }\n            else{\n                flag = 0;\n                break;\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp8kscigyv.js:28:10)\n    at Object.<anonymous> (/tmp/tmp8kscigyv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(i != j){\n                if(Input[i][0] == Input[j][0]){\n                    flag = 1;\n                }\n                else{\n                    flag = 0;\n                    break;\n                }\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpzzkk9e9f.js:29:10)\n    at Object.<anonymous> (/tmp/tmpzzkk9e9f.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = true;\n        for(var j=0;j<result.length;j++){\n            if(result[j][0] == Input[i][0]){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[1,2],[5,6],[7,8],[1,2]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpjv7ju0iu.js:25:10)\n    at Object.<anonymous> (/tmp/tmpjv7ju0iu.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = 1;\n            }\n            else{\n                flag = 0;\n                break;\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp56u7hkes.js:27:10)\n    at Object.<anonymous> (/tmp/tmp56u7hkes.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var first_element = Input[0][0];\n    var flag = true;\n    for(var i=1;i<Input.length;i++){\n        if(Input[i][0] != first_element){\n            flag = false;\n            break;\n        }\n    }\n    if(flag){\n        console.log(\"All tuples have same first element\");\n    }\n    else{\n        console.log(\"All tuples do not have same first element\");\n    }\n}\n\ngroup_tuples([[1,2],[1,3],[1,4]]);\ngroup_tuples([[1,2],[2,3],[1,4]]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "All tuples have same first element\nAll tuples do not have same first element\nAll tuples do not have same first element\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpfemub2q0.js:27:10)\n    at Object.<anonymous> (/tmp/tmpfemub2q0.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_1 = [];\n    var result_2 = [];\n    var result_3 = [];\n    var result_4 = [];\n    var result_5 = [];\n    var result_6 = [];\n    var result_7 = [];\n    var result_8 = [];\n    var result_9 = [];\n    var result_10 = [];\n    var result_11 = [];\n    var result_12 = [];\n    var result_13 = [];\n    var result_14 = [];\n    var result_15 = [];\n    var result_16 = [];\n    var result_17 = [];\n    var result_18 = [];\n    var result_19 = [];\n    var result_20 = [];\n    var result_21 = [];\n    var result_22 = [];\n    var result_23 = [];\n    var result_24 = [];\n    var result_25 = [];\n    var result_26 = [];\n    var result_27 = [];\n    var result_28 = [];\n    var result_29 = [];\n    var result_30 = [];\n    var result_31 = [];\n    var result_32 = [];\n    var result_33 = [];\n    var result_34 = [];\n    var result_35 = [];\n    var result_36 = [];\n    var result_37 = [];\n    var result_38 = [];\n    var result_39 = [];\n    var result_40 = [];\n    var result_41 = [];\n    var result_42 = [];\n    var result_43 = [];\n    var result_44 = [];\n    var result_45 = [];\n    var result_46 = [];\n    var result_47 = [];\n    var result_48 = [];\n    var result_49 = [];\n    var result_50 = [];\n    var result_51 = [];\n    var result_52 = [];\n    var result_53 = [];\n    var result_54 = [];\n    var result_55 = [];\n    var result_56 = [];\n    var result_57 = [];\n    var result_58 = [];\n    var result_59 = [];\n    var result_60 = [];\n    var result_61 = [];\n    var result_62 = [];\n    var result_63 = [];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "/tmp/tmppfah2e_m.js:78\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var group = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j]){\n                flag = 1;\n                group[j].push(Input[i]);\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i][0]);\n            group.push([Input[i]]);\n        }\n    }\n    return group;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'w',\n      't'\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpj_9cea_i.js:26:10)\n    at Object.<anonymous> (/tmp/tmpj_9cea_i.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ [ 'x', 'y' ], [ 'x', 'z' ] ], [ [ 'w', 't' ] ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                flag = true;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(!flag){\n            temp = [];\n            temp.push(Input[i][0]);\n            temp.push(Input[i][1]);\n            result.push(temp);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var first_element = Input[0][0];\n    for(var i=0;i<Input.length;i++){\n        if(first_element == Input[i][0]){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'x',\n    'z'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp_uvamnug.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_uvamnug.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'x', 'z' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = true;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                flag = false;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(flag){\n            result.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var arr = [];\n    var temp = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    for(i = 0; i < Input.length; i++){\n        arr[i] = Input[i].split(\",\");\n    }\n    for(i = 0; i < arr.length; i++){\n        for(j = 0; j < arr[i].length; j++){\n            if(arr[i][j] == arr[i+1][j]){\n                temp[k] = arr[i][j];\n                k++;\n            }\n        }\n    }\n    console.log(temp);\n}\ngroup_tuples([\"1,2,3\",\"4,5,6\",\"7,8,9\"]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "/tmp/tmpgfmbilpk.js:13\n            if(arr[i][j] == arr[i+1][j]){\n                                    ^\n\nTypeError: Cannot read properties of undefined (reading '0')\n    at group_tuples (/tmp/tmpgfmbilpk.js:13:37)\n    at Object.<anonymous> (/tmp/tmpgfmbilpk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    for(var i=0; i<Input.length; i++){\n        var flag = false;\n        for(var j=0; j<result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                flag = true;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(!flag){\n            result[result_index] = [];\n            result[result_index].push(Input[i][0]);\n            result[result_index].push(Input[i][1]);\n            result_index++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        temp.push(Input[i][0]);\n    }\n    for(var i=0;i<temp.length;i++){\n        var count = 0;\n        for(var j=0;j<temp.length;j++){\n            if(temp[i]==temp[j]){\n                count++;\n            }\n        }\n        if(count>1){\n            result.push(temp[i]);\n        }\n    }\n    return result;\n}\nvar Input = [['a',1],['b',2],['c',3],['a',4],['b',5],['c',6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp23xrc9it.js:27:10)\n    at Object.<anonymous> (/tmp/tmp23xrc9it.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = false;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input[i].length; j++){\n            for(var k = 0; k < result.length; k++){\n                if(Input[i][j] == result[k]){\n                    flag = 1;\n                }\n            }\n            if(flag == 0){\n                result[result_index] = Input[i][j];\n                result_index++;\n            }\n            flag = 0;\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3],[4,5,6],[7,8,9],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpa702imhv.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa702imhv.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var key = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input[i].length; j++){\n            if(key.indexOf(Input[i][j]) == -1){\n                key.push(Input[i][j]);\n            }\n        }\n    }\n    for(var i = 0; i < key.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(Input[j].indexOf(key[i]) == -1){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(key[i]);\n        }\n        flag = 0;\n    }\n    return result;\n}\nvar Input = [[1,2,3],[2,3,4],[3,4,5],[4,5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpq0kv2gy6.js:33:10)\n    at Object.<anonymous> (/tmp/tmpq0kv2gy6.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = false;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,3],[3,5],[5,7]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_tuple = [];\n    var result_tuple_1 = [];\n    var result_tuple_2 = [];\n    var result_tuple_3 = [];\n    var result_tuple_4 = [];\n    var result_tuple_5 = [];\n    var result_tuple_6 = [];\n    var result_tuple_7 = [];\n    var result_tuple_8 = [];\n    var result_tuple_9 = [];\n    var result_tuple_10 = [];\n    var result_tuple_11 = [];\n    var result_tuple_12 = [];\n    var result_tuple_13 = [];\n    var result_tuple_14 = [];\n    var result_tuple_15 = [];\n    var result_tuple_16 = [];\n    var result_tuple_17 = [];\n    var result_tuple_18 = [];\n    var result_tuple_19 = [];\n    var result_tuple_20 = [];\n    var result_tuple_21 = [];\n    var result_tuple_22 = [];\n    var result_tuple_23 = [];\n    var result_tuple_24 = [];\n    var result_tuple_25 = [];\n    var result_tuple_26 = [];\n    var result_tuple_27 = [];\n    var result_tuple_28 = [];\n    var result_tuple_29 = [];\n    var result_tuple_30 = [];\n    var result_tuple_31 = [];\n    var result_tuple_32 = [];\n    var result_tuple_33 = [];\n    var result_tuple_34 = [];\n    var result_tuple_35 = [];\n    var result_tuple_36 = [];\n    var result_tuple_37 = [];\n    var result_tuple_38 = [];\n    var result_tuple_39 = [];\n    var result_tuple_40 = [];\n    var result_tuple_41 = [];\n    var result_tuple_42 = [];\n    var result_tuple_43 = [];\n    var result_tuple_44 = [];\n    var result_tuple_45 = [];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "/tmp/tmp8sz52sy8.js:61\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j][1]++;\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push([Input[i][0], 1]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    2\n  ],\n  [\n    'w',\n    1\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp1_86pc71.js:25:10)\n    at Object.<anonymous> (/tmp/tmp1_86pc71.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 2 ], [ 'w', 1 ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        result.push(Input[i][0]);\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpbc0rzrnv.js:15:10)\n    at Object.<anonymous> (/tmp/tmpbc0rzrnv.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        result.push(Input[i][0]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpmtd_qlze.js:14:10)\n    at Object.<anonymous> (/tmp/tmpmtd_qlze.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var first_element = [];\n    for(var i=0;i<Input.length;i++){\n        first_element.push(Input[i][0]);\n    }\n    for(var j=0;j<first_element.length;j++){\n        if(first_element[j] == first_element[j+1]){\n            result.push(first_element[j]);\n        }\n    }\n    return result;\n}\nvar Input = [[\"A\",\"B\"],[\"A\",\"C\"],[\"A\",\"D\"],[\"B\",\"C\"],[\"B\",\"D\"],[\"C\",\"D\"]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpl22ismsh.js:21:10)\n    at Object.<anonymous> (/tmp/tmpl22ismsh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    let result = [];\n    for(let i=0;i<Input.length;i++){\n        let flag = false;\n        for(let j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n            }\n        }\n        if(!flag){\n            result.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var first_element = [];\n    for(var i = 0; i < Input.length; i++){\n        first_element.push(Input[i][0]);\n    }\n    for(var i = 0; i < first_element.length; i++){\n        if(first_element[i] == first_element[i+1]){\n            result.push(first_element[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpx4t104dz.js:20:10)\n    at Object.<anonymous> (/tmp/tmpx4t104dz.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = false;\n        for(var j=0;j<result.length;j++){\n            if(result[j][0] == Input[i][0]){\n                flag = true;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = false;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input.length;j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = true;\n                temp.push(Input[j]);\n            }\n        }\n        if(flag){\n            result.push(temp);\n            temp = [];\n        }\n        flag = false;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'w',\n      't'\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp8i_nlq3u.js:27:10)\n    at Object.<anonymous> (/tmp/tmp8i_nlq3u.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ [ 'x', 'y' ], [ 'x', 'z' ] ],\n    [ [ 'x', 'y' ], [ 'x', 'z' ] ],\n    [ [ 'w', 't' ] ]\n  ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(result[j][0] == Input[i][0]){\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp27oe00c0.js:24:10)\n    at Object.<anonymous> (/tmp/tmp27oe00c0.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        temp = Input[i];\n        result.push(temp[0]);\n    }\n    return result;\n}\nvar Input = [['a','b'],['c','d'],['e','f']];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpygnqs31s.js:17:10)\n    at Object.<anonymous> (/tmp/tmpygnqs31s.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var temp = [];\n    var temp_index = 0;\n    for(var i = 0; i < Input.length; i++){\n        if(i == 0){\n            temp[temp_index] = Input[i];\n            temp_index++;\n        }\n        else{\n            if(Input[i][0] == Input[i-1][0]){\n                temp[temp_index] = Input[i];\n                temp_index++;\n            }\n            else{\n                result[result_index] = temp;\n                result_index++;\n                temp = [];\n                temp_index = 0;\n                temp[temp_index] = Input[i];\n                temp_index++;\n            }\n        }\n    }\n    result[result_index] = temp;\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'w',\n      't'\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp9vwvfriq.js:36:10)\n    at Object.<anonymous> (/tmp/tmp9vwvfriq.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ [ 'x', 'y' ], [ 'x', 'z' ] ], [ [ 'w', 't' ] ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var first_element = [];\n    for(var i=0; i<Input.length; i++){\n        first_element.push(Input[i][0]);\n    }\n    var unique_first_element = first_element.filter(function(item, pos) {\n        return first_element.indexOf(item) == pos;\n    })\n    for(var i=0; i<unique_first_element.length; i++){\n        var temp = [];\n        for(var j=0; j<Input.length; j++){\n            if(unique_first_element[i] == Input[j][0]){\n                temp.push(Input[j]);\n            }\n        }\n        result.push(temp);\n    }\n    return result;\n}\n\nvar input = [[1,2,3],[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'w',\n      't'\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpbj9ywygj.js:29:10)\n    at Object.<anonymous> (/tmp/tmpbj9ywygj.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ [ 'x', 'y' ], [ 'x', 'z' ] ], [ [ 'w', 't' ] ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = 0;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = 1;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        result.push(Input[i][0]);\n    }\n    return result;\n}\n\nvar Input = [['a', 'b'], ['a', 'c'], ['d', 'e']];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmprgog8dar.js:16:10)\n    at Object.<anonymous> (/tmp/tmprgog8dar.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input[i].length; j++){\n            if(result.length == 0){\n                result.push(Input[i][j]);\n            }\n            else{\n                for(var k = 0; k < result.length; k++){\n                    if(Input[i][j] == result[k]){\n                        flag = 1;\n                    }\n                }\n                if(flag == 0){\n                    result.push(Input[i][j]);\n                }\n                flag = 0;\n            }\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpy2qzrxaf.js:32:10)\n    at Object.<anonymous> (/tmp/tmpy2qzrxaf.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        result.push(Input[i][0]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpmtd_qlze.js:14:10)\n    at Object.<anonymous> (/tmp/tmpmtd_qlze.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(flag == 0){\n                temp.push(Input[i][j]);\n                flag = 1;\n            }\n            else{\n                if(temp.indexOf(Input[i][j]) == -1){\n                    temp.push(Input[i][j]);\n                }\n            }\n        }\n    }\n    result.push(temp);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y',\n    'z',\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpq7no0m90.js:27:10)\n    at Object.<anonymous> (/tmp/tmpq7no0m90.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y', 'z', 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = 1;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,9],[3,10]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input.length;j++){\n            if(i!=j){\n                if(Input[i][0] == Input[j][0]){\n                    flag = 1;\n                    break;\n                }\n            }\n        }\n        if(flag == 1){\n            result[result_index] = Input[i][0];\n            result_index++;\n        }\n        flag = 0;\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[1,2],[7,8],[1,2],[9,0]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpt0uzx87t.js:29:10)\n    at Object.<anonymous> (/tmp/tmpt0uzx87t.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var result_index_2 = 0;\n    var result_index_3 = 0;\n    var result_index_4 = 0;\n    var result_index_5 = 0;\n    var result_index_6 = 0;\n    var result_index_7 = 0;\n    var result_index_8 = 0;\n    var result_index_9 = 0;\n    var result_index_10 = 0;\n    var result_index_11 = 0;\n    var result_index_12 = 0;\n    var result_index_13 = 0;\n    var result_index_14 = 0;\n    var result_index_15 = 0;\n    var result_index_16 = 0;\n    var result_index_17 = 0;\n    var result_index_18 = 0;\n    var result_index_19 = 0;\n    var result_index_20 = 0;\n    var result_index_21 = 0;\n    var result_index_22 = 0;\n    var result_index_23 = 0;\n    var result_index_24 = 0;\n    var result_index_25 = 0;\n    var result_index_26 = 0;\n    var result_index_27 = 0;\n    var result_index_28 = 0;\n    var result_index_29 = 0;\n    var result_index_30 = 0;\n    var result_index_31 = 0;\n    var result_index_32 = 0;\n    var result_index_33 = 0;\n    var result_index_34 = 0;\n    var result_index_35 = 0;\n    var result_index_36 = 0;\n    var result_index_37 = 0;\n    var result_index_38 = 0;\n    var result_index_39 = 0;\n    var result_index_40 = 0;\n    var result_index_41 = 0;\n    var result_index_42 = 0;\n    var result_index_43 = 0;\n    var result_index_44 = 0;\n    var result_index_45 = 0;\n    var result_index_46 = 0;\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "/tmp/tmpn8tg7q1t.js:61\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var key = Input[0][0];\n    var count = 0;\n    for(var i=0;i<Input.length;i++){\n        if(Input[i][0] == key){\n            count++;\n        }\n    }\n    result.push(key);\n    result.push(count);\n    return result;\n}\nvar Input = [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  2\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpow2f65al.js:21:10)\n    at Object.<anonymous> (/tmp/tmpow2f65al.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 2 ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i = 0; i < Input.length; i++){\n        temp.push(Input[i][0]);\n    }\n    for(var i = 0; i < temp.length; i++){\n        if(temp.indexOf(temp[i]) == temp.lastIndexOf(temp[i])){\n            result.push(temp[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpbsw9zm3o.js:20:10)\n    at Object.<anonymous> (/tmp/tmpbsw9zm3o.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var key = [];\n    for(var i=0;i<Input.length;i++){\n        if(key.indexOf(Input[i][0]) === -1){\n            key.push(Input[i][0]);\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[1,2],[1,2],[1,2]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpy73hz93d.js:19:10)\n    at Object.<anonymous> (/tmp/tmpy73hz93d.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result1 = [];\n    var result2 = [];\n    var result3 = [];\n    var result4 = [];\n    var result5 = [];\n    var result6 = [];\n    var result7 = [];\n    var result8 = [];\n    var result9 = [];\n    var result10 = [];\n    var result11 = [];\n    var result12 = [];\n    var result13 = [];\n    var result14 = [];\n    var result15 = [];\n    var result16 = [];\n    var result17 = [];\n    var result18 = [];\n    var result19 = [];\n    var result20 = [];\n    var result21 = [];\n    var result22 = [];\n    var result23 = [];\n    var result24 = [];\n    var result25 = [];\n    var result26 = [];\n    var result27 = [];\n    var result28 = [];\n    var result29 = [];\n    var result30 = [];\n    var result31 = [];\n    var result32 = [];\n    var result33 = [];\n    var result34 = [];\n    var result35 = [];\n    var result36 = [];\n    var result37 = [];\n    var result38 = [];\n    var result39 = [];\n    var result40 = [];\n    var result41 = [];\n    var result42 = [];\n    var result43 = [];\n    var result44 = [];\n    var result45 = [];\n    var result46 = [];\n    var result47 = [];\n    var result48 = [];\n    var result49 = [];\n    var result50 = [];\n    var result51 = [];\n    var result52 = [];\n    var result53 = [];\n    var result54 = [];\n    var result55 = [];\n    var result56 = [];\n    var result57 = [];\n    var result58 = [];\n    var result59 = [];\n    var result60 = [];\n    var result61 = [];\n    var result62 = [];\n    var result63 = [];\n    var result64 = [];\n    var result65 = [];\n    var result66 = [];\n    var result67 = [];\n    var result68 = [];\n    var result69 = [];\n    var result70 = [];\n    var result71 = [];\n    var result72 = [];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "/tmp/tmp63xsi1vb.js:87\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = true;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = false;\n            }\n        }\n        if(flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,3],[3,5],[5,7]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        temp.push(Input[i][0]);\n    }\n    for(var i=0;i<temp.length;i++){\n        var count = 0;\n        for(var j=0;j<temp.length;j++){\n            if(temp[i]==temp[j]){\n                count++;\n            }\n        }\n        if(count>1){\n            result.push(temp[i]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpsif5nae5.js:27:10)\n    at Object.<anonymous> (/tmp/tmpsif5nae5.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = false;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                flag = true;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n        flag = false;\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,9],[3,10],[5,11],[7,12]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result[result_index] = Input[i];\n            result_index++;\n        }\n    }\n    return result;\n}\nvar Input = [\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "/tmp/tmp50k1a5sg.js:63\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input[i].length; j++){\n            if(Input[i][j] == Input[i][0]){\n                flag = 1;\n            }\n            else{\n                flag = 0;\n                break;\n            }\n        }\n        if(flag == 1){\n            temp.push(Input[i][0]);\n        }\n    }\n    result.push(temp);\n    return result;\n}\nvar Input = [[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  []\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpda509w7b.js:29:10)\n    at Object.<anonymous> (/tmp/tmpda509w7b.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result1 = [];\n    var result2 = [];\n    var result3 = [];\n    var result4 = [];\n    var result5 = [];\n    var result6 = [];\n    var result7 = [];\n    var result8 = [];\n    var result9 = [];\n    var result10 = [];\n    var result11 = [];\n    var result12 = [];\n    var result13 = [];\n    var result14 = [];\n    var result15 = [];\n    var result16 = [];\n    var result17 = [];\n    var result18 = [];\n    var result19 = [];\n    var result20 = [];\n    var result21 = [];\n    var result22 = [];\n    var result23 = [];\n    var result24 = [];\n    var result25 = [];\n    var result26 = [];\n    var result27 = [];\n    var result28 = [];\n    var result29 = [];\n    var result30 = [];\n    var result31 = [];\n    var result32 = [];\n    var result33 = [];\n    var result34 = [];\n    var result35 = [];\n    var result36 = [];\n    var result37 = [];\n    var result38 = [];\n    var result39 = [];\n    var result40 = [];\n    var result41 = [];\n    var result42 = [];\n    var result43 = [];\n    var result44 = [];\n    var result45 = [];\n    var result46 = [];\n    var result47 = [];\n    var result48 = [];\n    var result49 = [];\n    var result50 = [];\n    var result51 = [];\n    var result52 = [];\n    var result53 = [];\n    var result54 = [];\n    var result55 = [];\n    var result56 = [];\n    var result57 = [];\n    var result58 = [];\n    var result59 = [];\n    var result60 = [];\n    var result61 = [];\n    var result62 = [];\n    var result63 = [];\n    var result64 = [];\n    var result65 = [];\n    var result66 = [];\n    var result67 = [];\n    var result68 = [];\n    var result69 = [];\n    var result70 = [];\n    var result71 = [];\n    var result72 = [];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "/tmp/tmp63xsi1vb.js:87\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input.length;j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = 1;\n            }\n            else{\n                flag = 0;\n                break;\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3],[4,5,6],[7,8,9],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpy1wi1pym.js:27:10)\n    at Object.<anonymous> (/tmp/tmpy1wi1pym.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                flag = 1;\n                result[j].push(Input[i][1]);\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[1,3],[3,5],[5,7]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = true;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                flag = false;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(flag){\n            result.push([Input[i][0], Input[i][1]]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                flag = 1;\n                result[j].push(Input[i][1]);\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(i != j){\n                if(Input[i][0] == Input[j][0]){\n                    flag = 1;\n                }\n                else{\n                    flag = 0;\n                    break;\n                }\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp7ppd5m8t.js:29:10)\n    at Object.<anonymous> (/tmp/tmp7ppd5m8t.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(j==0){\n                temp.push(Input[i][j]);\n            }\n        }\n    }\n    var count = 0;\n    for(var i=0;i<temp.length;i++){\n        for(var j=0;j<temp.length;j++){\n            if(temp[i]==temp[j]){\n                count++;\n            }\n        }\n        if(count>1){\n            result.push(temp[i]);\n        }\n        count = 0;\n    }\n    return result;\n}\nvar Input = [[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp_b5kqdc8.js:32:10)\n    at Object.<anonymous> (/tmp/tmp_b5kqdc8.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(i != j){\n                if(Input[i][0] == Input[j][0]){\n                    flag = 1;\n                }\n                else{\n                    flag = 0;\n                    break;\n                }\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp6o68xffz.js:30:10)\n    at Object.<anonymous> (/tmp/tmp6o68xffz.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        temp.push(Input[i][0]);\n    }\n    var count = 0;\n    for(var i=0;i<temp.length;i++){\n        for(var j=i+1;j<temp.length;j++){\n            if(temp[i]==temp[j]){\n                count++;\n            }\n        }\n        if(count==temp.length-1){\n            result.push(temp[i]);\n        }\n        count = 0;\n    }\n    return result;\n}\nvar Input = [[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpnbate3vg.js:28:10)\n    at Object.<anonymous> (/tmp/tmpnbate3vg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input[i].length; j++){\n            if(flag == 0){\n                temp.push(Input[i][j]);\n                flag = 1;\n            }\n            else{\n                if(temp.indexOf(Input[i][j]) == -1){\n                    temp.push(Input[i][j]);\n                }\n            }\n        }\n    }\n    result.push(temp);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y',\n    'z',\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp_uo4a1po.js:28:10)\n    at Object.<anonymous> (/tmp/tmp_uo4a1po.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y', 'z', 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    Input.forEach(function(tuple){\n        var found = false;\n        result.forEach(function(group){\n            if(group[0] == tuple[0]){\n                group.push(tuple);\n                found = true;\n            }\n        });\n        if(!found){\n            result.push([tuple]);\n        }\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    [\n      'x',\n      'y'\n    ]\n  ],\n  [\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'w',\n      't'\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp69f8uxt4.js:24:10)\n    at Object.<anonymous> (/tmp/tmp69f8uxt4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ [ 'x', 'y' ] ], [ [ 'x', 'z' ] ], [ [ 'w', 't' ] ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        temp.push(Input[i][0]);\n    }\n    for(var i=0;i<temp.length;i++){\n        var count = 0;\n        for(var j=0;j<temp.length;j++){\n            if(temp[i] == temp[j]){\n                count++;\n            }\n        }\n        if(count > 1){\n            result.push(temp[i]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpz34n3us9.js:27:10)\n    at Object.<anonymous> (/tmp/tmpz34n3us9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n        flag = 0;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpl1g48q_i.js:25:10)\n    at Object.<anonymous> (/tmp/tmpl1g48q_i.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [['A', 'B'], ['A', 'C'], ['A', 'D'], ['B', 'C'], ['B', 'D'], ['C', 'D']];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0; i<Input.length; i++){\n        var flag = 0;\n        for(var j=0; j<result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,3],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var dict = {};\n    for(var i=0;i<Input.length;i++){\n        if(dict[Input[i][0]] == undefined){\n            dict[Input[i][0]] = 1;\n        }\n        else{\n            dict[Input[i][0]] += 1;\n        }\n    }\n    var max = 0;\n    var max_key = 0;\n    for(var key in dict){\n        if(dict[key] > max){\n            max = dict[key];\n            max_key = key;\n        }\n    }\n    return max_key;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'x'\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpzek179jl.js:27:10)\n    at Object.<anonymous> (/tmp/tmpzek179jl.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'x',\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = false;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[1,3],[5,6],[3,4],[1,2]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input[i].length; j++){\n            if(temp.length == 0){\n                temp.push(Input[i][j]);\n            }\n            else{\n                for(var k = 0; k < temp.length; k++){\n                    if(Input[i][j] == temp[k]){\n                        flag = 1;\n                        break;\n                    }\n                }\n                if(flag == 0){\n                    temp.push(Input[i][j]);\n                }\n                flag = 0;\n            }\n        }\n    }\n    result.push(temp);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y',\n    'z',\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpzqfa_uq6.js:34:10)\n    at Object.<anonymous> (/tmp/tmpzqfa_uq6.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y', 'z', 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = false;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = false;\n    for (var i = 0; i < Input.length; i++) {\n        for (var j = 0; j < result.length; j++) {\n            if (Input[i][0] == result[j][0]) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag) {\n            result[j][1] += \",\" + Input[i][1];\n            flag = false;\n        } else {\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y,z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpgfry_zed.js:26:10)\n    at Object.<anonymous> (/tmp/tmpgfry_zed.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y,z' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(result[j][0] == Input[i][0]){\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp27oe00c0.js:24:10)\n    at Object.<anonymous> (/tmp/tmp27oe00c0.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var result_flag = false;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input.length;j++){\n            if(Input[i][0] == Input[j][0] && i!=j){\n                result[result_index] = Input[i][0];\n                result_index++;\n                result_flag = true;\n            }\n        }\n    }\n    if(result_flag == true){\n        return result;\n    }\n    else{\n        return -1;\n    }\n}\nvar Input = [[1,2],[3,4],[1,2],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpazbt0_hm.js:28:10)\n    at Object.<anonymous> (/tmp/tmpazbt0_hm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var first_element = Input[0][0];\n    for(var i=1;i<Input.length;i++){\n        if(Input[i][0] != first_element){\n            return false;\n        }\n    }\n    return true;\n}\n\nvar Input = [[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpjmroha7t.js:18:10)\n    at Object.<anonymous> (/tmp/tmpjmroha7t.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    var flag = 0;\n    for(i = 0; i < Input.length; i++){\n        for(j = 0; j < Input.length; j++){\n            if(Input[i][0] == Input[j][0]){\n                count++;\n            }\n        }\n        if(count > 1){\n            result.push(Input[i][0]);\n        }\n        count = 0;\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpe2eayfsd.js:28:10)\n    at Object.<anonymous> (/tmp/tmpe2eayfsd.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for (var i = 0; i < Input.length; i++) {\n        result.push(Input[i][0]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp7fh5belw.js:14:10)\n    at Object.<anonymous> (/tmp/tmp7fh5belw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n            }\n        }\n        if(!flag){\n            result.push([Input[i][0], Input[i][1]]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2], [1,3], [1,4], [2,3], [2,4], [3,4]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result1 = [];\n    var result2 = [];\n    var result3 = [];\n    var result4 = [];\n    var result5 = [];\n    var result6 = [];\n    var result7 = [];\n    var result8 = [];\n    var result9 = [];\n    var result10 = [];\n    var result11 = [];\n    var result12 = [];\n    var result13 = [];\n    var result14 = [];\n    var result15 = [];\n    var result16 = [];\n    var result17 = [];\n    var result18 = [];\n    var result19 = [];\n    var result20 = [];\n    var result21 = [];\n    var result22 = [];\n    var result23 = [];\n    var result24 = [];\n    var result25 = [];\n    var result26 = [];\n    var result27 = [];\n    var result28 = [];\n    var result29 = [];\n    var result30 = [];\n    var result31 = [];\n    var result32 = [];\n    var result33 = [];\n    var result34 = [];\n    var result35 = [];\n    var result36 = [];\n    var result37 = [];\n    var result38 = [];\n    var result39 = [];\n    var result40 = [];\n    var result41 = [];\n    var result42 = [];\n    var result43 = [];\n    var result44 = [];\n    var result45 = [];\n    var result46 = [];\n    var result47 = [];\n    var result48 = [];\n    var result49 = [];\n    var result50 = [];\n    var result51 = [];\n    var result52 = [];\n    var result53 = [];\n    var result54 = [];\n    var result55 = [];\n    var result56 = [];\n    var result57 = [];\n    var result58 = [];\n    var result59 = [];\n    var result60 = [];\n    var result61 = [];\n    var result62 = [];\n    var result63 = [];\n    var result64 = [];\n    var result65 = [];\n    var result66 = [];\n    var result67 = [];\n    var result68 = [];\n    var result69 = [];\n    var result70 = [];\n    var result71 = [];\n    var result72 = [];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "/tmp/tmp63xsi1vb.js:87\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(result[j][0] == Input[i][0]){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[1,2],[5,6],[7,8],[1,2],[3,4]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpyyb7bgvx.js:25:10)\n    at Object.<anonymous> (/tmp/tmpyyb7bgvx.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var result_flag = false;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(result.length == 0){\n                result[result_index] = Input[i][j];\n                result_index++;\n            }\n            else{\n                for(var k=0;k<result.length;k++){\n                    if(Input[i][j] == result[k]){\n                        result_flag = true;\n                        break;\n                    }\n                }\n                if(!result_flag){\n                    result[result_index] = Input[i][j];\n                    result_index++;\n                }\n                result_flag = false;\n            }\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpakrisq77.js:35:10)\n    at Object.<anonymous> (/tmp/tmpakrisq77.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var output = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<output.length;j++){\n            if(Input[i][0] == output[j][0]){\n                flag = 1;\n                output[j].push(Input[i][1]);\n                break;\n            }\n        }\n        if(flag == 0){\n            output.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return output;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0; i<Input.length; i++){\n        var flag = 0;\n        for(var j=0; j<result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = 1;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmprm85vevc.js:23:10)\n    at Object.<anonymous> (/tmp/tmprm85vevc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        result.push(Input[i][0]);\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpbc0rzrnv.js:15:10)\n    at Object.<anonymous> (/tmp/tmpbc0rzrnv.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var group = [];\n    for(var i=0;i<Input.length;i++){\n        if(Input[i][0]==Input[i+1][0]){\n            group.push(Input[i]);\n        }\n        else{\n            group.push(Input[i]);\n            result.push(group);\n            group = [];\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3],[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "/tmp/tmp46z1zixr.js:6\n        if(Input[i][0]==Input[i+1][0]){\n                                  ^\n\nTypeError: Cannot read properties of undefined (reading '0')\n    at group_tuples (/tmp/tmp46z1zixr.js:6:35)\n    at test (/tmp/tmp46z1zixr.js:24:20)\n    at Object.<anonymous> (/tmp/tmp46z1zixr.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var result_flag = false;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(result.length == 0){\n                result[result_index] = Input[i][j];\n                result_index++;\n            }else{\n                for(var k=0;k<result.length;k++){\n                    if(result[k] == Input[i][j]){\n                        result_flag = true;\n                        break;\n                    }\n                }\n                if(result_flag == false){\n                    result[result_index] = Input[i][j];\n                    result_index++;\n                }\n                result_flag = false;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpqegcugjh.js:34:10)\n    at Object.<anonymous> (/tmp/tmpqegcugjh.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input.length;j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = 1;\n                temp.push(Input[i][1]);\n            }\n        }\n        if(flag == 1){\n            result.push([Input[i][0],temp]);\n            temp = [];\n            flag = 0;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    [\n      'y',\n      'y'\n    ]\n  ],\n  [\n    'x',\n    [\n      'z',\n      'z'\n    ]\n  ],\n  [\n    'w',\n    [\n      't'\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp42qg0net.js:26:10)\n    at Object.<anonymous> (/tmp/tmp42qg0net.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', [ 'y', 'y' ] ], [ 'x', [ 'z', 'z' ] ], [ 'w', [ 't' ] ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var keys = [];\n    for (var i = 0; i < Input.length; i++) {\n        var key = Input[i][0];\n        if (keys.indexOf(key) === -1) {\n            keys.push(key);\n            result.push([Input[i]]);\n        } else {\n            result[keys.indexOf(key)].push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [\n    [1,2,3],\n    [1,2,4],\n    [1,2,5],\n    [2,2,4],\n    [2,2,5],\n    [2,2,6],\n    [3,2,4],\n    [3,2,5],\n    [3,2,6],\n    [3,2,7]\n];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'w',\n      't'\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpm8ukavt3.js:35:10)\n    at Object.<anonymous> (/tmp/tmpm8ukavt3.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ [ 'x', 'y' ], [ 'x', 'z' ] ], [ [ 'w', 't' ] ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                flag = true;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var first_element = [];\n    for(var i = 0; i < Input.length; i++){\n        first_element.push(Input[i][0]);\n    }\n    var first_element_set = new Set(first_element);\n    var first_element_array = Array.from(first_element_set);\n    var count = 0;\n    var common_element = [];\n    for(var i = 0; i < first_element_array.length; i++){\n        for(var j = 0; j < first_element.length; j++){\n            if(first_element_array[i] == first_element[j]){\n                count++;\n            }\n        }\n        if(count > 1){\n            common_element.push(first_element_array[i]);\n        }\n        count = 0;\n    }\n    return common_element;\n}\nvar Input = [[1,2,3],[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpem515_rv.js:30:10)\n    at Object.<anonymous> (/tmp/tmpem515_rv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[1,7],[3,8],[9,10]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = Input.reduce(function(a,b){\n        return a.concat(b);\n    });\n    var result = result.filter(function(item,index){\n        return result.indexOf(item) == index;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpniz20pds.js:17:10)\n    at Object.<anonymous> (/tmp/tmpniz20pds.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(Input[i][0] == Input[j][0]){\n                flag++;\n            }\n        }\n        if(flag == Input.length){\n            result.push(Input[i][0]);\n        }\n        flag = 0;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpejopdgz4.js:23:10)\n    at Object.<anonymous> (/tmp/tmpejopdgz4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = false;\n        for(var j=0;j<result.length;j++){\n            if(result[j][0] == Input[i][0]){\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpzgj7vnwm.js:24:10)\n    at Object.<anonymous> (/tmp/tmpzgj7vnwm.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var i = 0;\n    for(i = 0; i < Input.length; i++){\n        var j = 0;\n        for(j = 0; j < Input[i].length; j++){\n            if(result.indexOf(Input[i][j]) == -1){\n                result.push(Input[i][j]);\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpzx0xiar0.js:20:10)\n    at Object.<anonymous> (/tmp/tmpzx0xiar0.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    let result = [];\n    let temp = [];\n    for(let i=0;i<Input.length;i++){\n        for(let j=0;j<Input[i].length;j++){\n            temp.push(Input[i][j]);\n        }\n    }\n    let count = 0;\n    for(let i=0;i<temp.length;i++){\n        for(let j=i+1;j<temp.length;j++){\n            if(temp[i] == temp[j]){\n                count++;\n            }\n        }\n        if(count == 1){\n            result.push(temp[i]);\n        }\n        count = 0;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpzf25w9eq.js:29:10)\n    at Object.<anonymous> (/tmp/tmpzf25w9eq.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0; i<Input.length; i++){\n        var flag = true;\n        for(var j=0; j<result.length; j++){\n            if(result[j][0] == Input[i][0]){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [\n    [1,2,3],\n    [1,2,4],\n    [1,2,5],\n    [2,3,4],\n    [2,3,5],\n    [3,4,5],\n    [1,2,3],\n    [1,2,4],\n    [1,2,5],\n    [2,3,4],\n    [2,3,5],\n    [3,4,5]\n];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpcc3emye9.js:39:10)\n    at Object.<anonymous> (/tmp/tmpcc3emye9.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = true;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp5h8_qo1s.js:24:10)\n    at Object.<anonymous> (/tmp/tmp5h8_qo1s.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var first_element = Input[0][0];\n    for(var i=0; i<Input.length; i++){\n        if(Input[i][0] == first_element){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'x',\n    'z'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpxt4wi95m.js:17:10)\n    at Object.<anonymous> (/tmp/tmpxt4wi95m.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'x', 'z' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var group = [];\n    for(var i=0;i<Input.length;i++){\n        if(result.indexOf(Input[i][0])==-1){\n            result.push(Input[i][0]);\n            group.push(Input[i]);\n        }\n    }\n    return group;\n}\n\nvar Input = [(1,2),(3,4),(5,6),(1,2),(7,8),(1,2)];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpfjb8vt68.js:20:10)\n    at Object.<anonymous> (/tmp/tmpfjb8vt68.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for (var i = 0; i < Input.length; i++) {\n        var flag = false;\n        for (var j = 0; j < result.length; j++) {\n            if (result[j][0] == Input[i][0]) {\n                flag = true;\n                break;\n            }\n        }\n        if (!flag) {\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpk2xq8kpn.js:23:10)\n    at Object.<anonymous> (/tmp/tmpk2xq8kpn.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var temp = [];\n    var temp_index = 0;\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input.length;j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = 1;\n                temp[temp_index] = Input[j];\n                temp_index++;\n            }\n        }\n        if(flag == 1){\n            result[result_index] = temp;\n            result_index++;\n            temp = [];\n            temp_index = 0;\n        }\n        flag = 0;\n    }\n    return result;\n}\nvar Input = [[1,2,3],[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'w',\n      't'\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp_u8ueecz.js:32:10)\n    at Object.<anonymous> (/tmp/tmp_u8ueecz.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ [ 'x', 'y' ], [ 'x', 'z' ] ],\n    [ [ 'x', 'y' ], [ 'x', 'z' ] ],\n    [ [ 'w', 't' ] ]\n  ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = true;\n        for(var j=0;j<result.length;j++){\n            if(result[j][0]==Input[i][0]){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpcmjyhwj3.js:23:10)\n    at Object.<anonymous> (/tmp/tmpcmjyhwj3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = true;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input[i].length; j++){\n            flag = 0;\n            for(var k = 0; k < result.length; k++){\n                if(Input[i][j] == result[k]){\n                    flag = 1;\n                }\n            }\n            if(flag == 0){\n                result[result_index] = Input[i][j];\n                result_index++;\n            }\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20],[21,22,23,24,25]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpl5zxyb2a.js:29:10)\n    at Object.<anonymous> (/tmp/tmpl5zxyb2a.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = true;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = false;\n            }\n        }\n        if(flag){\n            result.push([Input[i][0], Input[i][1]]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "/tmp/tmpgz750_4_.js:20\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = true;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0]==result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                flag = 1;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(flag == 0){\n            result.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for (var i = 0; i < Input.length; i++) {\n        var flag = true;\n        for (var j = 0; j < result.length; j++) {\n            if (result[j][0] == Input[i][0]) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp1dp2iqq2.js:23:10)\n    at Object.<anonymous> (/tmp/tmp1dp2iqq2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result1 = [];\n    var result2 = [];\n    var result3 = [];\n    var result4 = [];\n    var result5 = [];\n    var result6 = [];\n    var result7 = [];\n    var result8 = [];\n    var result9 = [];\n    var result10 = [];\n    var result11 = [];\n    var result12 = [];\n    var result13 = [];\n    var result14 = [];\n    var result15 = [];\n    var result16 = [];\n    var result17 = [];\n    var result18 = [];\n    var result19 = [];\n    var result20 = [];\n    var result21 = [];\n    var result22 = [];\n    var result23 = [];\n    var result24 = [];\n    var result25 = [];\n    var result26 = [];\n    var result27 = [];\n    var result28 = [];\n    var result29 = [];\n    var result30 = [];\n    var result31 = [];\n    var result32 = [];\n    var result33 = [];\n    var result34 = [];\n    var result35 = [];\n    var result36 = [];\n    var result37 = [];\n    var result38 = [];\n    var result39 = [];\n    var result40 = [];\n    var result41 = [];\n    var result42 = [];\n    var result43 = [];\n    var result44 = [];\n    var result45 = [];\n    var result46 = [];\n    var result47 = [];\n    var result48 = [];\n    var result49 = [];\n    var result50 = [];\n    var result51 = [];\n    var result52 = [];\n    var result53 = [];\n    var result54 = [];\n    var result55 = [];\n    var result56 = [];\n    var result57 = [];\n    var result58 = [];\n    var result59 = [];\n    var result60 = [];\n    var result61 = [];\n    var result62 = [];\n    var result63 = [];\n    var result64 = [];\n    var result65 = [];\n    var result66 = [];\n    var result67 = [];\n    var result68 = [];\n    var result69 = [];\n    var result70 = [];\n    var result71 = [];\n    var result72 = [];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "/tmp/tmp63xsi1vb.js:87\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = Input.reduce(function(previous, current) {\n        if (previous.indexOf(current[0]) === -1) {\n            previous.push(current[0]);\n        }\n        return previous;\n    }, []);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp_e2mu7jr.js:16:10)\n    at Object.<anonymous> (/tmp/tmp_e2mu7jr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = 1;\n            }\n            else{\n                flag = 0;\n                break;\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[1,2],[1,2],[1,2]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpje3sq88v.js:27:10)\n    at Object.<anonymous> (/tmp/tmpje3sq88v.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var group = {};\n    for(var i = 0; i < Input.length; i++){\n        var key = Input[i][0];\n        if(!group[key]){\n            group[key] = [];\n        }\n        group[key].push(Input[i]);\n    }\n    for(var key in group){\n        result.push(group[key]);\n    }\n    return result;\n}\n\nvar Input = [[1,2,3],[4,5,6],[7,8,9],[1,2,3],[4,5,6],[7,8,9]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'w',\n      't'\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpevnkl1ie.js:24:10)\n    at Object.<anonymous> (/tmp/tmpevnkl1ie.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ [ 'x', 'y' ], [ 'x', 'z' ] ], [ [ 'w', 't' ] ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_set = new Set();\n    for(var i=0;i<Input.length;i++){\n        var tuple = Input[i];\n        for(var j=0;j<tuple.length;j++){\n            if(result_set.has(tuple[j])){\n                result.push(tuple[j]);\n            }\n            else{\n                result_set.add(tuple[j]);\n            }\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3],[1,2,3,4],[1,2,3,4,5]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmphutizgl5.js:25:10)\n    at Object.<anonymous> (/tmp/tmphutizgl5.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i=0; i<Input.length; i++){\n        for(var j=0; j<Input.length; j++){\n            if(i!=j){\n                if(Input[i][0] == Input[j][0]){\n                    flag = 1;\n                }\n                else{\n                    flag = 0;\n                    break;\n                }\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpt03uvz45.js:29:10)\n    at Object.<anonymous> (/tmp/tmpt03uvz45.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var result_flag = false;\n    for(var i = 0; i < Input.length; i++){\n        result_flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result_flag = true;\n                break;\n            }\n        }\n        if(!result_flag){\n            result[result_index] = Input[i];\n            result_index++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp4p0hls5_.js:27:10)\n    at Object.<anonymous> (/tmp/tmp4p0hls5_.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                flag = true;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var flag = 0;\n    for(i = 0; i < Input.length; i++){\n        for(j = 0; j < Input[i].length; j++){\n            for(k = 0; k < result.length; k++){\n                if(Input[i][j] == result[k]){\n                    flag = 1;\n                    break;\n                }\n            }\n            if(flag == 0){\n                result.push(Input[i][j]);\n            }\n            flag = 0;\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3,4,5], [1,2,3,4,5], [1,2,3,4,5]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpl3spfmqy.js:31:10)\n    at Object.<anonymous> (/tmp/tmpl3spfmqy.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0; i<Input.length; i++){\n        var flag = false;\n        for(var j=0; j<result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                flag = true;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result1 = [];\n    var result2 = [];\n    var result3 = [];\n    var result4 = [];\n    var result5 = [];\n    var result6 = [];\n    var result7 = [];\n    var result8 = [];\n    var result9 = [];\n    var result10 = [];\n    var result11 = [];\n    var result12 = [];\n    var result13 = [];\n    var result14 = [];\n    var result15 = [];\n    var result16 = [];\n    var result17 = [];\n    var result18 = [];\n    var result19 = [];\n    var result20 = [];\n    var result21 = [];\n    var result22 = [];\n    var result23 = [];\n    var result24 = [];\n    var result25 = [];\n    var result26 = [];\n    var result27 = [];\n    var result28 = [];\n    var result29 = [];\n    var result30 = [];\n    var result31 = [];\n    var result32 = [];\n    var result33 = [];\n    var result34 = [];\n    var result35 = [];\n    var result36 = [];\n    var result37 = [];\n    var result38 = [];\n    var result39 = [];\n    var result40 = [];\n    var result41 = [];\n    var result42 = [];\n    var result43 = [];\n    var result44 = [];\n    var result45 = [];\n    var result46 = [];\n    var result47 = [];\n    var result48 = [];\n    var result49 = [];\n    var result50 = [];\n    var result51 = [];\n    var result52 = [];\n    var result53 = [];\n    var result54 = [];\n    var result55 = [];\n    var result56 = [];\n    var result57 = [];\n    var result58 = [];\n    var result59 = [];\n    var result60 = [];\n    var result61 = [];\n    var result62 = [];\n    var result63 = [];\n    var result64 = [];\n    var result65 = [];\n    var result66 = [];\n    var result67 = [];\n    var result68 = [];\n    var result69 = [];\n    var result70 = [];\n    var result71 = [];\n    var result72 = [];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "/tmp/tmp63xsi1vb.js:87\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var group = {};\n    for(var i = 0; i < Input.length; i++){\n        var tuple = Input[i];\n        var key = tuple[0];\n        if(group[key] === undefined){\n            group[key] = [];\n        }\n        group[key].push(tuple);\n    }\n    return group;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  w: [\n    [\n      'w',\n      't'\n    ]\n  ],\n  x: [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpts7qbc8w.js:20:10)\n    at Object.<anonymous> (/tmp/tmpts7qbc8w.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { x: [ [ 'x', 'y' ], [ 'x', 'z' ] ], w: [ [ 'w', 't' ] ] },\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        temp.push(Input[i][0]);\n    }\n    var unique = temp.filter(function(elem, index, self) {\n        return index == self.indexOf(elem);\n    });\n    for(var i=0;i<unique.length;i++){\n        var count = 0;\n        for(var j=0;j<Input.length;j++){\n            if(unique[i] == Input[j][0]){\n                count++;\n            }\n        }\n        if(count > 1){\n            result.push(unique[i]);\n        }\n    }\n    return result;\n}\nvar Input = [\n    [1,2,3],\n    [4,5,6],\n    [7,8,9],\n    [1,2,3],\n    [4,5,6],\n    [7,8,9]\n];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpti5b9vc7.js:37:10)\n    at Object.<anonymous> (/tmp/tmpti5b9vc7.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var common_first_element = Input[0][0];\n    for(var i=1;i<Input.length;i++){\n        if(Input[i][0] != common_first_element){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp8u4kvxvj.js:16:10)\n    at Object.<anonymous> (/tmp/tmp8u4kvxvj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    Input.forEach(function(item){\n        result.push(item[0]);\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmptjylirqz.js:14:10)\n    at Object.<anonymous> (/tmp/tmptjylirqz.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = false;\n    for(var i=0; i<Input.length; i++){\n        for(var j=0; j<Input.length; j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = true;\n            }\n            else{\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp3n88wgkl.js:26:10)\n    at Object.<anonymous> (/tmp/tmp3n88wgkl.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = 1;\n            }\n            else{\n                flag = 0;\n                break;\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3], [1,2,3], [1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpauhuxc9l.js:27:10)\n    at Object.<anonymous> (/tmp/tmpauhuxc9l.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        result.push(Input[i][0]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpmtd_qlze.js:14:10)\n    at Object.<anonymous> (/tmp/tmpmtd_qlze.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var output = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<output.length;j++){\n            if(Input[i][0] == output[j][0]){\n                flag = 1;\n                output[j].push(Input[i][1]);\n            }\n        }\n        if(flag == 0){\n            output.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return output;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0; i<Input.length; i++){\n        var flag = false;\n        for(var j=0; j<result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push([Input[i][0], Input[i][1]]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var output = [];\n    for(var i=0;i<Input.length;i++){\n        output.push(Input[i][0]);\n    }\n    return output;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpjimsws9l.js:14:10)\n    at Object.<anonymous> (/tmp/tmpjimsws9l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(flag == 0){\n                temp.push(Input[i][j]);\n                flag = 1;\n            }\n            else{\n                if(temp.indexOf(Input[i][j]) == -1){\n                    temp.push(Input[i][j]);\n                }\n            }\n        }\n    }\n    result.push(temp);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y',\n    'z',\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp0satcmzx.js:28:10)\n    at Object.<anonymous> (/tmp/tmp0satcmzx.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y', 'z', 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    Input.forEach(function(element){\n        result.push(element[0]);\n    });\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmptrp9cna6.js:16:10)\n    at Object.<anonymous> (/tmp/tmptrp9cna6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    Input.forEach(function(element) {\n        if(result.indexOf(element[0]) === -1) {\n            result.push(element[0]);\n        }\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpiemeejqu.js:17:10)\n    at Object.<anonymous> (/tmp/tmpiemeejqu.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var first_element = Input[0][0];\n    for(var i=1;i<Input.length;i++){\n        if(first_element != Input[i][0]){\n            return false;\n        }\n    }\n    return true;\n}\nvar Input = [[1,2],[1,3],[1,4]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp7677l_xc.js:17:10)\n    at Object.<anonymous> (/tmp/tmp7677l_xc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        temp.push(Input[i][0]);\n    }\n    for(var i=0;i<temp.length;i++){\n        if(temp.indexOf(temp[i]) == temp.lastIndexOf(temp[i])){\n            result.push(temp[i]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3],[4,5,6],[7,8,9],[1,2,3],[4,5,6],[7,8,9]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpww3sy8vc.js:21:10)\n    at Object.<anonymous> (/tmp/tmpww3sy8vc.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var output = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<output.length;j++){\n            if(Input[i][0] == output[j][0]){\n                output[j].push(Input[i][1]);\n                flag = 1;\n            }\n        }\n        if(flag == 0){\n            output.push(Input[i]);\n        }\n    }\n    return output;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var group = {};\n    for(var i=0;i<Input.length;i++){\n        var key = Input[i][0];\n        if(group[key] == undefined){\n            group[key] = [];\n        }\n        group[key].push(Input[i]);\n    }\n    return group;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  w: [\n    [\n      'w',\n      't'\n    ]\n  ],\n  x: [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpwy90nlup.js:20:10)\n    at Object.<anonymous> (/tmp/tmpwy90nlup.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { x: [ [ 'x', 'y' ], [ 'x', 'z' ] ], w: [ [ 'w', 't' ] ] },\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = Input.reduce(function(prev, curr){\n        if(prev.indexOf(curr[0]) === -1){\n            prev.push(curr[0]);\n        }\n        return prev;\n    }, []);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmplgv_1ydb.js:16:10)\n    at Object.<anonymous> (/tmp/tmplgv_1ydb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push([Input[i][0], Input[i][1]]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = false;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input.length;j++){\n            if(i!=j){\n                if(Input[i][0] == Input[j][0]){\n                    flag = true;\n                }\n            }\n        }\n        if(flag){\n            result.push(Input[i][0]);\n        }\n        flag = false;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpmaiakfop.js:25:10)\n    at Object.<anonymous> (/tmp/tmpmaiakfop.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(i != j && Input[i][0] == Input[j][0]){\n                flag = 1;\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n        flag = 0;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpm_1gwcau.js:24:10)\n    at Object.<anonymous> (/tmp/tmpm_1gwcau.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            temp.push(Input[i][j]);\n        }\n    }\n    var count = 0;\n    for(var i=0;i<temp.length;i++){\n        for(var j=0;j<temp.length;j++){\n            if(temp[i] == temp[j]){\n                count++;\n            }\n        }\n        if(count == Input.length){\n            result.push(temp[i]);\n        }\n        count = 0;\n    }\n    return result;\n}\nvar Input = [[1,2,3,4],[2,3,4,5],[3,4,5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpqbhknpxa.js:30:10)\n    at Object.<anonymous> (/tmp/tmpqbhknpxa.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var key = [];\n    var key_index = 0;\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<key.length;j++){\n            if(Input[i][0] == key[j]){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            key[key_index] = Input[i][0];\n            key_index++;\n        }\n    }\n    for(var i=0;i<key.length;i++){\n        var temp = [];\n        for(var j=0;j<Input.length;j++){\n            if(key[i] == Input[j][0]){\n                temp.push(Input[j]);\n            }\n        }\n        result.push(temp);\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[1,2],[3,4],[5,6],[1,2],[3,4],[5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    [\n      'x',\n      'y'\n    ],\n    [\n      'x',\n      'z'\n    ]\n  ],\n  [\n    [\n      'w',\n      't'\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp4euykc2c.js:36:10)\n    at Object.<anonymous> (/tmp/tmp4euykc2c.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ [ 'x', 'y' ], [ 'x', 'z' ] ], [ [ 'w', 't' ] ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_1 = [];\n    var result_2 = [];\n    var result_3 = [];\n    var result_4 = [];\n    var result_5 = [];\n    var result_6 = [];\n    var result_7 = [];\n    var result_8 = [];\n    var result_9 = [];\n    var result_10 = [];\n    var result_11 = [];\n    var result_12 = [];\n    var result_13 = [];\n    var result_14 = [];\n    var result_15 = [];\n    var result_16 = [];\n    var result_17 = [];\n    var result_18 = [];\n    var result_19 = [];\n    var result_20 = [];\n    var result_21 = [];\n    var result_22 = [];\n    var result_23 = [];\n    var result_24 = [];\n    var result_25 = [];\n    var result_26 = [];\n    var result_27 = [];\n    var result_28 = [];\n    var result_29 = [];\n    var result_30 = [];\n    var result_31 = [];\n    var result_32 = [];\n    var result_33 = [];\n    var result_34 = [];\n    var result_35 = [];\n    var result_36 = [];\n    var result_37 = [];\n    var result_38 = [];\n    var result_39 = [];\n    var result_40 = [];\n    var result_41 = [];\n    var result_42 = [];\n    var result_43 = [];\n    var result_44 = [];\n    var result_45 = [];\n    var result_46 = [];\n    var result_47 = [];\n    var result_48 = [];\n    var result_49 = [];\n    var result_50 = [];\n    var result_51 = [];\n    var result_52 = [];\n    var result_53 = [];\n    var result_54 = [];\n    var result_55 = [];\n    var result_56 = [];\n    var result_57 = [];\n    var result_58 = [];\n    var result_59 = [];\n    var result_60 = [];\n    var result_61 = [];\n    var result_62 = [];\n    var result_63 = [];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "/tmp/tmppfah2e_m.js:78\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = false;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input[i].length; j++){\n            if(result.length == 0){\n                result.push(Input[i][j]);\n            }\n            else{\n                for(var k = 0; k < result.length; k++){\n                    if(result[k] == Input[i][j]){\n                        flag = true;\n                    }\n                }\n                if(flag == false){\n                    result.push(Input[i][j]);\n                }\n                flag = false;\n            }\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3,4,5],[2,3,4,5,6],[3,4,5,6,7],[4,5,6,7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp2d7mmqix.js:32:10)\n    at Object.<anonymous> (/tmp/tmp2d7mmqix.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0; i<Input.length; i++){\n        var flag = false;\n        for(var j=0; j<result.length; j++){\n            if(result[j][0] == Input[i][0]){\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpokcu2doe.js:24:10)\n    at Object.<anonymous> (/tmp/tmpokcu2doe.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var first_element = Input[0][0];\n    for(var i=0;i<Input.length;i++){\n        if(first_element == Input[i][0]){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'x',\n    'z'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp643p5s56.js:18:10)\n    at Object.<anonymous> (/tmp/tmp643p5s56.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'x', 'z' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0; i<Input.length; i++){\n        var flag = true;\n        for(var j=0; j<result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = false;\n            }\n        }\n        if(flag){\n            result.push([Input[i][0], Input[i][1]]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(result[j][0] == Input[i][0]){\n                result[j].push(Input[i][1]);\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(temp.indexOf(Input[i][j]) == -1){\n                temp.push(Input[i][j]);\n            }\n        }\n    }\n    for(var i=0;i<temp.length;i++){\n        var count = 0;\n        for(var j=0;j<Input.length;j++){\n            if(Input[j].indexOf(temp[i]) != -1){\n                count++;\n            }\n        }\n        if(count == Input.length){\n            result.push(temp[i]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3,4,5],[2,3,4,5,6],[3,4,5,6,7],[4,5,6,7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpqdwlepjj.js:31:10)\n    at Object.<anonymous> (/tmp/tmpqdwlepjj.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0; i<Input.length; i++){\n        var flag = false;\n        for(var j=0; j<result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = false;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                flag = true;\n                result[j].push(Input[i][1]);\n            }\n        }\n        if(!flag){\n            result.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i = 0; i < Input.length; i++){\n        temp.push(Input[i][0]);\n    }\n    for(var i = 0; i < temp.length; i++){\n        if(temp.indexOf(temp[i]) == temp.lastIndexOf(temp[i])){\n            result.push(temp[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpwbhh22bh.js:21:10)\n    at Object.<anonymous> (/tmp/tmpwbhh22bh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var keys = [];\n    for (var i = 0; i < Input.length; i++) {\n        var key = Input[i][0];\n        if (keys.indexOf(key) === -1) {\n            keys.push(key);\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[1,2],[5,6],[7,8],[1,2]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp2ill0v1k.js:20:10)\n    at Object.<anonymous> (/tmp/tmp2ill0v1k.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    var count = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = 1;\n                count++;\n            }\n        }\n        if(flag == 1 && count == Input.length){\n            result.push(Input[i][0]);\n        }\n        flag = 0;\n        count = 0;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpa_vyc_lz.js:26:10)\n    at Object.<anonymous> (/tmp/tmpa_vyc_lz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    Input.forEach(function(item){\n        result.push(item[0]);\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpmww9467s.js:15:10)\n    at Object.<anonymous> (/tmp/tmpmww9467s.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        result.push(Input[i][0]);\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpbc0rzrnv.js:15:10)\n    at Object.<anonymous> (/tmp/tmpbc0rzrnv.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(i==0){\n                result[result_index] = Input[i][j];\n                result_index++;\n            }\n            else{\n                for(var k=0;k<result.length;k++){\n                    if(Input[i][j] == result[k]){\n                        flag = 1;\n                        break;\n                    }\n                }\n                if(flag == 0){\n                    result[result_index] = Input[i][j];\n                    result_index++;\n                }\n                flag = 0;\n            }\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3,4],[2,3,4,5],[3,4,5,6],[4,5,6,7]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpspc6zavt.js:36:10)\n    at Object.<anonymous> (/tmp/tmpspc6zavt.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = Input.reduce(function(prev, curr){\n        return (prev.indexOf(curr[0]) === -1) ? prev.concat([curr[0]]) : prev;\n    }, []);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmplikp_pmd.js:14:10)\n    at Object.<anonymous> (/tmp/tmplikp_pmd.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i = 0; i < Input.length; i++){\n        temp = Input[i];\n        for(var j = 0; j < temp.length; j++){\n            if(result.indexOf(temp[j]) == -1){\n                result.push(temp[j]);\n            }\n        }\n    }\n    return result;\n}\n\nvar Input = [['A', 'B', 'C'], ['A', 'B', 'D'], ['A', 'C', 'D'], ['A', 'C', 'E']];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp56w2vsat.js:22:10)\n    at Object.<anonymous> (/tmp/tmp56w2vsat.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var output = [];\n    var temp = [];\n    var flag = false;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(temp.length == 0){\n                temp.push(Input[i][j]);\n            }\n            else{\n                for(var k=0;k<temp.length;k++){\n                    if(Input[i][j] == temp[k]){\n                        flag = true;\n                        break;\n                    }\n                }\n                if(flag == false){\n                    temp.push(Input[i][j]);\n                }\n                else{\n                    flag = false;\n                }\n            }\n        }\n    }\n    output.push(temp);\n    return output;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y',\n    'z',\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpp9kp6c2c.js:36:10)\n    at Object.<anonymous> (/tmp/tmpp9kp6c2c.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y', 'z', 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = 0;\n    for(var i=0; i<Input.length; i++){\n        for(var j=0; j<Input[i].length; j++){\n            if(flag == 0){\n                temp.push(Input[i][j]);\n                flag = 1;\n            }\n            else{\n                if(temp.includes(Input[i][j])){\n                    temp.push(Input[i][j]);\n                }\n            }\n        }\n    }\n    result.push(temp);\n    return result;\n}\nvar Input = [[1,2,3],[4,5,6],[7,8,9],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'x'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpph2njcld.js:28:10)\n    at Object.<anonymous> (/tmp/tmpph2njcld.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'x' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var temp = [];\n    var result = [];\n    var flag = 0;\n    for(let i=0;i<Input.length;i++){\n        temp = Input[i];\n        for(let j=0;j<temp.length;j++){\n            if(temp[j] == temp[j+1]){\n                result.push(temp[j]);\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(-1);\n        }\n        flag = 0;\n    }\n    return result;\n}\nvar Input = [[1,2,3,4],[1,2,3],[1,2,3,4],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -1,\n  -1\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpu0gqpdo_.js:28:10)\n    at Object.<anonymous> (/tmp/tmpu0gqpdo_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -1, -1 ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    Input.forEach(function(element) {\n        result.push(element[0]);\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpqcdffwub.js:15:10)\n    at Object.<anonymous> (/tmp/tmpqcdffwub.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = false;\n        for(var j = 0; j < result.length; j++){\n            if(Input[i][0] == result[j][0]){\n                result[j].push(Input[i][1]);\n                flag = true;\n                break;\n            }\n        }\n        if(!flag){\n            result.push([Input[i][0], Input[i][1]]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var count = 0;\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            for(var k=0;k<Input.length;k++){\n                if(Input[i][j] == Input[k][j]){\n                    count++;\n                }\n            }\n            if(count == Input.length){\n                result.push(Input[i][j]);\n                flag = 1;\n                break;\n            }\n            count = 0;\n        }\n        if(flag == 1){\n            break;\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp3amaqkm3.js:32:10)\n    at Object.<anonymous> (/tmp/tmp3amaqkm3.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        temp = Input[i];\n        for(var j=0;j<temp.length;j++){\n            result.push(temp[j]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3],[4,5,6],[7,8,9]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'x',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp6n0phia6.js:20:10)\n    at Object.<anonymous> (/tmp/tmp6n0phia6.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'x', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = false;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(Input[i][j] == Input[i+1][j]){\n                result.push(Input[i][j]);\n                flag = true;\n                break;\n            }\n        }\n        if(flag == true){\n            break;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpb7jqdm_b.js:25:10)\n    at Object.<anonymous> (/tmp/tmpb7jqdm_b.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var temp = [];\n    var temp_index = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(temp.indexOf(Input[i][j]) == -1){\n                temp[temp_index] = Input[i][j];\n                temp_index++;\n            }\n        }\n    }\n    for(var i=0;i<temp.length;i++){\n        var count = 0;\n        for(var j=0;j<Input.length;j++){\n            if(Input[j].indexOf(temp[i]) != -1){\n                count++;\n            }\n        }\n        if(count == Input.length){\n            result[result_index] = temp[i];\n            result_index++;\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3,4],[2,3,4,5],[3,4,5,6],[4,5,6,7]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp1tmm40_0.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1tmm40_0.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input[i].length; j++){\n            for(var k = 0; k < result.length; k++){\n                if(Input[i][j] == result[k]){\n                    flag = 1;\n                }\n            }\n            if(flag == 0){\n                result[result_index] = Input[i][j];\n                result_index++;\n            }\n            flag = 0;\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2,3],[1,2,3],[1,2,3]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpf0h14h56.js:29:10)\n    at Object.<anonymous> (/tmp/tmpf0h14h56.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(i != j){\n                if(Input[i][0] == Input[j][0]){\n                    flag = 1;\n                }\n                else{\n                    flag = 0;\n                    break;\n                }\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\n\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpj17jzpqy.js:30:10)\n    at Object.<anonymous> (/tmp/tmpj17jzpqy.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(result[j][0] == Input[i][0]){\n                result[j].push(Input[i][1]);\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[1,5],[3,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var keys = [];\n    for (var i = 0; i < Input.length; i++) {\n        if (keys.indexOf(Input[i][0]) === -1) {\n            keys.push(Input[i][0]);\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpe2z1e1st.js:18:10)\n    at Object.<anonymous> (/tmp/tmpe2z1e1st.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var output = [];\n    var temp = [];\n    var flag = 0;\n    var i = 0;\n    var j = 0;\n    for(i=0;i<Input.length;i++){\n        for(j=0;j<Input[i].length;j++){\n            if(temp.length == 0){\n                temp.push(Input[i][j]);\n            }\n            else{\n                for(var k=0;k<temp.length;k++){\n                    if(Input[i][j] == temp[k]){\n                        flag = 1;\n                    }\n                }\n                if(flag == 0){\n                    temp.push(Input[i][j]);\n                }\n                flag = 0;\n            }\n        }\n    }\n    output.push(temp);\n    return output;\n}\n\nvar Input = [[1,2,3],[2,3,4],[3,4,5]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y',\n    'z',\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpgsp5s0cc.js:36:10)\n    at Object.<anonymous> (/tmp/tmpgsp5s0cc.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y', 'z', 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result1 = [];\n    var result2 = [];\n    var result3 = [];\n    var result4 = [];\n    var result5 = [];\n    var result6 = [];\n    var result7 = [];\n    var result8 = [];\n    var result9 = [];\n    var result10 = [];\n    var result11 = [];\n    var result12 = [];\n    var result13 = [];\n    var result14 = [];\n    var result15 = [];\n    var result16 = [];\n    var result17 = [];\n    var result18 = [];\n    var result19 = [];\n    var result20 = [];\n    var result21 = [];\n    var result22 = [];\n    var result23 = [];\n    var result24 = [];\n    var result25 = [];\n    var result26 = [];\n    var result27 = [];\n    var result28 = [];\n    var result29 = [];\n    var result30 = [];\n    var result31 = [];\n    var result32 = [];\n    var result33 = [];\n    var result34 = [];\n    var result35 = [];\n    var result36 = [];\n    var result37 = [];\n    var result38 = [];\n    var result39 = [];\n    var result40 = [];\n    var result41 = [];\n    var result42 = [];\n    var result43 = [];\n    var result44 = [];\n    var result45 = [];\n    var result46 = [];\n    var result47 = [];\n    var result48 = [];\n    var result49 = [];\n    var result50 = [];\n    var result51 = [];\n    var result52 = [];\n    var result53 = [];\n    var result54 = [];\n    var result55 = [];\n    var result56 = [];\n    var result57 = [];\n    var result58 = [];\n    var result59 = [];\n    var result60 = [];\n    var result61 = [];\n    var result62 = [];\n    var result63 = [];\n    var result64 = [];\n    var result65 = [];\n    var result66 = [];\n    var result67 = [];\n    var result68 = [];\n    var result69 = [];\n    var result70 = [];\n    var result71 = [];\n    var result72 = [];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122818,
      "stdout": "",
      "stderr": "/tmp/tmp63xsi1vb.js:87\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_1 = [];\n    var result_2 = [];\n    var result_3 = [];\n    var result_4 = [];\n    var result_5 = [];\n    var result_6 = [];\n    var result_7 = [];\n    var result_8 = [];\n    var result_9 = [];\n    var result_10 = [];\n    var result_11 = [];\n    var result_12 = [];\n    var result_13 = [];\n    var result_14 = [];\n    var result_15 = [];\n    var result_16 = [];\n    var result_17 = [];\n    var result_18 = [];\n    var result_19 = [];\n    var result_20 = [];\n    var result_21 = [];\n    var result_22 = [];\n    var result_23 = [];\n    var result_24 = [];\n    var result_25 = [];\n    var result_26 = [];\n    var result_27 = [];\n    var result_28 = [];\n    var result_29 = [];\n    var result_30 = [];\n    var result_31 = [];\n    var result_32 = [];\n    var result_33 = [];\n    var result_34 = [];\n    var result_35 = [];\n    var result_36 = [];\n    var result_37 = [];\n    var result_38 = [];\n    var result_39 = [];\n    var result_40 = [];\n    var result_41 = [];\n    var result_42 = [];\n    var result_43 = [];\n    var result_44 = [];\n    var result_45 = [];\n    var result_46 = [];\n    var result_47 = [];\n    var result_48 = [];\n    var result_49 = [];\n    var result_50 = [];\n    var result_51 = [];\n    var result_52 = [];\n    var result_53 = [];\n    var result_54 = [];\n    var result_55 = [];\n    var result_56 = [];\n    var result_57 = [];\n    var result_58 = [];\n    var result_59 = [];\n    var result_60 = [];\n    var result_61 = [];\n    var result_62 = [];\n    var result_63 = [];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "/tmp/tmppfah2e_m.js:78\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    Input.forEach(function(element){\n        var found = false;\n        for(var i=0; i<result.length; i++){\n            if(result[i][0] == element[0]){\n                result[i].push(element[1]);\n                found = true;\n                break;\n            }\n        }\n        if(!found){\n            result.push([element[0], element[1]]);\n        }\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        result.push(Input[i][0]);\n    }\n    return result;\n}\n\nvar Input = [['a', 'b', 'c'], ['a', 'b', 'd'], ['a', 'b', 'e']];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpxr3b0pz8.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxr3b0pz8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var result_index_inner = 0;\n    var flag = 0;\n    for(var i=0; i<Input.length; i++){\n        for(var j=0; j<Input[i].length; j++){\n            if(i==0){\n                result[result_index] = [];\n                result[result_index][result_index_inner] = Input[i][j];\n                result_index_inner++;\n            }\n            else{\n                for(var k=0; k<result.length; k++){\n                    if(Input[i][j] == result[k][0]){\n                        flag = 1;\n                        break;\n                    }\n                }\n                if(flag == 0){\n                    result[result_index] = [];\n                    result[result_index][result_index_inner] = Input[i][j];\n                    result_index_inner++;\n                }\n                flag = 0;\n            }\n        }\n        result_index++;\n        result_index_inner = 0;\n    }\n    return result;\n}\n\nvar Input = [[1,2,3], [1,2,3,4], [1,2,3,4,5]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    <1 empty item>,\n    'y'\n  ],\n  [\n    <1 empty item>,\n    'z'\n  ],\n  [\n    <1 empty item>,\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpxs3_6ijo.js:41:10)\n    at Object.<anonymous> (/tmp/tmpxs3_6ijo.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ <1 empty item>, 'y' ],\n    [ <1 empty item>, 'z' ],\n    [ <1 empty item>, 't' ]\n  ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0; i<Input.length; i++){\n        result.push(Input[i][0]);\n    }\n    return result;\n}\n\nvar Input = [['a', 'b', 'c'], ['a', 'b', 'c'], ['a', 'b', 'c']];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp46m1c5ix.js:16:10)\n    at Object.<anonymous> (/tmp/tmp46m1c5ix.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(flag == 0){\n                temp.push(Input[i][j]);\n                flag = 1;\n            }\n            else{\n                if(temp.includes(Input[i][j])){\n                    temp.push(Input[i][j]);\n                }\n            }\n        }\n    }\n    for(var i=0;i<temp.length;i++){\n        if(temp[i] == temp[i+1]){\n            result.push(temp[i]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3,4],[2,3,4,5],[3,4,5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpain58rzl.js:32:10)\n    at Object.<anonymous> (/tmp/tmpain58rzl.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i = 0; i < Input.length; i++){\n        var flag = 0;\n        for(var j = 0; j < result.length; j++){\n            if(result[j][0] == Input[i][0]){\n                flag = 1;\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\n\nvar Input = [\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,2,3],\n    [1,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "/tmp/tmpd9soamop.js:64\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var output = [];\n    var output_index = 0;\n    var output_index_inner = 0;\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input[i].length; j++){\n            if(i == 0){\n                output[output_index] = [];\n                output[output_index][output_index_inner] = Input[i][j];\n                output_index_inner++;\n            }\n            else{\n                for(var k = 0; k < output.length; k++){\n                    for(var l = 0; l < output[k].length; l++){\n                        if(Input[i][j] == output[k][l]){\n                            flag = 1;\n                            break;\n                        }\n                    }\n                    if(flag == 1){\n                        break;\n                    }\n                }\n                if(flag == 0){\n                    output[output_index][output_index_inner] = Input[i][j];\n                    output_index_inner++;\n                }\n                flag = 0;\n            }\n        }\n        output_index++;\n        output_index_inner = 0;\n    }\n    return output;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "/tmp/tmp__yme_nq.js:27\n                    output[output_index][output_index_inner] = Input[i][j];\n                                                             ^\n\nTypeError: Cannot set properties of undefined (setting '0')\n    at group_tuples (/tmp/tmp__yme_nq.js:27:62)\n    at test (/tmp/tmp__yme_nq.js:44:20)\n    at Object.<anonymous> (/tmp/tmp__yme_nq.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    Input.forEach(function(item){\n        var found = false;\n        for(var i=0; i<result.length; i++){\n            if(result[i][0] == item[0]){\n                result[i].push(item[1]);\n                found = true;\n                break;\n            }\n        }\n        if(!found){\n            result.push([item[0], item[1]]);\n        }\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var flag = 0;\n    for(var i = 0; i < Input.length; i++){\n        for(var j = 0; j < Input.length; j++){\n            if(Input[i][0] == Input[j][0]){\n                flag = 1;\n            }\n            else{\n                flag = 0;\n                break;\n            }\n        }\n        if(flag == 1){\n            result.push(Input[i][0]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpktpmgh8i.js:26:10)\n    at Object.<anonymous> (/tmp/tmpktpmgh8i.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var result_index = 0;\n    var result_flag = false;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            if(result.length == 0){\n                result[result_index] = Input[i][j];\n                result_index++;\n            }\n            else{\n                for(var k=0;k<result.length;k++){\n                    if(result[k] == Input[i][j]){\n                        result_flag = true;\n                    }\n                }\n                if(result_flag == false){\n                    result[result_index] = Input[i][j];\n                    result_index++;\n                }\n                result_flag = false;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp8tm71_ab.js:34:10)\n    at Object.<anonymous> (/tmp/tmp8tm71_ab.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        result.push(Input[i][0]);\n    }\n    return result;\n}\nvar Input = [['a', 'b', 'c'], ['a', 'b', 'd'], ['a', 'b', 'e']];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp6sgbyows.js:15:10)\n    at Object.<anonymous> (/tmp/tmp6sgbyows.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for(var i=0;i<Input.length;i++){\n        var flag = 0;\n        for(var j=0;j<result.length;j++){\n            if(Input[i][0] == result[j][0]){\n                flag = 1;\n                result[j].push(Input[i][1]);\n                break;\n            }\n        }\n        if(flag == 0){\n            result.push([Input[i][0],Input[i][1]]);\n        }\n    }\n    return result;\n}\nvar Input = [[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8],[1,2],[3,4],[5,6],[7,8]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var group = [];\n    for(var i=0;i<Input.length;i++){\n        if(group.indexOf(Input[i][0])==-1){\n            group.push(Input[i][0]);\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpv8z_yvy7.js:18:10)\n    at Object.<anonymous> (/tmp/tmpv8z_yvy7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    var flag = 0;\n    for(var i=0;i<Input.length;i++){\n        for(var j=0;j<Input[i].length;j++){\n            flag = 0;\n            for(var k=0;k<result.length;k++){\n                if(result[k] == Input[i][j]){\n                    flag = 1;\n                    break;\n                }\n            }\n            if(flag == 0){\n                result.push(Input[i][j]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp09b1c5gr.js:28:10)\n    at Object.<anonymous> (/tmp/tmp09b1c5gr.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var count = 0;\n    for(var i=0; i<Input.length; i++){\n        for(var j=0; j<Input.length; j++){\n            if(Input[i][0] == Input[j][0]){\n                count++;\n            }\n        }\n        if(count == Input.length){\n            result.push(Input[i][0]);\n        }\n        count = 0;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpt2p86ek0.js:23:10)\n    at Object.<anonymous> (/tmp/tmpt2p86ek0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    Input.forEach(function(element) {\n        result.push(element[0]);\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x',\n  'w'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp7nomku3m.js:14:10)\n    at Object.<anonymous> (/tmp/tmp7nomku3m.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x', 'w' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var i;\n    var j;\n    for(i=0;i<Input.length;i++){\n        for(j=0;j<Input[i].length;j++){\n            if(result.indexOf(Input[i][j])==-1){\n                result.push(Input[i][j]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpzzj1hrwm.js:21:10)\n    at Object.<anonymous> (/tmp/tmpzzj1hrwm.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var temp = [];\n    for(var i=0;i<Input.length;i++){\n        temp = Input[i];\n        for(var j=0;j<temp.length;j++){\n            if(result.indexOf(temp[j]) == -1){\n                result.push(temp[j]);\n            }\n        }\n    }\n    return result;\n}\nvar Input = [[1,2,3],[2,3,4],[3,4,5],[4,5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'y',\n  'z',\n  'w',\n  't'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpumtu29rn.js:21:10)\n    at Object.<anonymous> (/tmp/tmpumtu29rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'y', 'z', 'w', 't' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    for (var i = 0; i < Input.length; i++) {\n        var flag = false;\n        for (var j = 0; j < result.length; j++) {\n            if (result[j][0] == Input[i][0]) {\n                flag = true;\n                break;\n            }\n        }\n        if (!flag) {\n            result.push(Input[i]);\n        }\n    }\n    return result;\n}\nvar Input = [\n    [1, 2],\n    [3, 4],\n    [1, 2],\n    [5, 6],\n    [7, 8],\n    [1, 2],\n    [3, 4],\n    [3, 4],\n    [7, 8],\n    [9, 10]\n];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'x',\n    'y'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmp7etjkjwk.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7etjkjwk.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'x', 'y' ], [ 'w', 't' ] ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find common first element in given list of tuple.\nfunction group_tuples(Input){\n    var result = [];\n    var first_element = [];\n    for(var i=0;i<Input.length;i++){\n        first_element.push(Input[i][0]);\n    }\n    for(var i=0;i<first_element.length;i++){\n        var count = 0;\n        for(var j=0;j<first_element.length;j++){\n            if(first_element[i] == first_element[j]){\n                count++;\n            }\n        }\n        if(count>1){\n            result.push(first_element[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = group_tuples;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"x\", \"z\"], [\"w\", \"t\"]]),[[\"x\", \"y\", \"z\"], [\"w\", \"t\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"a\", \"c\"], [\"d\", \"e\"]]),[[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]);\n  assert.deepEqual(candidate([[\"f\", \"g\"], [\"f\", \"g\"], [\"h\", \"i\"]]),[[\"f\", \"g\", \"g\"], [\"h\", \"i\"]]);\n}\n\ntest();",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  'x'\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'x',\n    'y',\n    'z'\n  ],\n  [\n    'w',\n    't'\n  ]\n]\n    at test (/tmp/tmpfelfrtif.js:26:10)\n    at Object.<anonymous> (/tmp/tmpfelfrtif.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', 'x' ],\n  expected: [ [ 'x', 'y', 'z' ], [ 'w', 't' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_460_Extract",
  "language": "js",
  "prompt": "//Write a python function to get the first element of each sublist.\nfunction Extract(lst){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_460_Extract.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Extract;\n  assert.deepEqual(candidate([[1, 2], [3, 4, 5], [6, 7, 8, 9]]),[1, 3, 6]);\n  assert.deepEqual(candidate([[1, 2, 3], [4, 5]]),[1, 4]);\n  assert.deepEqual(candidate([[9, 8, 1], [1, 2]]),[9, 1]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var result = [];\n    for (var i in lst) {\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var res = [];\n    for (var i = 0; i < lst.length; i++){\n        res.push(lst[i][0]);\n    }\n    return res;\n}\n",
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var res = [];\n    for (var i = 0; i < lst.length; i++) {\n        res.push(lst[i][0]);\n    }\n    return res;\n}\n",
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\n",
    "    var res = [];\n    for(var i=0;i<lst.length;i++){\n        res.push(lst[i][0]);\n    }\n    return res;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var result = [];\n    for (var i in lst) {\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];",
    "    var new_lst = [];\n    for (var i=0; i < lst.length; i++){\n        new_lst.push(lst[i][0]);\n    }\n    return new_lst;\n}\nExtract([[1,2,3],[4,5,6],[7,8,9]]);\n",
    "    var result = [];\n    for (var i = 0; i < lst.length; i++){\n        result.push(lst[i][0]);\n    }\n    return result;\n}\nvar lst = [[1,2,3],[4,5,6],[7,8,9]];"
  ]
}
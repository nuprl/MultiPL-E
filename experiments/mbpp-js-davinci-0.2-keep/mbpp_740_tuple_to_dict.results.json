{
  "name": "mbpp_740_tuple_to_dict",
  "language": "js",
  "prompt": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_740_tuple_to_dict.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        res_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return res_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {}; \n    var i; \n    for (i = 0; i < test_tup.length; i += 2) { \n        res_dict[test_tup[i]] = test_tup[i + 1]; \n    } \n    return res_dict; \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\nvar test_tup = ('a', 1, 'b', 2, 'c', 3);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2){\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        dict[test_tup[i][0]] = test_tup[i][1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  undefined: undefined\n}\n\nshould loosely deep-equal\n\n{\n  '1': 5,\n  '13': 5,\n  '7': 10\n}\n    at test (/tmp/tmp6evv7813.js:15:10)\n    at Object.<anonymous> (/tmp/tmp6evv7813.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { undefined: undefined },\n  expected: { '1': 5, '7': 10, '13': 5 },\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {}\n    for(var i=0; i<test_tup.length; i=i+2){\n        dict[test_tup[i]] = test_tup[i+1]\n    }\n    return dict\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        test_dict[test_tup[i][0]] = test_tup[i][1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  undefined: undefined\n}\n\nshould loosely deep-equal\n\n{\n  '1': 5,\n  '13': 5,\n  '7': 10\n}\n    at test (/tmp/tmpuasmofv3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpuasmofv3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { undefined: undefined },\n  expected: { '1': 5, '7': 10, '13': 5 },\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {};\n    var i;\n    for (i = 0; i < test_tup.length; i++){\n        res_dict[test_tup[i][0]] = test_tup[i][1];\n    }\n    return res_dict;\n}\n\nvar test_tup = [(\"Akash\", 10), (\"Gaurav\", 12), (\"Anand\", 14), (\"Suraj\", 20), (\"Akash\", 25), (\"Gaurav\", 30)];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  undefined: undefined\n}\n\nshould loosely deep-equal\n\n{\n  '1': 5,\n  '13': 5,\n  '7': 10\n}\n    at test (/tmp/tmpckq19z16.js:17:10)\n    at Object.<anonymous> (/tmp/tmpckq19z16.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { undefined: undefined },\n  expected: { '1': 5, '7': 10, '13': 5 },\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        test_dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2){\n        res_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return res_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        if(i % 2 == 0){\n            dict[test_tup[i]] = test_tup[i+1];\n        }\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0;i<test_tup.length;i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        res_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return res_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {}; \n    for (var i = 0; i < test_tup.length; i += 2) { \n        dict[test_tup[i]] = test_tup[i + 1]; \n    } \n    return dict; \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        res_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return res_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0;i<test_tup.length;i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2){\n        res_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return res_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nvar test_tup = ('a', 1, 'b', 2, 'c', 3);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\nvar test_tup = ('a', 1, 'b', 2);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        dict[test_tup[i][0]] = test_tup[i][1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  undefined: undefined\n}\n\nshould loosely deep-equal\n\n{\n  '1': 5,\n  '13': 5,\n  '7': 10\n}\n    at test (/tmp/tmp6evv7813.js:15:10)\n    at Object.<anonymous> (/tmp/tmp6evv7813.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { undefined: undefined },\n  expected: { '1': 5, '7': 10, '13': 5 },\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i++) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n        i++;\n    }\n    return test_dict;\n}\nvar test_tup = [(\"Akash\", 10), (\"Gaurav\", 12), (\"Anand\", 14), (\"Suraj\", 20), (\"Akash\", 25), (\"Gaurav\", 30), (\"Amit\", 40)];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        test_dict[test_tup[i][0]] = test_tup[i][1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  undefined: undefined\n}\n\nshould loosely deep-equal\n\n{\n  '1': 5,\n  '13': 5,\n  '7': 10\n}\n    at test (/tmp/tmpuasmofv3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpuasmofv3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { undefined: undefined },\n  expected: { '1': 5, '7': 10, '13': 5 },\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    var key = \"\";\n    var value = \"\";\n    for(var i = 0; i < test_tup.length; i++){\n        if(i % 2 == 0){\n            key = test_tup[i];\n        }\n        else{\n            value = test_tup[i];\n            dict[key] = value;\n        }\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nvar test_tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i++) {\n        dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    var i;\n    for(i=0;i<test_tup.length;i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {}\n    for (var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1]\n    }\n    return dict\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0;i<test_tup.length;i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0;i<test_tup.length;i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {}\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1]\n    }\n    return dict\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        res_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return res_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        dict[test_tup[i][0]] = test_tup[i][1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  undefined: undefined\n}\n\nshould loosely deep-equal\n\n{\n  '1': 5,\n  '13': 5,\n  '7': 10\n}\n    at test (/tmp/tmp6evv7813.js:15:10)\n    at Object.<anonymous> (/tmp/tmp6evv7813.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { undefined: undefined },\n  expected: { '1': 5, '7': 10, '13': 5 },\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0;i<test_tup.length;i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i++) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n        i++;\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {}; \n    for (var i = 0; i < test_tup.length; i += 2){ \n        res_dict[test_tup[i]] = test_tup[i + 1]; \n    } \n    return res_dict; \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\nvar test_tup = (1, 2, 3, 4, 5, 6);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i++){\n        if(i % 2 == 0){\n            dict[test_tup[i]] = test_tup[i+1];\n        }\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i=i+2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\nvar test_tup = [(\"akash\", 10), (\"gaurav\", 12), (\"anand\", 14),\n                (\"suraj\", 20), (\"akhil\", 25), (\"ashish\", 30)];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i += 2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {};\n    for (var i = 0; i < test_tup.length; i+=2){\n        res_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return res_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var dict = {};\n    for(var i = 0; i < test_tup.length; i+=2){\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for(var i=0; i<test_tup.length; i+=2){\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var res_dict = {}; \n    for (var i = 0; i < test_tup.length; i += 2) \n        res_dict[test_tup[i]] = test_tup[i + 1]; \n    return res_dict; \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict(test_tup){\n    var test_dict = {};\n    for (var i = 0; i < test_tup.length; i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tuple_to_dict;\n  assert.deepEqual(candidate([1, 5, 7, 10, 13, 5]),{1: 5, 7: 10, 13: 5});\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),{1: 2, 3: 4, 5: 6});\n  assert.deepEqual(candidate([7, 8, 9, 10, 11, 12]),{7: 8, 9: 10, 11: 12});\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
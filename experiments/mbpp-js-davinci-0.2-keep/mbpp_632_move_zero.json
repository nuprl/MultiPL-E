{
  "name": "mbpp_632_move_zero",
  "language": "js",
  "prompt": "//Write a python function to move all zeroes to the end of the given list.\nfunction move_zero(num_list){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_zero;\n  assert.deepEqual(candidate([1, 0, 2, 0, 3, 4]),[1, 2, 3, 4, 0, 0]);\n  assert.deepEqual(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]),[2, 3, 2, 4, 5, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([0, 1, 0, 1, 1]),[1, 1, 1, 0, 0]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var a = [], b = [], prev;\n    num_list.sort();\n    for ( var i = 0; i < num_list.length; i++ ) {\n        if ( num_list[i] === 0 ) b.push(num_list[i]);\n        else a.push(num_list[i]);\n    }\n    return a.concat(b);\n}",
    "    l = []\n    for i in num_list:\n        if i != 0:\n            l.append(i)\n    for i in num_list:\n        if i == 0:\n            l.append(i)\n    return(l)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n",
    "    a = [0 for i in range(num_list.count(0))]\n    x = [ i for i in num_list if i != 0]\n    x.extend(a)\n    return(x)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n\n#Write a python function to calculate the sum of the digits of a given number.\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\nprint(sum_digits(123))\n\n#Write a python function to find the maximum and minimum numbers from a sequence of numbers.\ndef max_min(data):\n    l = data[0]\n    s = data[0]\n    for num in data:\n        if num> l:\n            l = num\n        elif num< s:\n            s = num\n    return l,s\nprint(max_min([0,10,-2,3,-5,7]))\n\n#Write a python function to find the median of three values.\ndef median(lst):\n    sortedLst = sorted(lst)\n    lstLen = len(lst)\n    index = (lstLen - 1) // 2\n\n    if (lstLen % 2):\n        return sortedLst[index]\n    else:\n        return (sortedLst[index] + sortedLst[index + 1])/2.0\nprint(median([1,2,3]))\nprint(median([1,2,3,4]))\nprint(median([53, 12, 65, 7, 420, 317, 88]))\n\n#Write a python function to find the maximum 3 numbers from a given sequence of numbers.\ndef max_of_two( x, y ):\n    if x > y:\n        return x\n    return y\ndef max_of_three( x, y, z",
    "    a = [0 for i in range(num_list.count(0))]\n    x = [ i for i in num_list if i != 0]\n    x.extend(a)\n    return(x)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n\n#Write a python function to find the maximum and minimum numbers from a sequence of numbers.\ndef max_min(data):\n    l = data[0]\n    s = data[0]\n    for num in data:\n        if num> l:\n            l = num\n        elif num< s:\n            s = num\n    return l,s\nprint(max_min([0,10,-2,30,5,6]))\n\n#Write a python function to find the sum of squares of all numbers in a given list.\ndef squaresum(n) :\n    sm = 0\n    for i in range(1, n+1) :\n        sm = sm + (i * i)\n    return sm\nn = 4\nprint(squaresum(n))\n\n#Write a python function to find the sum of all even numbers in a given list.\ndef sum_even(data):\n    sum = 0\n    for num in data:\n        if num % 2 == 0:\n            sum += num\n    return sum\nprint(sum_even([1,2,3,4,5,6,7,8,9]))\n\n#Write a python function to find the sum of all odd numbers in a given list.\ndef sum_odd(data):\n    sum = 0\n    for num in data:\n        if num % 2 != 0:\n            sum += num\n    return sum\nprint(sum_odd([1,2,3,4,5,6,7,8,9]))\n\n#Write a python function to find the product of all numbers in a given list.\ndef product(data):\n    p = 1\n    for num",
    "    var a = [], b = [], prev;\n    num_list.sort();\n    for ( var i = 0; i < num_list.length; i++ ) {\n        if ( num_list[i] === 0 ) b.push(num_list[i]);\n        else a.push(num_list[i]);\n    }\n    return a.concat(b);\n}",
    "    a = [0 for i in range(num_list.count(0))]\n    x = [ i for i in num_list if i != 0]\n    x.extend(a)\n    return(x)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n\n#Write a python function to find the maximum and minimum numbers from a sequence of numbers.\ndef max_min(data):\n    l = data[0]\n    s = data[0]\n    for num in data:\n        if num> l:\n            l = num\n        elif num< s:\n            s = num\n    return l,s\nprint(max_min([0,10,-2,30,5,6]))\n\n#Write a python function to find the sum of squares of all numbers in a given list.\ndef squaresum(nums):\n    sum = 0\n    for i in nums:\n        sum = sum + (i*i)\n    return sum\nprint(squaresum([1,2,3,4,5]))\nprint(squaresum([6,7,8,9,10]))\n\n#Write a python function to find the second largest number in a given list.\ndef second_largest(data):\n    data.sort()\n    return data[-2]\nprint(second_largest([1,2,3,4,5]))\nprint(second_largest([6,7,8,9,10]))\n\n#Write a python function to find the second lowest number in a given list.\ndef second_lowest(data):\n    data.sort()\n    return data[1]\nprint(second_lowest([1,2,3,4,5]))\nprint(second_lowest([6,7,8,9,10]))\n\n#Write a python function to find the second smallest number in a given list.\ndef second_smallest(data):\n    data.",
    "    var a = [], b = [], prev;\n    num_list.sort();\n    for ( var i = 0; i < num_list.length; i++ ) {\n        if ( num_list[i] === 0 ) b.push(num_list[i]);\n        else a.push(num_list[i]);\n    }\n    return a.concat(b);\n}",
    "    a = [0 for i in range(num_list.count(0))]\n    x = [ i for i in num_list if i != 0]\n    x.extend(a)\n    return(x)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n\n#Write a python function to find the maximum and minimum numbers from a sequence of numbers.\ndef max_min(data):\n    l = data[0]\n    s = data[0]\n    for num in data:\n        if num> l:\n            l = num\n        elif num< s:\n            s = num\n    return l,s\nprint(max_min([0,10,-2,30,5,6]))\n\n#Write a python function to find the sum of squares of all numbers in a given list.\ndef squaresum(n):\n    sum = 0\n    for i in n:\n        sum = sum + (i*i)\n    return sum\nprint(squaresum([1,2,3]))\nprint(squaresum([1,3,5,7]))\n\n#Write a python function to take a list of words and return the length of the longest one.\ndef find_longest_word(words_list):\n    word_len = []\n    for n in words_list:\n        word_len.append((len(n), n))\n    word_len.sort()\n    return word_len[-1][1]\nprint(find_longest_word([\"PHP\", \"Exercises\", \"Backend\"]))\n\n#Write a python function to take a list of words and return the length of the longest one.\ndef find_longest_word(words_list):\n    word_len = []\n    for n in words_list:\n        word_len.append((len(n), n))\n    word_len.sort()\n    return word_len[-1][1",
    "    var a = [], b = [], prev;\n    num_list.sort();\n    for ( var i = 0; i < num_list.length; i++ ) {\n        if ( num_list[i] === 0 ) b.push(num_list[i]);\n        else a.push(num_list[i]);\n    }\n    return a.concat(b);\n}",
    "    a = [0 for i in range(num_list.count(0))]\n    x = [ i for i in num_list if i != 0]\n    x.extend(a)\n    return(x)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n\n#Write a python function to multiply all the numbers in the given list.\ndef multiply(numbers):\n    total = numbers[0]\n    for x in numbers:\n        total *= x\n    return total\nprint(multiply((8, 2, 3, -1, 7)))\n\n#Write a python function to find the second largest number in the given list.\ndef second_largest(numbers):\n    if (len(numbers)<2):\n        return\n    if ((len(numbers)==2)  and (numbers[0] == numbers[1]) ):\n        return\n    dup_items = set()\n    uniq_items = []\n    for x in numbers:\n        if x not in dup_items:\n            uniq_items.append(x)\n            dup_items.add(x)\n    uniq_items.sort()\n    return  uniq_items[-2]\nprint(second_largest([1, 2, 3, 4, 4]))\nprint(second_largest([1, 1, 1, 0, 0]))\nprint(second_largest([1, 1, 3, 3, 3]))\nprint(second_largest([1, 2, 3, 4, 5]))\n\n#Write a python function to find the second lowest number in the given list.\ndef second_smallest(numbers):\n    if (len(numbers)<2):\n        return\n    if ((len(numbers)==2)  and (numbers[0] == numbers[1]) ):\n        return\n    dup_items = set()\n    uniq_items = []\n    for x in numbers:",
    "    var a = [], b = [], prev;\n    num_list.sort();\n    for ( var i = 0; i < num_list.length; i++ ) {\n        if ( num_list[i] === 0 ) b.push(num_list[i]);\n        else a.push(num_list[i]);\n    }\n    return a.concat(b);\n}",
    "    l = []\n    for i in num_list:\n        if i != 0:\n            l.append(i)\n    return l + [0] * num_list.count(0)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n\n#Write a python function to find the maximum and minimum numbers from a sequence of numbers.\ndef max_min(data):\n    l = data[0]\n    s = data[0]\n    for num in data:\n        if num> l:\n            l = num\n        elif num< s:\n            s = num\n    return l,s\nprint(max_min([0,10,-2,30,5,6]))\n\n#Write a python function to find the sum of squares of all numbers in a given list.\ndef squaresum(nums):\n    sum = 0\n    for i in nums:\n        sum = sum + (i*i)\n    return sum\nprint(squaresum([1,2,3,4,5]))\nprint(squaresum([6,7,8,9,10]))\n\n#Write a python function to check whether a given number is perfect or not.\n#According to Wikipedia : In number theory, a perfect number is a positive integer that is equal to the sum of its proper positive divisors, that is, the sum of its positive divisors excluding the number itself (also known as its aliquot sum). Equivalently, a perfect number is a number that is half the sum of all of its positive divisors (including itself).\n#Example : The first perfect number is 6, because 1, 2, and 3 are its proper positive divisors, and 1 + 2 + 3 = 6. Equivalently, the number 6 is equal to half the sum of all its positive divisors: ( 1 + 2 + 3 + 6 ) / 2 = 6. The next perfect number is 28 = 1 + 2 + 4 + 7 + 14. This is followed",
    "    l = []\n    for i in num_list:\n        if i != 0:\n            l.append(i)\n    for i in num_list:\n        if i == 0:\n            l.append(i)\n    return(l)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]))\nprint(move_zero([1,2,3]))\n\n#Write a python function to calculate the sum of the digits of a given number.\ndef sum_digits(n):\n    sum = 0\n    while n:\n        sum += n % 10\n        n //= 10\n    return sum\nprint(sum_digits(123))\n\n#Write a python function to find the maximum and minimum numbers from a sequence of numbers.\ndef max_min(data):\n    l = data[0]\n    s = data[0]\n    for num in data:\n        if num> l:\n            l = num\n        elif num< s:\n            s = num\n    return l,s\nprint(max_min([0,10,-2,30,5,6]))\n\n#Write a python function to find the median of three values.\ndef median(l):\n    l.sort()\n    if len(l) % 2 == 0:\n        median1 = l[len(l)//2]\n        median2 = l[len(l)//2 - 1]\n        median = (median1 + median2)/2\n    else:\n        median = l[len(l)//2]\n    return median\nprint(median([1,2,3]))\nprint(median([1,2,3,4]))\nprint(median([53, 12, 65, 7, 420, 317, 88]))\n\n#Write a python function to find the maximum length of consecutive 0\u2019s in a given binary string.\ndef max_consecutive_",
    "    l = []\n    for i in num_list:\n        if i != 0:\n            l.append(i)\n    return l+[0]*num_list.count(0)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n\n#Write a python function to find the maximum number from the given list of numbers.\ndef max_num_in_list( list ):\n    max = list[ 0 ]\n    for a in list:\n        if a > max:\n            max = a\n    return max\nprint(max_num_in_list([1, 2, -8, 0]))\n\n#Write a python function to find the minimum number from the given list of numbers.\ndef min_num_in_list( list ):\n    min = list[ 0 ]\n    for a in list:\n        if a < min:\n            min = a\n    return min\nprint(min_num_in_list([1, 2, -8, 0]))\n\n#Write a python function to find the sum of all the elements of the given list.\ndef sum_list(items):\n    sum_numbers = 0\n    for x in items:\n        sum_numbers += x\n    return sum_numbers\nprint(sum_list([1,2,-8]))\n\n#Write a python function to multiply all the elements of the given list.\ndef multiply_list(items):\n    tot = 1\n    for x in items:\n        tot *= x\n    return tot\nprint(multiply_list([1,2,-8]))\n\n#Write a python function to find the second largest number from the given list of numbers.\ndef second_largest(numbers):\n    if (len(numbers)<2):\n        return\n    if ((len(numbers)==2)  and (numbers[0] == numbers[1]) ):\n        return\n    dup_items = set()\n    uniq",
    "    var a = [], b = [], prev;\n    \n    num_list.sort();\n    for ( var i = 0; i < num_list.length; i++ ) {\n        if ( num_list[i] === 0 || num_list[i] === prev ) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n        prev = num_list[i];\n    }\n\n    return b.concat(a);\n}",
    "    a = [0 for i in range(num_list.count(0))]\n    x = [ i for i in num_list if i != 0]\n    x.extend(a)\n    return(x)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n\n#Write a python function to calculate the sum of the digits of a given number.\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\nprint(sum_digits(123))\n\n#Write a python function to calculate the product of the digits of a given number.\ndef product(n):\n    p = 1\n    while n:\n        p *= n % 10\n        n //= 10\n    return p\nprint(product(123))\n\n#Write a python function to find the maximum number from the given list of numbers.\ndef max_num_in_list( list ):\n    max = list[ 0 ]\n    for a in list:\n        if a > max:\n            max = a\n    return max\nprint(max_num_in_list([1, 2, -8, 0]))\n\n#Write a python function to find the minimum number from the given list of numbers.\ndef min_num_in_list( list ):\n    min = list[ 0 ]\n    for a in list:\n        if a < min:\n            min = a\n    return min\nprint(min_num_in_list([1, 2, -8, 0]))\n\n#Write a python function to find the second largest number from the given list of numbers.\ndef second_largest(list):\n    list.sort()\n    return list[-2]\nprint(second_largest([1, 2, -8, -2, 0]))\n\n#Write a python function to find the second smallest number from the given list of numbers.\ndef second_smallest(",
    "    var a = [], b = [], prev;\n    \n    num_list.sort();\n    for ( var i = 0; i < num_list.length; i++ ) {\n        if ( num_list[i] === prev ) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n        prev = num_list[i];\n    }\n    return b.concat(a);\n}",
    "    l = []\n    for i in num_list:\n        if i != 0:\n            l.append(i)\n    return l + [0] * num_list.count(0)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n",
    "    a = [0 for i in range(num_list.count(0))]\n    x = [ i for i in num_list if i != 0]\n    x.extend(a)\n    return(x)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n\n#Write a python function to calculate the factorial of a number (a non-negative integer).\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\nn=int(input(\"Input a number to compute the factiorial : \"))\nprint(factorial(n))\n\n#Write a python function to check whether a number is perfect or not.\ndef is_perfect(n):\n    sum = 0\n    for x in range(1, n):\n        if n % x == 0:\n            sum += x\n    return sum == n\nprint(is_perfect(6))\n\n#Write a python function to check whether a given string is palindrome or not.\ndef isPalindrome(string):\n\tleft_pos = 0\n\tright_pos = len(string) - 1\n\t\n\twhile right_pos >= left_pos:\n\t\tif not string[left_pos] == string[right_pos]:\n\t\t\treturn False\n\t\tleft_pos += 1\n\t\tright_pos -= 1\n\treturn True\nprint(isPalindrome('aza')) \n\n#Write a python function to check whether a given string is pangram or not.\nimport string\ndef ispangram(str1, alphabet=string.ascii_lowercase):  \n    alphaset = set(alphabet)  \n    return alphaset <= set(str1.lower())  \nprint(ispangram(\"The quick brown fox jumps over the lazy dog\"))\n\n#Write a python function to check whether a given string is an anagram or not.\n",
    "    a = [0 for i in range(num_list.count(0))]\n    x = [ i for i in num_list if i != 0]\n    x.extend(a)\n    return(x)\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))\nprint(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]))\n\n#Write a python function to find the maximum and minimum numbers from a sequence of numbers.\ndef max_min(data):\n    l = data[0]\n    s = data[0]\n    for num in data:\n        if num> l:\n            l = num\n        elif num< s:\n            s = num\n    return l,s\nprint(max_min([0,10,-2,30,5,6]))\n\n#Write a python function to find the sum of squares of all numbers in a given list.\ndef squaresum(n) :\n    return sum([num **2 for num in n])\nprint(squaresum([1,2,3]))\n\n#Write a python function to find the sum of squares of all numbers in a given list.\ndef squaresum(n) :\n    return sum([num **2 for num in n])\nprint(squaresum([1,2,3]))\n\n#Write a python function to find the sum of squares of all numbers in a given list.\ndef squaresum(n) :\n    return sum([num **2 for num in n])\nprint(squaresum([1,2,3]))\n\n#Write a python function to check whether a given number is perfect or not.\ndef perfect_number(n):\n    sum = 0\n    for i in range(1, n):\n        if n % i == 0:\n            sum += i\n    return True if sum == n and n!=0 else False\nprint(perfect_number(6))\nprint(perfect_number(28))\nprint(perfect_number(496))\nprint(perfect_number(8128))\nprint"
  ]
}
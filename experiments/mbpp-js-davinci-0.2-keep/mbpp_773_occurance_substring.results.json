{
  "name": "mbpp_773_occurance_substring",
  "language": "js",
  "prompt": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_773_occurance_substring.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        count++;\n        index++;\n    }\n    return count == 0 ? null : result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpytfpwqh6.js:23:10)\n    at Object.<anonymous> (/tmp/tmpytfpwqh6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index === -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpiernyekp.js:21:10)\n    at Object.<anonymous> (/tmp/tmpiernyekp.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var i=0;\n    var j=0;\n    var count=0;\n    var pos=[];\n    while(i<text.length){\n        if(text[i]==pattern[j]){\n            i++;\n            j++;\n            if(j==pattern.length){\n                count++;\n                pos.push(i-j);\n                j=0;\n            }\n        }\n        else{\n            i++;\n            j=0;\n        }\n    }\n    if(count==0){\n        return null;\n    }\n    else{\n        return pos;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpbxanemyz.js:35:10)\n    at Object.<anonymous> (/tmp/tmpbxanemyz.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index + 1);\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpqtxz2qgb.js:17:10)\n    at Object.<anonymous> (/tmp/tmpqtxz2qgb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxabv_0q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxabv_0q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var index = text.indexOf(pattern);\n    if(index == -1){\n        return null;\n    }\n    else{\n        return index;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp9zks6__2.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9zks6__2.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count += 1;\n        position.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_70eaz7v.js:29:10)\n    at Object.<anonymous> (/tmp/tmp_70eaz7v.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = text.indexOf(pattern);\n    while(pos > -1){\n        result.push(pos);\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpx6zcjusb.js:17:10)\n    at Object.<anonymous> (/tmp/tmpx6zcjusb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text[i] === pattern[0]){\n            let j = 0;\n            while(j < pattern.length && text[i+j] === pattern[j]){\n                j++;\n            }\n            if(j === pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count === 0){\n        return null;\n    }\n    return {\n        count: count,\n        position: position\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpt6ik0xr9.js:31:10)\n    at Object.<anonymous> (/tmp/tmpt6ik0xr9.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while (pos > -1) {\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp0plsxvhe.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0plsxvhe.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxabv_0q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxabv_0q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp6fn5fayq.js:16:10)\n    at Object.<anonymous> (/tmp/tmp6fn5fayq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpbww06193.js:23:10)\n    at Object.<anonymous> (/tmp/tmpbww06193.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpycv0p4kf.js:23:10)\n    at Object.<anonymous> (/tmp/tmpycv0p4kf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    if (pos == -1) {\n        return null;\n    }\n    var count = 0;\n    while (pos != -1) {\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmps14ykv2o.js:20:10)\n    at Object.<anonymous> (/tmp/tmps14ykv2o.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(pos < text.length){\n        var index = text.indexOf(pattern, pos);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        pos = index + 1;\n        count++;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpmdxvmc4_.js:26:10)\n    at Object.<anonymous> (/tmp/tmpmdxvmc4_.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n\tvar count = 0;\n\tvar pos = [];\n\tfor(var i=0; i<text.length; i++){\n\t\tif(text.substring(i, i+pattern.length) == pattern){\n\t\t\tcount++;\n\t\t\tpos.push(i);\n\t\t}\n\t}\n\tif(count == 0){\n\t\treturn null;\n\t}\n\telse{\n\t\treturn [count, pos];\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp9m0wyhh1.js:24:10)\n    at Object.<anonymous> (/tmp/tmp9m0wyhh1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result.length > 0 ? result : null;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp351y1so9.js:17:10)\n    at Object.<anonymous> (/tmp/tmp351y1so9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_18keian.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_18keian.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpycv0p4kf.js:23:10)\n    at Object.<anonymous> (/tmp/tmpycv0p4kf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index > -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpix6jcpmj.js:17:10)\n    at Object.<anonymous> (/tmp/tmpix6jcpmj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i=0; i<text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpecm65u7j.js:24:10)\n    at Object.<anonymous> (/tmp/tmpecm65u7j.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n\tvar pos = text.indexOf(pattern);\n\tvar count = 0;\n\twhile(pos > -1){\n\t\tcount++;\n\t\tpos = text.indexOf(pattern, pos + 1);\n\t}\n\tif(count == 0){\n\t\treturn null;\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpp1k5_s4_.js:20:10)\n    at Object.<anonymous> (/tmp/tmpp1k5_s4_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index+1);\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp9z6mgy7c.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9z6mgy7c.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    while(text.indexOf(pattern, index) != -1){\n        count++;\n        index = text.indexOf(pattern, index) + 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpi9pf720w.js:17:10)\n    at Object.<anonymous> (/tmp/tmpi9pf720w.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i=0; i<text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpck3l7j14.js:22:10)\n    at Object.<anonymous> (/tmp/tmpck3l7j14.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmplrpmhidl.js:17:10)\n    at Object.<anonymous> (/tmp/tmplrpmhidl.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        result.push(index);\n        index++;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp7l2ak6oc.js:26:10)\n    at Object.<anonymous> (/tmp/tmp7l2ak6oc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpoilqpkk8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpoilqpkk8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpverdqng6.js:21:10)\n    at Object.<anonymous> (/tmp/tmpverdqng6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(true){\n        i = text.indexOf(pattern, i);\n        if(i == -1){\n            break;\n        }\n        result.push(i);\n        i++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp23d1etqi.js:21:10)\n    at Object.<anonymous> (/tmp/tmp23d1etqi.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var text_length = text.length;\n    var pattern_length = pattern.length;\n    var result = [];\n    for(var i = 0; i < text_length; i++){\n        if(text.substring(i, i + pattern_length) == pattern){\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpq_ibcv1v.js:19:10)\n    at Object.<anonymous> (/tmp/tmpq_ibcv1v.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpeoryg4ap.js:17:10)\n    at Object.<anonymous> (/tmp/tmpeoryg4ap.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp61s5t5q3.js:25:10)\n    at Object.<anonymous> (/tmp/tmp61s5t5q3.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxabv_0q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxabv_0q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var match = text.match(pattern);\n    if(match){\n        return \"Occurance: \" + match.length + \" Position: \" + match.index;\n    }\n    return \"None\";\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Occurance: 1 Position: 0'\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpa03zquwe.js:14:10)\n    at Object.<anonymous> (/tmp/tmpa03zquwe.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Occurance: 1 Position: 0',\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsi1lm2k0.js:16:10)\n    at Object.<anonymous> (/tmp/tmpsi1lm2k0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpk5h2s1jm.js:22:10)\n    at Object.<anonymous> (/tmp/tmpk5h2s1jm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = [];\n    for (var i = 0; i < text.length; i++){\n        if (text.substring(i, i + pattern.length) == pattern){\n            count++;\n            index.push(i);\n        }\n    }\n    if (count == 0){\n        return null;\n    }\n    else{\n        return [count, index];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpyux26hqv.js:24:10)\n    at Object.<anonymous> (/tmp/tmpyux26hqv.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    var pos = 0;\n    while(index < text.length){\n        pos = text.indexOf(pattern, index);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        index = pos + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpwn4i46bm.js:22:10)\n    at Object.<anonymous> (/tmp/tmpwn4i46bm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(count > 0){\n        return count;\n    }\n    else{\n        return null;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpizv7044w.js:22:10)\n    at Object.<anonymous> (/tmp/tmpizv7044w.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = 0;\n    var index = text.indexOf(pattern, pos);\n    while(index >= 0){\n        result.push(index);\n        pos = index + 1;\n        index = text.indexOf(pattern, pos);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpkfqlb3m7.js:19:10)\n    at Object.<anonymous> (/tmp/tmpkfqlb3m7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos != -1){\n        count++;\n        pos = text.indexOf(pattern, pos+1);\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpp0fjmuo4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpp0fjmuo4.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_18keian.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_18keian.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpc1cm5s3h.js:21:10)\n    at Object.<anonymous> (/tmp/tmpc1cm5s3h.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    var pos = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            if(j == pattern.length - 1){\n                count++;\n                pos.push(i - j);\n                j = 0;\n            }\n            else{\n                j++;\n            }\n        }\n        else{\n            j = 0;\n        }\n        i++;\n    }\n    if(count > 0){\n        return [count, pos];\n    }\n    else{\n        return null;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp32b9fjyv.js:36:10)\n    at Object.<anonymous> (/tmp/tmp32b9fjyv.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  pos: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpwugwr98j.js:25:10)\n    at Object.<anonymous> (/tmp/tmpwugwr98j.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, pos: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let count = 0;\n    let pos = [];\n    for(let i=0; i<text.length; i++){\n        if(text[i] == pattern[0]){\n            let j = 0;\n            while(j<pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                pos.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmparcyaz3r.js:28:10)\n    at Object.<anonymous> (/tmp/tmparcyaz3r.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                pos.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsit1cp9o.js:28:10)\n    at Object.<anonymous> (/tmp/tmpsit1cp9o.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos >= 0){\n            result.push(pos);\n            pos += 1;\n            count += 1;\n        }else{\n            break;\n        }\n    }\n    if(count == 0){\n        return null;\n    }else{\n        return result;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp82u7t7so.js:28:10)\n    at Object.<anonymous> (/tmp/tmp82u7t7so.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_18keian.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_18keian.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxabv_0q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxabv_0q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var occurance = 0;\n    var position = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            occurance++;\n            position.push(i);\n            i = i + pattern.length;\n        }\n        else{\n            i++;\n        }\n    }\n    if(occurance == 0){\n        return null;\n    }\n    else{\n        return {\n            occurance: occurance,\n            position: position\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  occurance: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp2brand43.js:32:10)\n    at Object.<anonymous> (/tmp/tmp2brand43.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { occurance: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i=0; i<text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpecm65u7j.js:24:10)\n    at Object.<anonymous> (/tmp/tmpecm65u7j.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        result.push(index);\n        index++;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp7l2ak6oc.js:26:10)\n    at Object.<anonymous> (/tmp/tmp7l2ak6oc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpeshzvw3e.js:17:10)\n    at Object.<anonymous> (/tmp/tmpeshzvw3e.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxabv_0q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxabv_0q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.slice(i, i + pattern.length) == pattern){\n            result.push(i);\n            i += pattern.length;\n        }\n        else{\n            i++;\n        }\n    }\n    return result.length > 0 ? result : null;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpon99jflj.js:22:10)\n    at Object.<anonymous> (/tmp/tmpon99jflj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var positions = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count++;\n        positions.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        positions: positions\n    };\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  positions: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp63_h1phj.js:29:10)\n    at Object.<anonymous> (/tmp/tmp63_h1phj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, positions: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return {count: count, position: position};\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpeaz0_sve.js:23:10)\n    at Object.<anonymous> (/tmp/tmpeaz0_sve.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    if(pos == -1) {\n        return null;\n    }\n    else {\n        var count = 0;\n        while(pos != -1) {\n            count++;\n            pos = text.indexOf(pattern, pos + 1);\n        }\n        return count;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxo0fy5i.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxo0fy5i.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n\tvar result = [];\n\tvar pos = text.indexOf(pattern);\n\twhile(pos > -1){\n\t\tresult.push(pos);\n\t\tpos = text.indexOf(pattern, pos + 1);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmps4urfy0w.js:17:10)\n    at Object.<anonymous> (/tmp/tmps4urfy0w.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var positions = [];\n    for (var i = 0; i < text.length; i++){\n        if (text.substr(i, pattern.length) == pattern){\n            count++;\n            positions.push(i);\n        }\n    }\n    if (count == 0){\n        return null;\n    }\n    else {\n        return [count, positions];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpl2dtwyeo.js:24:10)\n    at Object.<anonymous> (/tmp/tmpl2dtwyeo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    var count = 0;\n    while(index < text.length){\n        var found = text.indexOf(pattern, index);\n        if(found == -1){\n            break;\n        }\n        result.push(found);\n        count++;\n        index = found + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmppincy4av.js:26:10)\n    at Object.<anonymous> (/tmp/tmppincy4av.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpgbt6bt6o.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgbt6bt6o.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxabv_0q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxabv_0q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n\tvar pos = 0;\n\tvar count = 0;\n\tvar result = [];\n\twhile(pos < text.length){\n\t\tpos = text.indexOf(pattern, pos);\n\t\tif(pos == -1){\n\t\t\tbreak;\n\t\t}\n\t\tresult.push(pos);\n\t\tcount++;\n\t\tpos++;\n\t}\n\tif(count == 0){\n\t\treturn null;\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpu5ls2ygv.js:26:10)\n    at Object.<anonymous> (/tmp/tmpu5ls2ygv.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpc1cm5s3h.js:21:10)\n    at Object.<anonymous> (/tmp/tmpc1cm5s3h.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n  var result = [];\n  var i = 0;\n  while(i < text.length){\n    var j = 0;\n    var k = i;\n    while(j < pattern.length && k < text.length && text[k] == pattern[j]){\n      j++;\n      k++;\n    }\n    if(j == pattern.length){\n      result.push(i);\n    }\n    i++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp5xm54xdz.js:25:10)\n    at Object.<anonymous> (/tmp/tmp5xm54xdz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        index += pattern.length;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpun6noud9.js:21:10)\n    at Object.<anonymous> (/tmp/tmpun6noud9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of === -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp1wcx5xp6.js:21:10)\n    at Object.<anonymous> (/tmp/tmp1wcx5xp6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpc1cm5s3h.js:21:10)\n    at Object.<anonymous> (/tmp/tmpc1cm5s3h.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            result.push(i);\n        }\n    }\n    return result.length > 0 ? result : null;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp1tjuz6i5.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1tjuz6i5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let count = 0;\n    let pos = 0;\n    let result = [];\n    while(pos < text.length){\n        pos = text.indexOf(pattern, pos);\n        if(pos < 0){\n            break;\n        }\n        count++;\n        result.push(pos);\n        pos++;\n    }\n    if(count > 0){\n        return result;\n    }\n    return null;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpd87hgpqo.js:26:10)\n    at Object.<anonymous> (/tmp/tmpd87hgpqo.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_18keian.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_18keian.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpycv0p4kf.js:23:10)\n    at Object.<anonymous> (/tmp/tmpycv0p4kf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  pos: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp8q2r9abu.js:24:10)\n    at Object.<anonymous> (/tmp/tmp8q2r9abu.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, pos: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count++;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpzig6xz3c.js:26:10)\n    at Object.<anonymous> (/tmp/tmpzig6xz3c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index + 1);\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpqtxz2qgb.js:17:10)\n    at Object.<anonymous> (/tmp/tmpqtxz2qgb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var position = -1;\n    var count = 0;\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        position = index;\n        index++;\n    }\n    if(count > 0){\n        return \"Occurance: \" + count + \" Position: \" + position;\n    }\n    else{\n        return \"None\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Occurance: 2 Position: 20'\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpbu6b5_e2.js:27:10)\n    at Object.<anonymous> (/tmp/tmpbu6b5_e2.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Occurance: 2 Position: 20',\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n  var result = [];\n  var index = text.indexOf(pattern);\n  while(index >= 0){\n    result.push(index);\n    index = text.indexOf(pattern, index + 1);\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpkh45nkzq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpkh45nkzq.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_18keian.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_18keian.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            result.push(i);\n            i += pattern.length;\n        }\n        else{\n            i++;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpl73rcrzb.js:21:10)\n    at Object.<anonymous> (/tmp/tmpl73rcrzb.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    var pos = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            if(j == pattern.length - 1){\n                count++;\n                pos.push(i - j);\n                j = 0;\n            }else{\n                j++;\n            }\n        }else{\n            j = 0;\n        }\n        i++;\n    }\n    if(count > 0){\n        return {count: count, pos: pos};\n    }else{\n        return null;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  pos: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpv85b0k58.js:33:10)\n    at Object.<anonymous> (/tmp/tmpv85b0k58.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, pos: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let result = [];\n    let i = 0;\n    while(i < text.length){\n        let j = 0;\n        while(j < pattern.length && text[i+j] === pattern[j]){\n            j++;\n        }\n        if(j === pattern.length){\n            result.push(i);\n            i += j;\n        }\n        else{\n            i++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpiy3oj7te.js:26:10)\n    at Object.<anonymous> (/tmp/tmpiy3oj7te.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmplrpmhidl.js:17:10)\n    at Object.<anonymous> (/tmp/tmplrpmhidl.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while (pos > -1) {\n        count += 1;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpgnqw7s7o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpgnqw7s7o.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpkj3by749.js:16:10)\n    at Object.<anonymous> (/tmp/tmpkj3by749.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }else{\n        return {\n            count: count,\n            pos: pos\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  pos: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpakh0ptgb.js:26:10)\n    at Object.<anonymous> (/tmp/tmpakh0ptgb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, pos: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmplrpmhidl.js:17:10)\n    at Object.<anonymous> (/tmp/tmplrpmhidl.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpoo707ftc.js:27:10)\n    at Object.<anonymous> (/tmp/tmpoo707ftc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpeoryg4ap.js:17:10)\n    at Object.<anonymous> (/tmp/tmpeoryg4ap.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_18keian.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_18keian.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpdjb964s2.js:21:10)\n    at Object.<anonymous> (/tmp/tmpdjb964s2.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n        i++;\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpskxolwyw.js:26:10)\n    at Object.<anonymous> (/tmp/tmpskxolwyw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            let j = 0;\n            while(j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, position];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpyoz6raq2.js:28:10)\n    at Object.<anonymous> (/tmp/tmpyoz6raq2.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsi1lm2k0.js:16:10)\n    at Object.<anonymous> (/tmp/tmpsi1lm2k0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos+1);\n    }\n    if(count > 0){\n        return count;\n    }\n    else{\n        return null;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp7n582vmm.js:22:10)\n    at Object.<anonymous> (/tmp/tmp7n582vmm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        count++;\n        result.push(pos);\n        pos += pattern.length;\n    }\n    return [count, result];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsw_sygwo.js:23:10)\n    at Object.<anonymous> (/tmp/tmpsw_sygwo.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var occurance = 0;\n    var position = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        occurance += 1;\n        position.push(index_of);\n        index = index_of + 1;\n    }\n    if(occurance == 0){\n        return null;\n    }\n    return {\n        occurance: occurance,\n        position: position\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  occurance: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp92k75wex.js:29:10)\n    at Object.<anonymous> (/tmp/tmp92k75wex.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { occurance: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count += 1;\n            pos.push(i);\n            i += pattern.length;\n        }\n        else{\n            i += 1;\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpod2d4u4p.js:28:10)\n    at Object.<anonymous> (/tmp/tmpod2d4u4p.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = text.indexOf(pattern);\n    while (pos > -1){\n        result.push(pos);\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_qfi7sup.js:16:10)\n    at Object.<anonymous> (/tmp/tmp_qfi7sup.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpme_mbddv.js:17:10)\n    at Object.<anonymous> (/tmp/tmpme_mbddv.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index !== -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpwjmea2cn.js:17:10)\n    at Object.<anonymous> (/tmp/tmpwjmea2cn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += pattern.length;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmplnb1vbll.js:21:10)\n    at Object.<anonymous> (/tmp/tmplnb1vbll.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxabv_0q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxabv_0q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n\tvar result = [];\n\tvar index = text.indexOf(pattern);\n\twhile(index >= 0){\n\t\tresult.push(index);\n\t\tindex = text.indexOf(pattern, index+1);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpg3h1yrv9.js:17:10)\n    at Object.<anonymous> (/tmp/tmpg3h1yrv9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = 0;\n    var result = [];\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n        count += 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp2hy622wd.js:26:10)\n    at Object.<anonymous> (/tmp/tmp2hy622wd.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp45qrma0b.js:18:10)\n    at Object.<anonymous> (/tmp/tmp45qrma0b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return {\n            count: count,\n            pos: pos\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  pos: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmprov9gy5b.js:27:10)\n    at Object.<anonymous> (/tmp/tmprov9gy5b.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, pos: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        index += pattern.length;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpun6noud9.js:21:10)\n    at Object.<anonymous> (/tmp/tmpun6noud9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    if(pos == -1){\n        return \"None\";\n    }\n    else{\n        return pos;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpyv0n22hi.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyv0n22hi.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpk5h2s1jm.js:22:10)\n    at Object.<anonymous> (/tmp/tmpk5h2s1jm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index > -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp5je8dxk1.js:16:10)\n    at Object.<anonymous> (/tmp/tmp5je8dxk1.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var text_length = text.length;\n    var pattern_length = pattern.length;\n    var count = 0;\n    var position = [];\n    for(var i=0; i<text_length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j<pattern_length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern_length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return \"None\";\n    }\n    else{\n        return [count, position];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp4vye5lt4.js:32:10)\n    at Object.<anonymous> (/tmp/tmp4vye5lt4.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpdjb964s2.js:21:10)\n    at Object.<anonymous> (/tmp/tmpdjb964s2.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] == pattern[j]){\n                    count++;\n                }\n            }\n            if(count == pattern.length){\n                position.push(i);\n            }\n            count = 0;\n        }\n    }\n    if(position.length == 0){\n        return null;\n    }\n    return position;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpxrs2bf8g.js:28:10)\n    at Object.<anonymous> (/tmp/tmpxrs2bf8g.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while (index >= 0) {\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpx6s9y4n7.js:17:10)\n    at Object.<anonymous> (/tmp/tmpx6s9y4n7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_18keian.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_18keian.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxabv_0q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxabv_0q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxabv_0q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxabv_0q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = text.indexOf(pattern);\n    while(pos > -1){\n        result.push(pos);\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp9tz1rxpd.js:16:10)\n    at Object.<anonymous> (/tmp/tmp9tz1rxpd.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(count == 0){\n        return null;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsx1o5shx.js:20:10)\n    at Object.<anonymous> (/tmp/tmpsx1o5shx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = 0;\n    while(pos < text.length){\n        var index = text.indexOf(pattern, pos);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        pos = index + 1;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpg_1u2ger.js:20:10)\n    at Object.<anonymous> (/tmp/tmpg_1u2ger.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var len = text.length;\n    var len_pat = pattern.length;\n    var result = [];\n    for(var i=0; i<len; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j<len_pat && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == len_pat){\n                result.push(i);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpazzgkt1u.js:25:10)\n    at Object.<anonymous> (/tmp/tmpazzgkt1u.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] != pattern[j]){\n                    break;\n                }\n                if(j == pattern.length - 1){\n                    count++;\n                    position.push(i);\n                }\n            }\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, position];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpa6vw1bhl.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa6vw1bhl.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    var position = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            if(j == pattern.length - 1){\n                count++;\n                position.push(i - j);\n                j = 0;\n            }\n            else{\n                j++;\n            }\n        }\n        else{\n            j = 0;\n        }\n        i++;\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, position];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpmdm2kv86.js:36:10)\n    at Object.<anonymous> (/tmp/tmpmdm2kv86.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n            i += pattern.length;\n        }\n        else{\n            i++;\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp2xq1b2fq.js:29:10)\n    at Object.<anonymous> (/tmp/tmp2xq1b2fq.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count++;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpzig6xz3c.js:26:10)\n    at Object.<anonymous> (/tmp/tmpzig6xz3c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos+1);\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpwgd3cbc1.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwgd3cbc1.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpc1cm5s3h.js:21:10)\n    at Object.<anonymous> (/tmp/tmpc1cm5s3h.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n\tvar result = [];\n\tvar index = text.indexOf(pattern);\n\twhile (index >= 0) {\n\t\tresult.push(index);\n\t\tindex = text.indexOf(pattern, index + 1);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpm2naigsw.js:17:10)\n    at Object.<anonymous> (/tmp/tmpm2naigsw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    var pos = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            i++;\n            j++;\n        }\n        else{\n            i = i - j + 1;\n            j = 0;\n        }\n        if(j == pattern.length){\n            count++;\n            pos.push(i - j);\n            j = 0;\n        }\n    }\n    if(count == 0){\n        return \"None\";\n    }\n    else{\n        return count + \" \" + pos;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'2 0,20'\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp5vglm2ze.js:35:10)\n    at Object.<anonymous> (/tmp/tmp5vglm2ze.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '2 0,20',\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp2yckpgxs.js:24:10)\n    at Object.<anonymous> (/tmp/tmp2yckpgxs.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpgbt6bt6o.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgbt6bt6o.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmplrpmhidl.js:17:10)\n    at Object.<anonymous> (/tmp/tmplrpmhidl.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(count > 0){\n        return count;\n    }\n    else{\n        return null;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpceb5u7z8.js:21:10)\n    at Object.<anonymous> (/tmp/tmpceb5u7z8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    if(pos == -1){\n        return null;\n    }\n    else{\n        return pos;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp4vo5bo57.js:16:10)\n    at Object.<anonymous> (/tmp/tmp4vo5bo57.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n            i = i + j;\n        }\n        else{\n            i++;\n        }\n    }\n    if(result.length == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpa2itprtz.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa2itprtz.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        };\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpk3wrz7ht.js:26:10)\n    at Object.<anonymous> (/tmp/tmpk3wrz7ht.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpl5507u03.js:20:10)\n    at Object.<anonymous> (/tmp/tmpl5507u03.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpi8us5daa.js:20:10)\n    at Object.<anonymous> (/tmp/tmpi8us5daa.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsxabv_0q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsxabv_0q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf == -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpd9e9v98c.js:21:10)\n    at Object.<anonymous> (/tmp/tmpd9e9v98c.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, position];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp16cf6ym6.js:24:10)\n    at Object.<anonymous> (/tmp/tmp16cf6ym6.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(pos < text.length){\n        var index = text.indexOf(pattern, pos);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        pos = index + 1;\n        count++;\n    }\n    return count == 0 ? null : result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpmq689kmc.js:23:10)\n    at Object.<anonymous> (/tmp/tmpmq689kmc.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return {count, position};\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_b6b2_x6.js:22:10)\n    at Object.<anonymous> (/tmp/tmp_b6b2_x6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpf2ylzdku.js:20:10)\n    at Object.<anonymous> (/tmp/tmpf2ylzdku.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmplrpmhidl.js:17:10)\n    at Object.<anonymous> (/tmp/tmplrpmhidl.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while (index >= 0) {\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpx6s9y4n7.js:17:10)\n    at Object.<anonymous> (/tmp/tmpx6s9y4n7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_18keian.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_18keian.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpycv0p4kf.js:23:10)\n    at Object.<anonymous> (/tmp/tmpycv0p4kf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n\tvar pos = 0;\n\tvar count = 0;\n\twhile(true){\n\t\tpos = text.indexOf(pattern, pos);\n\t\tif(pos == -1){\n\t\t\tbreak;\n\t\t}\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp4evz8qiy.js:21:10)\n    at Object.<anonymous> (/tmp/tmp4evz8qiy.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(pos < text.length){\n        if(text.substring(pos, pos + pattern.length) == pattern){\n            count++;\n            result.push(pos);\n            pos += pattern.length;\n        }\n        else{\n            pos++;\n        }\n    }\n    if(count > 0){\n        return result;\n    }\n    else{\n        return null;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmps_y1bp0x.js:29:10)\n    at Object.<anonymous> (/tmp/tmps_y1bp0x.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    var pos = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            if(j == pattern.length - 1){\n                count++;\n                pos.push(i - j);\n                j = 0;\n            }\n            else{\n                j++;\n            }\n        }\n        else{\n            j = 0;\n        }\n        i++;\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmppg0bd9vx.js:36:10)\n    at Object.<anonymous> (/tmp/tmppg0bd9vx.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while (pos > -1) {\n        count += 1;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpgnqw7s7o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpgnqw7s7o.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count++;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpzig6xz3c.js:26:10)\n    at Object.<anonymous> (/tmp/tmpzig6xz3c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmphquhozyh.js:16:10)\n    at Object.<anonymous> (/tmp/tmphquhozyh.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = 0;\n    var count = 0;\n    var pos_arr = [];\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        pos_arr.push(pos);\n        pos += 1;\n        count += 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos_arr];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpz_3r4qhj.js:26:10)\n    at Object.<anonymous> (/tmp/tmpz_3r4qhj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    if(pos == -1)\n        return null;\n    else\n        return pos;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmprqhxl4yz.js:15:10)\n    at Object.<anonymous> (/tmp/tmprqhxl4yz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var match = true;\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] != pattern[j]){\n                    match = false;\n                    break;\n                }\n            }\n            if(match){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, position];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpheambjc3.js:31:10)\n    at Object.<anonymous> (/tmp/tmpheambjc3.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j < pattern.length){\n                if(text[i+j] == pattern[j]){\n                    j++;\n                }\n                else{\n                    break;\n                }\n            }\n            if(j == pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return \"None\";\n    }\n    else{\n        return \"Occurance: \" + count + \" Position: \" + position;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Occurance: 2 Position: 0,20'\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpcyxeek6c.js:35:10)\n    at Object.<anonymous> (/tmp/tmpcyxeek6c.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Occurance: 2 Position: 0,20',\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    if(pos == -1){\n        return null;\n    }\n    else{\n        return pos;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp4vo5bo57.js:16:10)\n    at Object.<anonymous> (/tmp/tmp4vo5bo57.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var occurance = 0;\n    var pos = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            occurance++;\n            pos.push(i);\n            i += pattern.length;\n        }\n        else{\n            i++;\n        }\n    }\n    if(occurance == 0){\n        return null;\n    }\n    else{\n        return [occurance, pos];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpfoj7_gk1.js:29:10)\n    at Object.<anonymous> (/tmp/tmpfoj7_gk1.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var found = text.indexOf(pattern, index);\n        if(found != -1){\n            count++;\n            result.push(found);\n            index = found + 1;\n        }\n        else{\n            break;\n        }\n    }\n    if(count > 0){\n        return result;\n    }\n    else{\n        return null;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpjb0z9yq5.js:30:10)\n    at Object.<anonymous> (/tmp/tmpjb0z9yq5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            index.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpfzbjfkwi.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfzbjfkwi.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpycv0p4kf.js:23:10)\n    at Object.<anonymous> (/tmp/tmpycv0p4kf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        var k = i;\n        while(j < pattern.length && k < text.length && text[k] == pattern[j]){\n            j++;\n            k++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n            i = k;\n        }\n        else{\n            i++;\n        }\n    }\n    if(result.length == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmprzhauj03.js:31:10)\n    at Object.<anonymous> (/tmp/tmprzhauj03.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpycv0p4kf.js:23:10)\n    at Object.<anonymous> (/tmp/tmpycv0p4kf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var found = text.indexOf(pattern, index);\n        if(found == -1){\n            break;\n        }\n        result.push(found);\n        index = found + 1;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmph0lijqva.js:20:10)\n    at Object.<anonymous> (/tmp/tmph0lijqva.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmphquhozyh.js:16:10)\n    at Object.<anonymous> (/tmp/tmphquhozyh.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        position: position\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp3xjxxvw7.js:24:10)\n    at Object.<anonymous> (/tmp/tmp3xjxxvw7.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    var n = text.length;\n    var m = pattern.length;\n    for(var i = 0; i <= n - m; i++){\n        var j;\n        for(j = 0; j < m; j++){\n            if(text[i + j] != pattern[j]){\n                break;\n            }\n        }\n        if(j == m){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count > 0){\n        return {\n            count: count,\n            pos: pos\n        };\n    }\n    else{\n        return null;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  pos: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpmi44ufvv.js:34:10)\n    at Object.<anonymous> (/tmp/tmpmi44ufvv.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, pos: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substr(i, pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_ls075kg.js:24:10)\n    at Object.<anonymous> (/tmp/tmp_ls075kg.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index != -1){\n        index = text.indexOf(pattern, index);\n        if(index != -1){\n            result.push(index);\n            index++;\n            count++;\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpfbtba5ow.js:25:10)\n    at Object.<anonymous> (/tmp/tmpfbtba5ow.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var array = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count++;\n        array.push(index_of);\n        index = index_of + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, array];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpjnm28vgi.js:26:10)\n    at Object.<anonymous> (/tmp/tmpjnm28vgi.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(result.length == 0){\n        return null;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmptcpqhl5k.js:19:10)\n    at Object.<anonymous> (/tmp/tmptcpqhl5k.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                pos.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return \"None\";\n    }\n    return count + \" \" + pos;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'2 0,20'\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp3j5u82pf.js:28:10)\n    at Object.<anonymous> (/tmp/tmp3j5u82pf.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '2 0,20',\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmphquhozyh.js:16:10)\n    at Object.<anonymous> (/tmp/tmphquhozyh.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    var i = 0;\n    while(i < text.length){\n        if(text[i] == pattern[index]){\n            index++;\n            if(index == pattern.length){\n                result.push(i - index + 1);\n                index = 0;\n            }\n        }\n        else{\n            index = 0;\n        }\n        i++;\n    }\n    if(result.length == 0){\n        return \"None\";\n    }\n    else{\n        return result;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpyk1o9_gu.js:31:10)\n    at Object.<anonymous> (/tmp/tmpyk1o9_gu.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var position = [];\n    while(index < text.length){\n        var i = text.indexOf(pattern, index);\n        if(i == -1){\n            break;\n        }\n        count++;\n        position.push(i);\n        index = i + 1;\n    }\n    if(count == 0){\n        return null;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  count: 2,\n  position: [\n    0,\n    20\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpmjpo3n3i.js:29:10)\n    at Object.<anonymous> (/tmp/tmpmjpo3n3i.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { count: 2, position: [ 0, 20 ] },\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    return count == 0 ? null : [count, position];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpd6jgh8op.js:25:10)\n    at Object.<anonymous> (/tmp/tmpd6jgh8op.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmplrpmhidl.js:17:10)\n    at Object.<anonymous> (/tmp/tmplrpmhidl.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index + 1);\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpqtxz2qgb.js:17:10)\n    at Object.<anonymous> (/tmp/tmpqtxz2qgb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern == -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmph4fct5ca.js:21:10)\n    at Object.<anonymous> (/tmp/tmph4fct5ca.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index === -1){\n            break;\n        }\n        result.push(index);\n        index++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp40c1ax02.js:21:10)\n    at Object.<anonymous> (/tmp/tmp40c1ax02.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmppqgbuj2r.js:20:10)\n    at Object.<anonymous> (/tmp/tmppqgbuj2r.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern == -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmph4fct5ca.js:21:10)\n    at Object.<anonymous> (/tmp/tmph4fct5ca.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        index += pattern.length;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpun6noud9.js:21:10)\n    at Object.<anonymous> (/tmp/tmpun6noud9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = [];\n    var count = 0;\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            pos.push(i);\n            count++;\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, pos];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpbmyzz0zh.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbmyzz0zh.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n    }\n    return result;\n}\n\nvar text = \"Hello World\";\nvar pattern = \"o\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpxii6hlrj.js:23:10)\n    at Object.<anonymous> (/tmp/tmpxii6hlrj.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpycv0p4kf.js:23:10)\n    at Object.<anonymous> (/tmp/tmpycv0p4kf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp_18keian.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_18keian.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    let count = 0;\n    let pos = [];\n    for(let i = 0; i < text.length; i++){\n        if(text.substr(i, pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    return count == 0 ? null : [count, pos];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpwtu3uj3_.js:19:10)\n    at Object.<anonymous> (/tmp/tmpwtu3uj3_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count += 1;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(count > 0){\n        return count;\n    }\n    else{\n        return \"None\";\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpmmgfh5xz.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmmgfh5xz.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  20\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpc1cm5s3h.js:21:10)\n    at Object.<anonymous> (/tmp/tmpc1cm5s3h.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 20 ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var position = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        count++;\n        position.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, position];\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp59cn9so3.js:23:10)\n    at Object.<anonymous> (/tmp/tmp59cn9so3.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            index.push(i);\n        }\n        i++;\n    }\n    if(count == 0){\n        return null;\n    }\n    else{\n        return [count, index];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmp5r_x6sdd.js:26:10)\n    at Object.<anonymous> (/tmp/tmp5r_x6sdd.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var pos = [];\n    for(var i=0; i<text.length; i++){\n        if(text.substring(i, i+pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return null;\n    }\n    return [count, pos];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpitbhzwp3.js:21:10)\n    at Object.<anonymous> (/tmp/tmpitbhzwp3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\nfunction occurance_substring(text, pattern){\n    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of == -1){\n            break;\n        }\n        count += 1;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return [count, result];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  [\n    0,\n    20\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  'python',\n  0,\n  6\n]\n    at test (/tmp/tmpsnwf9439.js:23:10)\n    at Object.<anonymous> (/tmp/tmpsnwf9439.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, [ 0, 20 ] ],\n  expected: [ 'python', 0, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_753_min_k",
  "language": "js",
  "prompt": "//Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\nfunction min_k(test_list, K){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_753_min_k.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_k;\n  assert.deepEqual(candidate([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]]);\n  assert.deepEqual(candidate([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]]);\n  assert.deepEqual(candidate([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    //start\n    //sort list\n    test_list.sort();\n    //return first k elements\n    return test_list.slice(0,K);\n}\n",
    "    var min_k_list = [];\n    for(var i=0; i<K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [['Geeks', 10], ['for', 15], ['Geeks', 20]]; \nvar K = 2; ",
    "    // start\n    //print(\"Input: \" + str(test_list))\n    //print(\"K: \" + str(K))\n    //print(\"Output: \" + str(sorted(test_list, key = lambda x: x[0])[:K]))\n    //print(\"\")\n    // end\n    return sorted(test_list, key = lambda x: x[0])[:K]\n}\n",
    "    // code here\n    let min_k_list = [];\n    for(let i = 0; i < K; i++){\n        let min_k_value = test_list[i][1];\n        let min_k_index = i;\n        for(let j = i; j < test_list.length; j++){\n            if(test_list[j][1] < min_k_value){\n                min_k_value = test_list[j][1];\n                min_k_index = j;\n            }\n        }\n        min_k_list.push(test_list[min_k_index]);\n        let temp = test_list[i];\n        test_list[i] = test_list[min_k_index];\n        test_list[min_k_index] = temp;\n    }\n    return min_k_list;\n}\n",
    "    test_list.sort(function(a,b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n\nvar test_list = [[1, 2], [3, 4], [1, -1]];\nvar K = 2;",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    return min_k_list;\n}\n",
    "    test_list.sort(function(a, b){return a[1] - b[1]});\n    var res = [];\n    for(var i = 0; i < K; i++){\n        res.push(test_list[i][0]);\n    }\n    return res;\n}\n",
    "    //code here\n    var min_k_list = test_list.slice(0, K);\n    min_k_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_count = 0;\n    var min_k_list_index_count_max = K;\n    var min_k_list_index_count_max_minus_one = K - 1;\n    var min_k_list_index_count_max_minus_two = K - 2;\n    var min_k_list_index_count_max_minus_three = K - 3;\n    var min_k_list_index_count_max_minus_four = K - 4;\n    var min_k_list_index_count_max_minus_five = K - 5;\n    var min_k_list_index_count_max_minus_six = K - 6;\n    var min_k_list_index_count_max_minus_seven = K - 7;\n    var min_k_list_index_count_max_minus_eight = K - 8;\n    var min_k_list_index_count_max_minus_nine = K - 9;\n    var min_k_list_index_count_max_minus_ten = K - 10;\n    var min_k_list_index_count_max_minus_eleven = K - 11;\n    var min_k_list_index_count_max_minus_twelve = K - 12;\n    var min_k_list_index_count_max_minus_thirteen = K - 13;\n    var min_k_list_index_count_max_minus_fourteen = K - 14;\n    var min_k_list_index_count_max_minus_fifteen = K - 15;\n    var min_k_list_index_count_max_minus_sixteen = K - 16;\n    var min_k_list_index_count_max_minus_seventeen = K - 17;\n    var min_k_list_index_count_max_minus_eighteen = K - 18;\n    var min_k_list_index_count_max_minus_nineteen = K - 19;\n    var min_k_list_index_",
    "    //code here\n    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_value = [];\n    var min_k_index_value_index = [];\n    var min_k_index_value_index_value = [];\n    var min_k_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_",
    "    //start\n    //sort the list\n    test_list.sort(function(a, b){return a[1] - b[1]});\n    //return the first k elements\n    return test_list.slice(0, K);\n    //end\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][0] < min_k[K - 1][0]){\n            min_k[K - 1] = test_list[i];\n            min_k.sort(function(a, b){\n                return a[0] - b[0];\n            });\n        }\n    }\n    return min_k;\n}\n",
    "    var min_list = [];\n    for(var i=0; i<K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i][0] < min_list[K-1][0]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[0] - b[0];\n            });\n        }\n    }\n    return min_list;\n}\n",
    "    //code here\n    var min = test_list[0][1];\n    var min_index = 0;\n    var min_list = [];\n    for(var i = 0; i < K; i++){\n        for(var j = 0; j < test_list.length; j++){\n            if(test_list[j][1] < min){\n                min = test_list[j][1];\n                min_index = j;\n            }\n        }\n        min_list.push(test_list[min_index]);\n        test_list.splice(min_index, 1);\n        min = test_list[0][1];\n    }\n    return min_list;\n}\n",
    "    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_list[K-1][1]){\n            min_list[K-1] = test_list[i];\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n}\n\nvar test_list = [['Geeks', 10], ['for', 15], ['Geeks', 20]];\nvar K = 2;",
    "    //start\n    var min_list = [];\n    var min_list_size = 0;\n    var min_list_index = 0;\n    var min_list_index_size = 0;\n    var min_list_index_size_value = 0;\n    var min_list_index_size_value_index = 0;\n    var min_list_index_size_value_index_list = [];\n    var min_list_index_size_value_index_list_size = 0;\n    var min_list_index_size_value_index_list_size_value = 0;\n    var min_list_index_size_value_index_list_size_value_index = 0;\n    var min_list_index_size_value_index_list_size_value_index_list = [];\n    var min_list_index_size_value_index_list_size_value_index_list_size = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list = [];\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list_size = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list_size_value = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list_size_value_index = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list_size_value_index_list = [];\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list_size",
    "    test_list.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    // code here\n    var min_k_list = [];\n    for(var i=0;i<test_list.length;i++){\n        min_k_list.push(test_list[i][1]);\n    }\n    min_k_list.sort(function(a,b){return a-b});\n    var min_k_list_final = [];\n    for(var i=0;i<K;i++){\n        min_k_list_final.push(min_k_list[i]);\n    }\n    return min_k_list_final;\n}\n",
    "    //start\n    var min_k = [];\n    var min_k_set = new Set();\n    var min_k_heap = new MinHeap();\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_heap.size() < K){\n            min_k_heap.insert(test_list[i]);\n        }\n        else{\n            if(test_list[i][0] > min_k_heap.top()[0]){\n                min_k_heap.pop();\n                min_k_heap.insert(test_list[i]);\n            }\n        }\n    }\n    while(min_k_heap.size() > 0){\n        min_k.push(min_k_heap.pop());\n    }\n    return min_k;\n    //end\n}\n",
    "    //code here\n    var min_k = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_k[K-1][1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a,b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k;\n}\n"
  ]
}
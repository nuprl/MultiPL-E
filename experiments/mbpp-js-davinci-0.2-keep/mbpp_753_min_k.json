{
  "name": "mbpp_753_min_k",
  "language": "js",
  "prompt": "//Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\nfunction min_k(test_list, K){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_753_min_k.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_k;\n  assert.deepEqual(candidate([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]]);\n  assert.deepEqual(candidate([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]]);\n  assert.deepEqual(candidate([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    //start\n    //sort list\n    test_list.sort();\n    //return first k elements\n    return test_list.slice(0,K);\n}\n",
    "    var min_k_list = [];\n    for(var i=0; i<K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [['Geeks', 10], ['for', 15], ['Geeks', 20]]; \nvar K = 2; ",
    "    // start\n    //print(\"Input: \" + str(test_list))\n    //print(\"K: \" + str(K))\n    //print(\"Output: \" + str(sorted(test_list, key = lambda x: x[0])[:K]))\n    //print(\"\")\n    // end\n    return sorted(test_list, key = lambda x: x[0])[:K]\n}\n",
    "    // code here\n    let min_k_list = [];\n    for(let i = 0; i < K; i++){\n        let min_k_value = test_list[i][1];\n        let min_k_index = i;\n        for(let j = i; j < test_list.length; j++){\n            if(test_list[j][1] < min_k_value){\n                min_k_value = test_list[j][1];\n                min_k_index = j;\n            }\n        }\n        min_k_list.push(test_list[min_k_index]);\n        let temp = test_list[i];\n        test_list[i] = test_list[min_k_index];\n        test_list[min_k_index] = temp;\n    }\n    return min_k_list;\n}\n",
    "    test_list.sort(function(a,b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n\nvar test_list = [[1, 2], [3, 4], [1, -1]];\nvar K = 2;",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    return min_k_list;\n}\n",
    "    test_list.sort(function(a, b){return a[1] - b[1]});\n    var res = [];\n    for(var i = 0; i < K; i++){\n        res.push(test_list[i][0]);\n    }\n    return res;\n}\n",
    "    //code here\n    var min_k_list = test_list.slice(0, K);\n    min_k_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_count = 0;\n    var min_k_list_index_count_max = K;\n    var min_k_list_index_count_max_minus_one = K - 1;\n    var min_k_list_index_count_max_minus_two = K - 2;\n    var min_k_list_index_count_max_minus_three = K - 3;\n    var min_k_list_index_count_max_minus_four = K - 4;\n    var min_k_list_index_count_max_minus_five = K - 5;\n    var min_k_list_index_count_max_minus_six = K - 6;\n    var min_k_list_index_count_max_minus_seven = K - 7;\n    var min_k_list_index_count_max_minus_eight = K - 8;\n    var min_k_list_index_count_max_minus_nine = K - 9;\n    var min_k_list_index_count_max_minus_ten = K - 10;\n    var min_k_list_index_count_max_minus_eleven = K - 11;\n    var min_k_list_index_count_max_minus_twelve = K - 12;\n    var min_k_list_index_count_max_minus_thirteen = K - 13;\n    var min_k_list_index_count_max_minus_fourteen = K - 14;\n    var min_k_list_index_count_max_minus_fifteen = K - 15;\n    var min_k_list_index_count_max_minus_sixteen = K - 16;\n    var min_k_list_index_count_max_minus_seventeen = K - 17;\n    var min_k_list_index_count_max_minus_eighteen = K - 18;\n    var min_k_list_index_count_max_minus_nineteen = K - 19;\n    var min_k_list_index_",
    "    //code here\n    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_value = [];\n    var min_k_index_value_index = [];\n    var min_k_index_value_index_value = [];\n    var min_k_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_index_value_index_",
    "    //start\n    //sort the list\n    test_list.sort(function(a, b){return a[1] - b[1]});\n    //return the first k elements\n    return test_list.slice(0, K);\n    //end\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][0] < min_k[K - 1][0]){\n            min_k[K - 1] = test_list[i];\n            min_k.sort(function(a, b){\n                return a[0] - b[0];\n            });\n        }\n    }\n    return min_k;\n}\n",
    "    var min_list = [];\n    for(var i=0; i<K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i][0] < min_list[K-1][0]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[0] - b[0];\n            });\n        }\n    }\n    return min_list;\n}\n",
    "    //code here\n    var min = test_list[0][1];\n    var min_index = 0;\n    var min_list = [];\n    for(var i = 0; i < K; i++){\n        for(var j = 0; j < test_list.length; j++){\n            if(test_list[j][1] < min){\n                min = test_list[j][1];\n                min_index = j;\n            }\n        }\n        min_list.push(test_list[min_index]);\n        test_list.splice(min_index, 1);\n        min = test_list[0][1];\n    }\n    return min_list;\n}\n",
    "    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_list[K-1][1]){\n            min_list[K-1] = test_list[i];\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n}\n\nvar test_list = [['Geeks', 10], ['for', 15], ['Geeks', 20]];\nvar K = 2;",
    "    //start\n    var min_list = [];\n    var min_list_size = 0;\n    var min_list_index = 0;\n    var min_list_index_size = 0;\n    var min_list_index_size_value = 0;\n    var min_list_index_size_value_index = 0;\n    var min_list_index_size_value_index_list = [];\n    var min_list_index_size_value_index_list_size = 0;\n    var min_list_index_size_value_index_list_size_value = 0;\n    var min_list_index_size_value_index_list_size_value_index = 0;\n    var min_list_index_size_value_index_list_size_value_index_list = [];\n    var min_list_index_size_value_index_list_size_value_index_list_size = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list = [];\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list_size = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list_size_value = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list_size_value_index = 0;\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list_size_value_index_list = [];\n    var min_list_index_size_value_index_list_size_value_index_list_size_value_index_list_size",
    "    test_list.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    // code here\n    var min_k_list = [];\n    for(var i=0;i<test_list.length;i++){\n        min_k_list.push(test_list[i][1]);\n    }\n    min_k_list.sort(function(a,b){return a-b});\n    var min_k_list_final = [];\n    for(var i=0;i<K;i++){\n        min_k_list_final.push(min_k_list[i]);\n    }\n    return min_k_list_final;\n}\n",
    "    //start\n    var min_k = [];\n    var min_k_set = new Set();\n    var min_k_heap = new MinHeap();\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_heap.size() < K){\n            min_k_heap.insert(test_list[i]);\n        }\n        else{\n            if(test_list[i][0] > min_k_heap.top()[0]){\n                min_k_heap.pop();\n                min_k_heap.insert(test_list[i]);\n            }\n        }\n    }\n    while(min_k_heap.size() > 0){\n        min_k.push(min_k_heap.pop());\n    }\n    return min_k;\n    //end\n}\n",
    "    //code here\n    var min_k = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_k[K-1][1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a,b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k;\n}\n",
    "    //start\n    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][0] < min_list[K-1][0]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[0] - b[0];\n            });\n        }\n    }\n    return min_list;\n    //end\n}\n",
    "    // test_list.sort(key = lambda x: x[1])\n    test_list.sort((a, b) => a[1] - b[1]);\n    var min_k = test_list.slice(0, K);\n    return min_k;\n}\n",
    "    //start\n    var min_k = [];\n    var min_k_set = new Set();\n    var min_k_set_size = 0;\n    var min_k_set_max_size = K;\n    var min_k_set_max_size_reached = false;\n    var min_k_set_max_size_reached_index = 0;\n    var min_k_set_max_size_reached_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value_index_value_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value_index_value_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_",
    "    //code here\n    var min_k = [];\n    for (var i = 0; i < test_list.length; i++) {\n        min_k.push(test_list[i][1]);\n    }\n    min_k.sort(function(a, b){return a-b});\n    return min_k.slice(0, K);\n}\n",
    "    // code here\n    var min_k_list = [];\n    for(var i=0; i<K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a,b){return a[1] - b[1]});\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list.pop();\n            min_k_list.push(test_list[i]);\n            min_k_list.sort(function(a,b){return a[1] - b[1]});\n        }\n    }\n    return min_k_list;\n}\n",
    "    // start\n    // initializing the list of K minimum elements\n    min_list = test_list[0:K]\n    // using sorted() function to sort the min_list\n    min_list = sorted(min_list, key = lambda x: x[1])\n    // looping through the remaining elements\n    for i in range(K, len(test_list)):\n        # comparing the ith element of the list with the largest element of the min_list\n        if test_list[i][1] < min_list[-1][1]:\n            # if the condition satisfies, then replace the largest element with the ith element\n            min_list[-1] = test_list[i]\n            # again sort the min_list\n            min_list = sorted(min_list, key = lambda x: x[1])\n    # printing the min_list\n    print(\"The minimum k records are : \" + str(min_list))\n    // end\n}\n",
    "    //start\n    var min_k = [];\n    var min_k_set = new Set();\n    var min_k_set_size = 0;\n    var min_k_size = 0;\n    var min_k_index = 0;\n    var min_k_index_size = 0;\n    var min_k_index_set = new Set();\n    var min_k_index_set_size = 0;\n    var min_k_index_set_size_size = 0;\n    var min_k_index_set_size_size_size = 0;\n    var min_k_index_set_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size_size_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size_size_size_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size_size_size_size_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size_size_size_size_size_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size_size_size_size_size_size_size_size_size_size = 0;\n    var min_k_index_set_size_size_size_size_size_size_size_size_size_size_size_size",
    "    // start\n    // Initialize result list\n    var min_list = [];\n    // Iterate through all tuple\n    for (var i = 0; i < test_list.length; i++) {\n        // If length of result list is less than K\n        if (min_list.length < K) {\n            // Append tuple to result list\n            min_list.push(test_list[i]);\n        }\n        // Else\n        else {\n            // Sort the result list\n            min_list.sort(function(a, b) {\n                return a[1] - b[1];\n            });\n            // If first element of result list is greater than current tuple\n            if (min_list[0][1] > test_list[i][1]) {\n                // Replace first element with current tuple\n                min_list[0] = test_list[i];\n            }\n        }\n    }\n    // Sort the result list\n    min_list.sort(function(a, b) {\n        return a[1] - b[1];\n    });\n    // Return result list\n    return min_list;\n    // end\n}\n",
    "    //start\n    var result = [];\n    var len_list = test_list.length;\n    if (len_list < K){\n        return \"Invalid\";\n    }\n    for (var i = 0; i < len_list; i++){\n        result.push(test_list[i][1]);\n    }\n    result.sort(function(a, b){return a-b});\n    return result.slice(0, K);\n    //end\n}\n",
    "    test_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    //code here\n    let min_k = [];\n    for(let i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort((a,b) => a[1] - b[1]);\n    for(let i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k[K-1][1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort((a,b) => a[1] - b[1]);\n        }\n    }\n    return min_k;\n}\n",
    "    //start\n    var result = [];\n    var min = test_list[0][0];\n    var min_index = 0;\n    for(var i = 0; i < K; i++){\n        for(var j = 0; j < test_list.length; j++){\n            if(test_list[j][0] < min){\n                min = test_list[j][0];\n                min_index = j;\n            }\n        }\n        result.push(test_list[min_index]);\n        test_list.splice(min_index, 1);\n        min = test_list[0][0];\n    }\n    return result;\n    //end\n}\n",
    "    //start\n    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_list[K-1][1]){\n            min_list[K-1] = test_list[i];\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n    //end\n}\n",
    "    //start\n    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_list[K-1][1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n    //end\n}\n",
    "    // start\n    //print(\"test_list:\", test_list)\n    //print(\"K:\", K)\n    var min_list = []\n    var min_list_len = 0\n    var min_list_max = 0\n    var min_list_max_index = 0\n    for (var i = 0; i < test_list.length; i++){\n        if (min_list_len < K){\n            min_list.push(test_list[i])\n            min_list_len += 1\n            if (test_list[i][1] > min_list_max){\n                min_list_max = test_list[i][1]\n                min_list_max_index = min_list_len - 1\n            }\n        } else {\n            if (test_list[i][1] < min_list_max){\n                min_list[min_list_max_index] = test_list[i]\n                min_list_max = min_list[0][1]\n                min_list_max_index = 0\n                for (var j = 1; j < min_list_len; j++){\n                    if (min_list[j][1] > min_list_max){\n                        min_list_max = min_list[j][1]\n                        min_list_max_index = j\n                    }\n                }\n            }\n        }\n    }\n    return min_list\n    // end\n}\n",
    "    // start\n    // sorting the list \n    test_list.sort(key = lambda x: x[1]) \n  \n    # printing the first K records \n    for i in range(K): \n        print(test_list[i][0], end = \" \") \n}\n",
    "    //start\n    var min_list = [];\n    var min_list_len = 0;\n    var min_list_index = 0;\n    var min_list_index_len = 0;\n    var min_list_index_len_index = 0;\n    var min_list_index_len_index_len = 0;\n    var min_list_index_len_index_len_index = 0;\n    var min_list_index_len_index_len_index_len = 0;\n    var min_list_index_len_index_len_index_len_index = 0;\n    var min_list_index_len_index_len_index_len_index_len = 0;\n    var min_list_index_len_index_len_index_len_index_len_index = 0;\n    var min_list_index_len_index_len_index_len_index_len_index_len = 0;\n    var min_list_index_len_index_len_index_len_index_len_index_len_index = 0;\n    var min_list_index_len_index_len_index_len_index_len_index_len_index_len = 0;\n    var min_list_index_len_index_len_index_len_index_len_index_len_index_len_index = 0;\n    var min_list_index_len_index_len_index_len_index_len_index_len_index_len_index_len = 0;\n    var min_list_index_len_index_len_index_len_index_len_index_len_index_len_index_len_index = 0;\n    var min_list_index_len_index_len_index_len_index_len_index_len_index_len_index_len_index_len = 0;\n    var min_list_index_len_index_len_index_len_index_len_index_len_index_len_index_len_index_len_index = 0;\n    var min_list_index_len_index_len_index_len_index_len_index_len_index_len",
    "    var min_k = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a,b){return a[1]-b[1]});\n            if (test_list[i][1] < min_k[0][1]){\n                min_k.pop();\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    // start\n    // sorting the list \n    test_list.sort(function(a, b){return a[1] - b[1]}) \n      \n    // printing the first K records \n    for (var i = 0; i < K; i++) \n        console.log(test_list[i][0], test_list[i][1]) \n    // end\n}\n",
    "    //print(test_list)\n    //print(K)\n    test_list.sort(function(a,b){\n        return a[0] - b[0]\n    })\n    //print(test_list)\n    var res = []\n    for(var i = 0; i < K; i++){\n        res.push(test_list[i])\n    }\n    return res\n}\n",
    "    test_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    // start\n    // sorting the list \n    test_list.sort(function(a, b){return a[1]-b[1]}) \n      \n    // printing the first K records \n    for (let i = 0; i < K; i++) { \n        console.log(test_list[i][0], test_list[i][1]) \n    } \n}\n",
    "    //start\n    var min_k = [];\n    var min_k_set = new Set();\n    var min_k_heap = new MinHeap();\n    var min_k_heap_set = new Set();\n    var min_k_heap_list = [];\n    var min_k_heap_list_set = new Set();\n    var min_k_heap_list_heap = new MinHeap();\n    var min_k_heap_list_heap_set = new Set();\n    var min_k_heap_list_heap_list = [];\n    var min_k_heap_list_heap_list_set = new Set();\n    var min_k_heap_list_heap_list_heap = new MinHeap();\n    var min_k_heap_list_heap_list_heap_set = new Set();\n    var min_k_heap_list_heap_list_heap_list = [];\n    var min_k_heap_list_heap_list_heap_list_set = new Set();\n    var min_k_heap_list_heap_list_heap_list_heap = new MinHeap();\n    var min_k_heap_list_heap_list_heap_list_heap_set = new Set();\n    var min_k_heap_list_heap_list_heap_list_heap_list = [];\n    var min_k_heap_list_heap_list_heap_list_heap_list_set = new Set();\n    var min_k_heap_list_heap_list_heap_list_heap_list_heap = new MinHeap();\n    var min_k_heap_list_heap_list_heap_list_heap_list_heap_set = new Set();\n    var min_k_heap_list_heap_list_heap_list_heap_list_heap_list = [];\n    var min_k_heap_list_heap_list_heap_list_heap_",
    "    //code here\n    var min_k_list = [];\n    for(var i=0; i<K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [['Geeks', 10], ['for', 15], ['Geeks', 20]];\nvar K = 2;",
    "    //Sort the list in ascending order\n    test_list.sort(function(a, b){return a[0] - b[0]});\n    //Print the first K records\n    for(var i = 0; i < K; i++){\n        console.log(test_list[i]);\n    }\n}\n",
    "    // start with empty list\n    var min_list = [];\n    // traverse in the list\n    for (var i = 0; i < test_list.length; i++) {\n        // if list contains less then K elements\n        if (min_list.length < K) {\n            min_list.push(test_list[i]);\n        }\n        else {\n            // sort the list\n            min_list.sort(function (a, b) {\n                return a[0] - b[0];\n            });\n            // if current element of list is less then last element of min_list\n            if (test_list[i][0] < min_list[min_list.length - 1][0]) {\n                // replace last element\n                min_list[min_list.length - 1] = test_list[i];\n            }\n        }\n    }\n    // sort the min_list\n    min_list.sort(function (a, b) {\n        return a[0] - b[0];\n    });\n    // return min_list\n    return min_list;\n}\n",
    "    // start\n    // Initialize result list\n    var min_list = [];\n    // Iterate through all the elements\n    for (var i = 0; i < test_list.length; i++) {\n        // If size of min_list is less than K\n        if (min_list.length < K) {\n            // Append the element to min_list\n            min_list.push(test_list[i]);\n        }\n        else {\n            // Sort the min_list\n            min_list.sort(function (a, b) { return a[0] - b[0] });\n            // If the element to be appended is less than the last element of min_list\n            if (test_list[i][0] < min_list[min_list.length - 1][0]) {\n                // Remove the last element\n                min_list.pop();\n                // Append the current element\n                min_list.push(test_list[i]);\n            }\n        }\n    }\n    // Sort the min_list\n    min_list.sort(function (a, b) { return a[0] - b[0] });\n    // Return the min_list\n    return min_list;\n    // end\n}\n",
    "    // start with empty list\n    var min_list = [];\n    // loop through the list\n    for (var i = 0; i < test_list.length; i++){\n        // if the list is empty, add the first element\n        if (min_list.length == 0){\n            min_list.push(test_list[i]);\n        }\n        // if the list is not empty, compare the current element with the last element in the list\n        else{\n            // if the current element is smaller than the last element in the list, add it to the list\n            if (test_list[i] < min_list[min_list.length-1]){\n                min_list.push(test_list[i]);\n            }\n            // if the current element is larger than the last element in the list, compare it with the first element in the list\n            else if (test_list[i] > min_list[min_list.length-1]){\n                // if the current element is smaller than the first element in the list, replace the first element with the current element\n                if (test_list[i] < min_list[0]){\n                    min_list[0] = test_list[i];\n                }\n                // if the current element is larger than the first element in the list, compare it with the second element in the list\n                else if (test_list[i] > min_list[0]){\n                    // if the current element is smaller than the second element in the list, replace the second element with the current element\n                    if (test_list[i] < min_list[1]){\n                        min_list[1] = test_list[i];\n                    }\n                    // if the current element is larger than the second element in the list, compare it with the third element in the list\n                    else if (test_list[i] > min_list[1]){\n                        // if the current element is smaller than the third element in the list, replace the third element with the current element\n                        if (test_list[i] < min_list[2]){\n                            min_list[2] = test_list[i];\n                        }\n                        // if the current element is larger than the third element in the",
    "    test_list.sort(function(a,b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n\nvar test_list = [[1,2], [3,4], [1,2], [5,6], [7,8], [1,2], [3,4], [3,4], [7,8], [9,10]];\nvar K = 5;",
    "    test_list.sort(function(a, b){return a[0] - b[0]});\n    var result = [];\n    for(var i = 0; i < K; i++){\n        result.push(test_list[i]);\n    }\n    return result;\n}\n",
    "    test_list.sort(function(a, b) {\n        return a[0] - b[0];\n    });\n    var min_k = test_list.slice(0, K);\n    return min_k;\n}\n\nvar test_list = [[1, 2], [3, 4], [1, -1], [5, 6], [7, 8]];\nvar K = 3;",
    "    test_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    //code here\n    var min_k_list = [];\n    for(var i=0; i<K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list.pop();\n            min_k_list.push(test_list[i]);\n            min_k_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k_list;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    return min_k_list;\n}\n",
    "    // start\n    // initialize a list to store the result\n    var result = [];\n    // sort the list in ascending order\n    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    // iterate K times\n    for(var i = 0; i < K; i++){\n        // append the first K elements to the result\n        result.push(test_list[i]);\n    }\n    // return result\n    return result;\n    // end\n}\n\nvar test_list = [ [1, 2], [3, 4], [1, -1] ];\nvar K = 2;",
    "    //start\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k[K-1][1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k;\n    //end\n}\n",
    "    //code here\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_count = 0;\n    var min_k_list_index_count_max = K;\n    var min_k_list_index_count_max_minus_one = K - 1;\n    var min_k_list_index_count_max_minus_one_plus_one = K;\n    var min_k_list_index_count_max_minus_one_plus_one_minus_one = K - 1;\n    var min_k_list_index_count_max_minus_one_plus_one_minus_one_plus_one = K;\n    var min_k_list_index_count_max_minus_one_plus_one_minus_one_plus_one_minus_one = K - 1;\n    var min_k_list_index_count_max_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one = K;\n    var min_k_list_index_count_max_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one = K - 1;\n    var min_k_list_index_count_max_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one = K;\n    var min_k_list_index_count_max_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one = K - 1;\n    var min_k_list_index_count_max_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one = K;\n    var min_k_list_index_count_max_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_",
    "    var min_list = [];\n    for (var i = 0; i < K; i++) {\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for (var i = K; i < test_list.length; i++) {\n        if (test_list[i][1] < min_list[K - 1][1]) {\n            min_list[K - 1] = test_list[i];\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n}\n",
    "    test_list.sort(function(a,b){\n        return a[0] - b[0];\n    });\n    var res = [];\n    for(var i = 0; i < K; i++){\n        res.push(test_list[i]);\n    }\n    return res;\n}\n\nvar test_list = [[1,2], [3,4], [1,2], [5,6], [7,8], [1,2], [3,4], [3,4], [7,8], [9,0]];\nvar K = 5;",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a,b){return a[1] - b[1]});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_list[K-1][1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a,b){return a[1] - b[1]});\n        }\n    }\n    return min_list;\n}\n\nvar test_list = [['Geeks', 10], ['for', 15], ['Geeks', 20]];\nvar K = 2;",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_list[K-1][1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n}\n",
    "    //code here\n    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_list[K-1][1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n}\n",
    "    //start\n    test_list.sort(function(a,b){\n        return a[0] - b[0];\n    });\n    var final_list = [];\n    for(var i = 0; i < K; i++){\n        final_list.push(test_list[i][1]);\n    }\n    return final_list;\n    //end\n}\n",
    "    //code here\n    test_list.sort((a,b)=>a[1]-b[1]);\n    return test_list.slice(0,K);\n}\n",
    "    // start\n    // sorting the list \n    test_list.sort(function(a, b){return a[0] - b[0]}) \n      \n    // printing the first K numbers \n    for (var i = 0; i < K; i++) \n        console.log(test_list[i][0], test_list[i][1]) \n    // end\n}\n",
    "    //Sort the list in ascending order\n    test_list.sort();\n\n    //Print the first k numbers\n    for(let i = 0; i < K; i++){\n        console.log(test_list[i]);\n    }\n}\n",
    "    test_list.sort(function(a,b){\n        return a[0]-b[0];\n    });\n    var output = [];\n    for(var i = 0; i < K; i++){\n        output.push(test_list[i]);\n    }\n    return output;\n}\n",
    "    test_list.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][0] < min_list[K-1][0]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[0] - b[0];\n            });\n        }\n    }\n    return min_list;\n}\n\nvar test_list = [[1, 2], [3, 4], [1, -1], [5, 6], [7, 8]];\nvar K = 3;",
    "    // start\n    // Initialize result list\n    var min_list = [];\n    // Iterate through all the elements\n    for (var i = 0; i < test_list.length; i++) {\n        // If size of min_list is less than K\n        if (min_list.length < K) {\n            min_list.push(test_list[i]);\n        }\n        else {\n            // Sort the min_list\n            min_list.sort(function(a, b) {\n                return a[0] - b[0];\n            });\n            // If last element of min_list is greater than\n            // current element, then replace it\n            if (min_list[min_list.length - 1][0] > test_list[i][0]) {\n                min_list[min_list.length - 1] = test_list[i];\n            }\n        }\n    }\n    // Sort the min_list\n    min_list.sort(function(a, b) {\n        return a[0] - b[0];\n    });\n    // Return the min_list\n    return min_list;\n    // end\n}\n",
    "    //start\n    let min_list = [];\n    for (let i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort((a, b) => a[1] - b[1]);\n    for (let i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_list[K - 1][1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort((a, b) => a[1] - b[1]);\n        }\n    }\n    return min_list;\n}\n",
    "    // start\n    // sorting the list \n    test_list.sort(function(a, b){return a[1]-b[1]}) \n      \n    // printing the first k numbers \n    var res = []\n    for (var i = 0; i < K; i++) \n        res.push(test_list[i][0]) \n    return res\n    // end\n}\n",
    "    let min_k = [];\n    for(let i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort((a,b) => a[1] - b[1]);\n    for(let i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k[K-1][1]){\n            min_k.pop();\n            min_k.push(test_list[i]);\n            min_k.sort((a,b) => a[1] - b[1]);\n        }\n    }\n    return min_k;\n}\n",
    "    test_list.sort(function(a,b){\n        return a[0] - b[0];\n    });\n    var output = [];\n    for(var i = 0; i < K; i++){\n        output.push(test_list[i]);\n    }\n    return output;\n}\n",
    "    //code here\n    //return list of tuples\n    return test_list.sort((a,b)=>a[1]-b[1]).slice(0,K);\n}\n",
    "    // start\n    // initializing result list\n    var result = [];\n    // initializing minimum value\n    var min = test_list[0][0];\n    // initializing maximum value\n    var max = test_list[0][0];\n    // looping through the list\n    for (var i = 0; i < test_list.length; i++){\n        // if current value is less than minimum\n        if (test_list[i][0] < min){\n            // update minimum\n            min = test_list[i][0];\n        }\n        // if current value is greater than maximum\n        if (test_list[i][0] > max){\n            // update maximum\n            max = test_list[i][0];\n        }\n    }\n    // looping through the list\n    for (var i = 0; i < test_list.length; i++){\n        // if current value is equal to minimum\n        if (test_list[i][0] == min){\n            // append current value to result list\n            result.push(test_list[i]);\n        }\n        // if current value is equal to maximum\n        if (test_list[i][0] == max){\n            // append current value to result list\n            result.push(test_list[i]);\n        }\n    }\n    // return result list\n    return result;\n    // end\n}\n",
    "    // start\n    // get the length of the list\n    var len = test_list.length;\n    // sort the list\n    test_list.sort(function(a, b){return a[0] - b[0]});\n    // return the first k elements\n    return test_list.slice(0, K);\n    // end\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    // start with empty list\n    var min_list = [];\n    // loop through the list\n    for (var i = 0; i < test_list.length; i++){\n        // if the list is empty, add the first element\n        if (min_list.length == 0){\n            min_list.push(test_list[i]);\n        }\n        // if the list is not empty, sort it, add the next element, and sort it again\n        else{\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){return a[1] - b[1]});\n        }\n        // if the list is longer than K, remove the last element\n        if (min_list.length > K){\n            min_list.pop();\n        }\n    }\n    // return the list\n    return min_list;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    return min_k_list;\n}\n",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_val = Math.max(...min_list);\n        if(test_list[i] < max_val){\n            min_list.splice(min_list.indexOf(max_val), 1);\n            min_list.push(test_list[i]);\n        }\n    }\n    return min_list;\n}\n",
    "    //code here\n    return test_list.sort((a,b) => a[0] - b[0]).slice(0,K);\n}\n",
    "    test_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    var res = [];\n    for(var i = 0; i < K; i++){\n        res.push(test_list[i][0]);\n    }\n    return res;\n}\n",
    "    test_list.sort(function(a,b){\n        return a[0] - b[0]\n    })\n    var min_list = []\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i])\n    }\n    return min_list\n}\n",
    "    // start\n    // sorting the list\n    test_list.sort(function(a, b){return a[0] - b[0]});\n    // printing the last k elements\n    var n = test_list.length;\n    for (var i = 0; i < K; i++){\n        console.log(test_list[n - i - 1]);\n    }\n    // end\n}\n",
    "    // code here\n    var result = [];\n    var min = test_list[0][1];\n    var max = test_list[0][1];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n        }\n        if(test_list[i][1] > max){\n            max = test_list[i][1];\n        }\n    }\n    var count = 0;\n    while(count < K){\n        var min_index = 0;\n        for(var i = 0; i < test_list.length; i++){\n            if(test_list[i][1] < test_list[min_index][1]){\n                min_index = i;\n            }\n        }\n        result.push(test_list[min_index]);\n        test_list[min_index][1] = max;\n        count++;\n    }\n    return result;\n}\n",
    "    //start\n    var min_k = test_list.slice(0, K);\n    var min_k = min_k.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_k[K - 1][1]){\n            min_k.pop();\n            min_k.push(test_list[i]);\n            min_k = min_k.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k;\n    //end\n}\n\nvar test_list = [['Geeks', 10], ['for', 15], ['Geeks', 20]];\nvar K = 2;",
    "    // code here\n    var min_k = test_list.slice(0, K);\n    min_k.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k[K - 1][1]){\n            min_k[K - 1] = test_list[i];\n            min_k.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k;\n}\n",
    "    //start\n    var result = [];\n    var n = test_list.length;\n    for(var i = 0; i < n; i++){\n        if(i < K){\n            result.push(test_list[i]);\n        }\n        else{\n            result.sort(function(a, b){\n                return a[1] - b[1];\n            });\n            if(test_list[i][1] < result[K-1][1]){\n                result[K-1] = test_list[i];\n            }\n        }\n    }\n    return result;\n    //end\n}\n",
    "    test_list.sort(function(a,b){\n        return a[0] - b[0];\n    });\n    var output = [];\n    for(var i = 0; i < K; i++){\n        output.push(test_list[i]);\n    }\n    return output;\n}\n",
    "    test_list.sort(function(a,b){\n        return a[0]-b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    // code here\n    var min_k = []\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k.length < K){\n            min_k.push(test_list[i])\n        }\n        else{\n            var max = Math.max(...min_k)\n            if (test_list[i] < max){\n                min_k.splice(min_k.indexOf(max), 1)\n                min_k.push(test_list[i])\n            }\n        }\n    }\n    return min_k\n}\n",
    "    // sort the list in ascending order\n    test_list.sort(function(a, b){return a[1] - b[1]})\n    // return first k elements\n    return test_list.slice(0, K)\n}\n",
    "    //code here\n    var min_k = [];\n    var min_k_dict = {};\n    var min_k_set = new Set();\n    var min_k_dict_set = new Set();\n    var min_k_dict_set_list = [];\n    var min_k_dict_set_list_dict = {};\n    var min_k_dict_set_list_dict_set = new Set();\n    var min_k_dict_set_list_dict_set_list = [];\n    var min_k_dict_set_list_dict_set_list_dict = {};\n    var min_k_dict_set_list_dict_set_list_dict_set = new Set();\n    var min_k_dict_set_list_dict_set_list_dict_set_list = [];\n    var min_k_dict_set_list_dict_set_list_dict_set_list_dict = {};\n    var min_k_dict_set_list_dict_set_list_dict_set_list_dict_set = new Set();\n    var min_k_dict_set_list_dict_set_list_dict_set_list_dict_set_list = [];\n    var min_k_dict_set_list_dict_set_list_dict_set_list_dict_set_list_dict = {};\n    var min_k_dict_set_list_dict_set_list_dict_set_list_dict_set_list_dict_set = new Set();\n    var min_k_dict_set_list_dict_set_list_dict_set_list_dict_set_list_dict_set_list = [];\n    var min_k_dict_set_list_dict_set_list_dict_set_list_dict_set_list_dict_set_list_dict = {};\n    var min_k_dict_set_list_dict_set_list_dict_set_list_dict_set_list_dict_set_list_dict_set = new Set();\n    var min_k_dict_set_list_dict_set_list_dict_set_list_dict_",
    "    test_list.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a,b){return a[1] - b[1]});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list.pop();\n            min_k_list.push(test_list[i]);\n            min_k_list.sort(function(a,b){return a[1] - b[1]});\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [['Geeks', 10], ['for', 15], ['Geeks', 20]]; \nvar K = 2; ",
    "    //start\n    var min_list = [];\n    for (var i = 0; i < test_list.length; i++){\n        min_list.push(test_list[i][1]);\n    }\n    min_list.sort();\n    var min_k = min_list.slice(0, K);\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k.includes(test_list[i][1])){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n    //end\n}\n",
    "    // start\n    // initialize a list to store the result\n    var result = [];\n    // sort the list\n    test_list.sort(function(a, b){return a[0] - b[0]});\n    // print the first k elements\n    for (var i = 0; i < K; i++){\n        result.push(test_list[i]);\n    }\n    // return result\n    return result;\n    // end\n}\n",
    "    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_list[K - 1][1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n}\n",
    "    // print the final list \n    print(test_list[:K]) \n}\n\ntest_list = [(1, 2), (3, 4), (1, -1), (6, 0), (11, 11), (2, 3)] \nK = 2\nmin_k(test_list, K) \n",
    "    test_list.sort(function(a,b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n\nvar test_list = [[1,2], [3,4], [1,2], [5,6], [7,8], [1,2], [3,4], [3,4], [7,8], [9,10]];\nvar K = 5;",
    "    //start\n    var min_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        min_list.push(test_list[i][1]);\n    }\n    min_list.sort(function(a, b){return a - b});\n    var final_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] <= min_list[K - 1]){\n            final_list.push(test_list[i]);\n        }\n    }\n    return final_list;\n    //end\n}\n",
    "    //sort the list\n    test_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    //slice the list\n    var min_k = test_list.slice(0, K);\n    //return the list\n    return min_k;\n}\n",
    "    // start\n    // initializing result list\n    var result = [];\n    // initializing min_value\n    var min_value = test_list[0][0];\n    // initializing min_index\n    var min_index = 0;\n    // looping through the list\n    for (var i = 0; i < K; i++) {\n        // looping through the list\n        for (var j = 0; j < test_list.length; j++) {\n            // checking condition\n            if (test_list[j][0] < min_value) {\n                // updating min_value\n                min_value = test_list[j][0];\n                // updating min_index\n                min_index = j;\n            }\n        }\n        // appending min_value to result\n        result.push(test_list[min_index]);\n        // removing min_value from test_list\n        test_list.splice(min_index, 1);\n        // updating min_value\n        min_value = test_list[0][0];\n    }\n    // returning result\n    return result;\n    // end\n}",
    "    // code here\n    let min_k_list = [];\n    let min_k_list_index = [];\n    let min_k_list_index_value = [];\n    let min_k_list_index_value_index = [];\n    let min_k_list_index_value_index_value = [];\n    let min_k_list_index_value_index_value_index = [];\n    let min_k_list_index_value_index_value_index_value = [];\n    let min_k_list_index_value_index_value_index_value_index = [];\n    let min_k_list_index_value_index_value_index_value_index_value = [];\n    let min_k_list_index_value_index_value_index_value_index_value_index = [];\n    let min_k_list_index_value_index_value_index_value_index_value_index_value = [];\n    let min_k_list_index_value_index_value_index_value_index_value_index_value_index = [];\n    let min_k_list_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    let min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    let min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    let min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    let min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    let min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    let min_k_list_index_value_index_value_index_value_",
    "    //code here\n    var min_k = test_list.slice(0, K);\n    for (var i = K; i < test_list.length; i++){\n        var max_of_min_k = Math.max.apply(null, min_k);\n        if (test_list[i] < max_of_min_k){\n            min_k.splice(min_k.indexOf(max_of_min_k), 1, test_list[i]);\n        }\n    }\n    return min_k;\n}\n",
    "    //sort the list\n    test_list.sort(function(a,b){\n        return a[0] - b[0]\n    })\n    //return the first K elements\n    return test_list.slice(0,K)\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_list[K-1][1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n}\n",
    "    //Sort the list in ascending order\n    test_list.sort();\n    //Print the first K elements\n    for(var i = 0; i < K; i++){\n        console.log(test_list[i]);\n    }\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = test_list.slice(0, K);\n    return min_k;\n}\n",
    "    // code here\n    var min_k = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (i < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            var max_k = Math.max(...min_k);\n            if (test_list[i] < max_k){\n                min_k.splice(min_k.indexOf(max_k), 1);\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    //start\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_count = 0;\n    var min_k_list_index_count_max = K;\n    var min_k_list_index_count_max_minus_1 = K - 1;\n    var min_k_list_index_count_max_minus_2 = K - 2;\n    var min_k_list_index_count_max_minus_3 = K - 3;\n    var min_k_list_index_count_max_minus_4 = K - 4;\n    var min_k_list_index_count_max_minus_5 = K - 5;\n    var min_k_list_index_count_max_minus_6 = K - 6;\n    var min_k_list_index_count_max_minus_7 = K - 7;\n    var min_k_list_index_count_max_minus_8 = K - 8;\n    var min_k_list_index_count_max_minus_9 = K - 9;\n    var min_k_list_index_count_max_minus_10 = K - 10;\n    var min_k_list_index_count_max_minus_11 = K - 11;\n    var min_k_list_index_count_max_minus_12 = K - 12;\n    var min_k_list_index_count_max_minus_13 = K - 13;\n    var min_k_list_index_count_max_minus_14 = K - 14;\n    var min_k_list_index_count_max_minus_15 = K - 15;\n    var min_k_list_index_count_max_minus_16 = K - 16;\n    var min_k_list_index_count_max_minus_17 = K - 17;\n    var min_k_list_index_count_max_minus_18 = K - 18;\n    var min_k_list_index_count_max_minus_19 = K - 19;\n    var min_k_list_index_count_max_minus_",
    "    //start\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k[K-1][1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k;\n    //end\n}\n\nvar test_list = [['Geeks', 10], ['for', 15], ['Geeks', 20]];\nvar K = 2;",
    "    //start\n    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_list[K-1][1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n    //end\n}\n",
    "    //print(test_list)\n    //print(K)\n    var min_k_list = []\n    var min_k_list_index = []\n    var min_k_list_value = []\n    var min_k_list_value_index = []\n    var min_k_list_value_index_value = []\n    var min_k_list_value_index_value_index = []\n    var min_k_list_value_index_value_index_value = []\n    var min_k_list_value_index_value_index_value_index = []\n    var min_k_list_value_index_value_index_value_index_value = []\n    var min_k_list_value_index_value_index_value_index_value_index = []\n    var min_k_list_value_index_value_index_value_index_value_index_value = []\n    var min_k_list_value_index_value_index_value_index_value_index_value_index = []\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value = []\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index = []\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value = []\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index = []\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = []\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = []\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value",
    "    // start with empty list\n    var min_list = [];\n    // loop through the list\n    for (var i = 0; i < test_list.length; i++){\n        // if the length of the min_list is less than K\n        if (min_list.length < K){\n            // add the current element to the min_list\n            min_list.push(test_list[i]);\n        }\n        // if the length of the min_list is equal to K\n        else if (min_list.length == K){\n            // sort the min_list\n            min_list.sort(function(a, b){return a[1] - b[1]});\n            // if the current element is less than the last element of the min_list\n            if (test_list[i][1] < min_list[min_list.length - 1][1]){\n                // remove the last element of the min_list\n                min_list.pop();\n                // add the current element to the min_list\n                min_list.push(test_list[i]);\n            }\n        }\n    }\n    // return the min_list\n    return min_list;\n}\n",
    "    //start\n    var min_list = [];\n    //loop through list\n    for(var i = 0; i < test_list.length; i++){\n        //if list is empty, add first item\n        if(min_list.length == 0){\n            min_list.push(test_list[i]);\n        }\n        //if list is not empty\n        else{\n            //loop through list\n            for(var j = 0; j < min_list.length; j++){\n                //if item is less than current item in list\n                if(test_list[i][1] < min_list[j][1]){\n                    //add item to list\n                    min_list.splice(j, 0, test_list[i]);\n                    //if list is longer than K, remove last item\n                    if(min_list.length > K){\n                        min_list.pop();\n                    }\n                    //break\n                    break;\n                }\n                //if item is greater than current item in list\n                else if(test_list[i][1] > min_list[j][1]){\n                    //if item is last item in list\n                    if(j == min_list.length - 1){\n                        //add item to list\n                        min_list.push(test_list[i]);\n                        //if list is longer than K, remove last item\n                        if(min_list.length > K){\n                            min_list.pop();\n                        }\n                        //break\n                        break;\n                    }\n                    //if item is not last item in list\n                    else{\n                        //continue\n                        continue;\n                    }\n                }\n                //if item is equal to current item in list\n                else{\n                    //if item is last item in list\n                    if(j == min_list.length - 1){\n                        //add item to list\n                        min_list.push(test_list[i]);\n                        //if list is longer than K, remove last item\n                        if(min_list.length > K){\n                            min_list.pop();\n                        }\n                        //break\n                        break;\n                    }\n                    //if item is not last item in list\n                    else{\n                        //continue\n                        continue;",
    "    //start\n    var min_list = [];\n    var min_list_size = 0;\n    var i = 0;\n    var j = 0;\n    var min_index = 0;\n    var min_value = 0;\n    var temp = 0;\n    var temp_index = 0;\n    var temp_value = 0;\n    var temp_list = [];\n    var temp_list_size = 0;\n    var temp_list_index = 0;\n    var temp_list_value = 0;\n    var temp_list_index_value = 0;\n    var temp_list_index_value_list = [];\n    var temp_list_index_value_list_size = 0;\n    var temp_list_index_value_list_index = 0;\n    var temp_list_index_value_list_value = 0;\n    var temp_list_index_value_list_index_value = 0;\n    var temp_list_index_value_list_index_value_list = [];\n    var temp_list_index_value_list_index_value_list_size = 0;\n    var temp_list_index_value_list_index_value_list_index = 0;\n    var temp_list_index_value_list_index_value_list_value = 0;\n    var temp_list_index_value_list_index_value_list_index_value = 0;\n    var temp_list_index_value_list_index_value_list_index_value_list = [];\n    var temp_list_index_value_list_index_value_list_index_value_list_size = 0;\n    var temp_list_index_value_list_index_value_list_index_value_list_index = 0;\n    var temp_list_index_value_list_index_value_list_index_value_list_value = 0;\n    var temp_list_index_value_list_index_value_list_index_value_list_index_value = 0;\n    var temp_list_index_value_list_index_value_list_index_value_list_index_value_list = [];\n    var temp",
    "    // code here\n    // return the list of minimum k records\n    return test_list.sort((a,b) => a[1] - b[1]).slice(0,K);\n}\n",
    "    //start\n    //sort the list\n    test_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    //return the first K elements\n    return test_list.slice(0, K);\n}\n",
    "    // code here\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_length = 0;\n    var min_k_list_index_length_max = K;\n    var min_k_list_index_length_max_minus_1 = K - 1;\n    var min_k_list_index_length_max_minus_1_index = 0;\n    var min_k_list_index_length_max_minus_1_index_value = 0;\n    var min_k_list_index_length_max_minus_1_index_value_length = 0;\n    var min_k_list_index_length_max_minus_1_index_value_length_max = 0;\n    var min_k_list_index_length_max_minus_1_index_value_length_max_minus_1 = 0;\n    var min_k_list_index_length_max_minus_1_index_value_length_max_minus_1_index = 0;\n    var min_k_list_index_length_max_minus_1_index_value_length_max_minus_1_index_value = 0;\n    var min_k_list_index_length_max_minus_1_index_value_length_max_minus_1_index_value_length = 0;\n    var min_k_list_index_length_max_minus_1_index_value_length_max_minus_1_index_value_length_max = 0;\n    var min_k_list_index_length_max_minus_1_index_value_length_max_minus_1_index_value_length_max_minus_1 = 0;\n    var min_k_list_index_length_max_minus_1_index_value_length_max_minus_1_index_value_length_max_minus_1_index = 0;\n    var min_k_list_index_length_max_minus_1_index_value_length_max_minus_1_index_value_length_max_minus_1_index_value = 0;",
    "    //code here\n    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_k_list;\n}\n",
    "    //print(test_list)\n    //print(K)\n    test_list.sort(key = lambda x: x[1])\n    //print(test_list)\n    return test_list[:K]\n}\n\ntest_list = [(1, 2), (3, 4), (1, 6)]\nK = 2\nprint(min_k(test_list, K))\n\ntest_list = [(1, 2), (3, 4), (1, 6), (5, 7), (8, 9)]\nK = 3\nprint(min_k(test_list, K))\n\ntest_list = [(1, 2), (3, 4), (1, 6), (5, 7), (8, 9)]\nK = 4\nprint(min_k(test_list, K))\n\ntest_list = [(1, 2), (3, 4), (1, 6), (5, 7), (8, 9)]\nK = 5\nprint(min_k(test_list, K))\n\ntest_list = [(1, 2), (3, 4), (1, 6), (5, 7), (8, 9)]\nK = 6\nprint(min_k(test_list, K))\n\ntest_list = [(1, 2), (3, 4), (1, 6), (5, 7), (8, 9)]\nK = 7\nprint(min_k(test_list, K))\n\ntest_list = [(1, 2), (3, 4), (1, 6), (5, 7), (8, 9)]\nK = 8\nprint(min_k(test_list, K))\n\ntest_list = [(1, 2), (3, 4), (1, 6), (5, 7), (8, 9)]\nK = 9\nprint(min_k(test_list, K))\n\ntest_list = [(1, 2), (3, 4), (1, 6), (5, 7), (8, 9)]\nK = 10\nprint(min_k(test_list, K))\n\ntest_list = [(1, 2), (3, 4), (1, 6), (5, 7), (8, 9)]\nK = 11\n",
    "    //code here\n    var min_k = [];\n    for (var i = 0; i < K; i++) {\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a, b) {\n        return a[0] - b[0];\n    });\n    for (var i = K; i < test_list.length; i++) {\n        if (test_list[i][0] < min_k[K - 1][0]) {\n            min_k.pop();\n            min_k.push(test_list[i]);\n            min_k.sort(function(a, b) {\n                return a[0] - b[0];\n            });\n        }\n    }\n    return min_k;\n}\n",
    "    //start\n    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){return a[1] - b[1]});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_list[K - 1][1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){return a[1] - b[1]});\n        }\n    }\n    return min_list;\n    //end\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    return min_list;\n}\n",
    "    // code here\n    var min_k_list = [];\n    var min_k_list_len = 0;\n    var min_k_list_max_index = -1;\n    var min_k_list_max_value = 0;\n    var min_k_list_max_index_new = -1;\n    var min_k_list_max_value_new = 0;\n    var min_k_list_max_index_old = -1;\n    var min_k_list_max_value_old = 0;\n    var min_k_list_max_index_temp = -1;\n    var min_k_list_max_value_temp = 0;\n    var min_k_list_max_index_temp_new = -1;\n    var min_k_list_max_value_temp_new = 0;\n    var min_k_list_max_index_temp_old = -1;\n    var min_k_list_max_value_temp_old = 0;\n    var min_k_list_max_index_temp_temp = -1;\n    var min_k_list_max_value_temp_temp = 0;\n    var min_k_list_max_index_temp_temp_new = -1;\n    var min_k_list_max_value_temp_temp_new = 0;\n    var min_k_list_max_index_temp_temp_old = -1;\n    var min_k_list_max_value_temp_temp_old = 0;\n    var min_k_list_max_index_temp_temp_temp = -1;\n    var min_k_list_max_value_temp_temp_temp = 0;\n    var min_k_list_max_index_temp_temp_temp_new = -1;\n    var min_k_list_max_value_temp_temp_temp_new = 0;\n    var min_k_list_max_index_temp_temp_temp_old = -1;\n    var min_k_list_max_value_temp_temp_temp_old = 0;\n    var min_k_list",
    "    //start\n    var min_k = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a,b){\n                return a[1] - b[1];\n            });\n            if(test_list[i][1] < min_k[K-1][1]){\n                min_k.pop();\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var res = [];\n    for(var i = 0; i < K; i++){\n        res.push(test_list[i]);\n    }\n    return res;\n}\n\nvar test_list = [[1, 2], [3, 4], [1, -1]];\nvar K = 2;",
    "    let min_list = [];\n    let min_list_len = 0;\n    let i = 0;\n    while(i < test_list.length){\n        if(min_list_len < K){\n            min_list.push(test_list[i]);\n            min_list_len++;\n        }\n        else{\n            min_list.sort((a,b) => a[1] - b[1]);\n            if(test_list[i][1] < min_list[min_list_len - 1][1]){\n                min_list[min_list_len - 1] = test_list[i];\n            }\n        }\n        i++;\n    }\n    return min_list;\n}\n",
    "    //code here\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_value = [];\n    var min_k_list_index_value_index = [];\n    var min_k_list_index_value_index_value = [];\n    var min_k_list_index_value_index_value_index = [];\n    var min_k_list_index_value_index_value_index_value = [];\n    var min_k_list_index_value_index_value_index_value_index = [];\n    var min_k_list_index_value_index_value_index_value_index_value = [];\n    var min_k_list_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_index_value_index_value_index_value_",
    "    //print(test_list);\n    //print(K);\n    var min_list = [];\n    var min_list_index = [];\n    for(var i=0; i<K; i++){\n        min_list.push(test_list[i]);\n        min_list_index.push(i);\n    }\n    //print(min_list);\n    //print(min_list_index);\n    for(var i=K; i<test_list.length; i++){\n        var max_index = min_list_index[0];\n        for(var j=1; j<K; j++){\n            if(min_list[max_index] < min_list[min_list_index[j]]){\n                max_index = min_list_index[j];\n            }\n        }\n        if(test_list[i] < min_list[max_index]){\n            min_list[max_index] = test_list[i];\n            min_list_index[max_index] = i;\n        }\n    }\n    return min_list;\n}\n",
    "    //start writing your code here\n    var min = test_list[0][1];\n    var min_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n        }\n    }\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] == min){\n            min_list.push(test_list[i]);\n        }\n    }\n    return min_list;\n}\n\nvar test_list = [[\"Tom\", 10], [\"Jerry\", 15], [\"Mike\", 20]];\nvar K = 2;",
    "    // start\n    // Initialize result list\n    var min_list = [];\n\n    // Iterate through all the elements\n    for (var i = 0; i < test_list.length; i++) {\n\n        // If number of elements in min_list\n        // is less than K\n        if (min_list.length < K) {\n            min_list.push(test_list[i]);\n        }\n\n        // If current element is less than\n        // maximum of min_list\n        else if (test_list[i][0] < min_list[min_list.length - 1][0]) {\n\n            // Remove maximum element from min_list\n            min_list.pop();\n\n            // insert current element in min_list\n            min_list.push(test_list[i]);\n        }\n    }\n\n    // Print min_list\n    console.log(\"Minimum K records are: \" + min_list);\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    return min_k_list;\n}\n",
    "    //start\n    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){return a[0] - b[0]});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][0] < min_list[K-1][0]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){return a[0] - b[0]});\n        }\n    }\n    return min_list;\n    //end\n}\n",
    "    //code here\n    let result = [];\n    let min = test_list[0][0];\n    let min_index = 0;\n    for(let i = 0; i < K; i++){\n        for(let j = 0; j < test_list.length; j++){\n            if(test_list[j][0] < min){\n                min = test_list[j][0];\n                min_index = j;\n            }\n        }\n        result.push(test_list[min_index]);\n        test_list.splice(min_index, 1);\n        min = test_list[0][0];\n        min_index = 0;\n    }\n    return result;\n}\n",
    "    //print(test_list)\n    //print(K)\n    //print(test_list.length)\n    if(test_list.length < K){\n        return test_list\n    }\n    var min_k_list = []\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i])\n    }\n    //print(min_k_list)\n    for(var i = K; i < test_list.length; i++){\n        var max_index = 0\n        for(var j = 1; j < K; j++){\n            if(min_k_list[max_index][0] < min_k_list[j][0]){\n                max_index = j\n            }\n        }\n        if(min_k_list[max_index][0] > test_list[i][0]){\n            min_k_list[max_index] = test_list[i]\n        }\n    }\n    return min_k_list\n}\n\nvar test_list = [[1,2], [3,4], [1,2], [5,6], [7,8], [1,2], [3,4], [3,4], [7,8], [9,0]]\nvar K = 5\nprint(min_k(test_list, K))\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0]\n    })\n    var min_k = []\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i])\n    }\n    return min_k\n}\n\nvar test_list = [[1, 2], [3, 4], [1, -1]]\nvar K = 2",
    "    //start\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_count = 0;\n    var min_k_list_index_count_max = K;\n    var min_k_list_index_count_max_minus_1 = K - 1;\n    var min_k_list_index_count_max_minus_2 = K - 2;\n    var min_k_list_index_count_max_minus_3 = K - 3;\n    var min_k_list_index_count_max_minus_4 = K - 4;\n    var min_k_list_index_count_max_minus_5 = K - 5;\n    var min_k_list_index_count_max_minus_6 = K - 6;\n    var min_k_list_index_count_max_minus_7 = K - 7;\n    var min_k_list_index_count_max_minus_8 = K - 8;\n    var min_k_list_index_count_max_minus_9 = K - 9;\n    var min_k_list_index_count_max_minus_10 = K - 10;\n    var min_k_list_index_count_max_minus_11 = K - 11;\n    var min_k_list_index_count_max_minus_12 = K - 12;\n    var min_k_list_index_count_max_minus_13 = K - 13;\n    var min_k_list_index_count_max_minus_14 = K - 14;\n    var min_k_list_index_count_max_minus_15 = K - 15;\n    var min_k_list_index_count_max_minus_16 = K - 16;\n    var min_k_list_index_count_max_minus_17 = K - 17;\n    var min_k_list_index_count_max_minus_18 = K - 18;\n    var min_k_list_index_count_max_minus_19 = K - 19;\n    var min_k_list_index_count_max_minus_",
    "    var min_list = []\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i])\n    }\n    min_list.sort(function(a, b){return a[0] - b[0]})\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][0] < min_list[K-1][0]){\n            min_list.pop()\n            min_list.push(test_list[i])\n            min_list.sort(function(a, b){return a[0] - b[0]})\n        }\n    }\n    return min_list\n}\n\nvar test_list = [[1, 2], [3, 4], [1, 2], [5, 6], [7, 8], [1, 2], [3, 4], [3, 4], [7, 8], [9, 10]]\nvar K = 4",
    "    // start\n    // initialize a list to store the result\n    var result = [];\n    // sort the list in ascending order\n    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    // iterate K times\n    for(var i = 0; i < K; i++){\n        // append the first K elements to the result\n        result.push(test_list[i]);\n    }\n    // return the result\n    return result;\n    // end\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n\nvar test_list = [[1, 2], [3, 4], [1, -1]];\nvar K = 2;",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    //Sort the list in ascending order\n    test_list.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    //Print the first K records\n    for(var i=0; i<K; i++){\n        console.log(test_list[i][0], test_list[i][1]);\n    }\n}\n",
    "    //start\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_count = 0;\n    var min_k_list_count = 0;\n    var min_k_list_index_count_max = K;\n    var min_k_list_count_max = K;\n    var min_k_list_index_count_min = 0;\n    var min_k_list_count_min = 0;\n    var min_k_list_index_count_min_max = K;\n    var min_k_list_count_min_max = K;\n    var min_k_list_index_count_min_max_count = 0;\n    var min_k_list_count_min_max_count = 0;\n    var min_k_list_index_count_min_max_count_max = K;\n    var min_k_list_count_min_max_count_max = K;\n    var min_k_list_index_count_min_max_count_min = 0;\n    var min_k_list_count_min_max_count_min = 0;\n    var min_k_list_index_count_min_max_count_min_max = K;\n    var min_k_list_count_min_max_count_min_max = K;\n    var min_k_list_index_count_min_max_count_min_max_count = 0;\n    var min_k_list_count_min_max_count_min_max_count = 0;\n    var min_k_list_index_count_min_max_count_min_max_count_max = K;\n    var min_k_list_count_min_max_count_min_max_count_max = K;\n    var min_k_list_index_count_min_max_count_min_max_count_min = 0;\n    var min_k_list_count_min_max_count_min_max_count_min = 0;\n    var min_k_list_index_count_min_max_count",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    test_list.sort(function(a,b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    //code here\n    let min_k_list = []\n    for(let i = 0; i < K; i++){\n        min_k_list.push(test_list[i])\n    }\n    min_k_list.sort((a,b) => a[1] - b[1])\n    for(let i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list[K-1] = test_list[i]\n            min_k_list.sort((a,b) => a[1] - b[1])\n        }\n    }\n    return min_k_list\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    //code here\n    let min_k_list = [];\n    for(let i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort((a, b) => a[1] - b[1]);\n    for(let i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k_list[K-1][1]){\n            min_k_list.pop();\n            min_k_list.push(test_list[i]);\n            min_k_list.sort((a, b) => a[1] - b[1]);\n        }\n    }\n    return min_k_list;\n}\n\nlet test_list = [('item1', 4), ('item2', 3), ('item3', 5), ('item4', 2), ('item5', 1)];\nlet K = 3;",
    "    //print(\"test_list: \", test_list)\n    //print(\"K: \", K)\n    var min_k_list = []\n    var min_k_list_len = 0\n    var test_list_len = test_list.length\n    //print(\"test_list_len: \", test_list_len)\n    for(var i=0; i<test_list_len; i++){\n        //print(\"i: \", i)\n        //print(\"test_list[i]: \", test_list[i])\n        var test_list_i_len = test_list[i].length\n        //print(\"test_list_i_len: \", test_list_i_len)\n        for(var j=0; j<test_list_i_len; j++){\n            //print(\"j: \", j)\n            //print(\"test_list[i][j]: \", test_list[i][j])\n            if(min_k_list_len < K){\n                min_k_list.push(test_list[i][j])\n                min_k_list_len++\n            }\n            else{\n                var min_k_list_max = Math.max(...min_k_list)\n                //print(\"min_k_list_max: \", min_k_list_max)\n                if(test_list[i][j] < min_k_list_max){\n                    var min_k_list_max_index = min_k_list.indexOf(min_k_list_max)\n                    //print(\"min_k_list_max_index: \", min_k_list_max_index)\n                    min_k_list[min_k_list_max_index] = test_list[i][j]\n                }\n            }\n        }\n    }\n    return min_k_list\n}\n\nvar test_list = [[4, 7, 9, 12, 15], [0, 8, 10, 14, 20], [6, 12, 16, 30, 50]]\nvar K = 4\nprint(\"min_k(test_list, K): \", min_k(test_list, K))\n\nvar test",
    "    //code here\n    let min_k = [];\n    for(let i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort((a, b) => a[1] - b[1]);\n    for(let i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_k[0][1]){\n            min_k[0] = test_list[i];\n            min_k.sort((a, b) => a[1] - b[1]);\n        }\n    }\n    return min_k;\n}\n",
    "    test_list.sort(function(a,b){\n        return a[0] - b[0]\n    })\n    var result = []\n    for (var i = 0; i < K; i++){\n        result.push(test_list[i])\n    }\n    return result\n}\n",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][0] < min_list[K-1][0]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[0] - b[0];\n            });\n        }\n    }\n    return min_list;\n}\n",
    "    //code here\n    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max = Math.max(...min_k);\n        if(test_list[i] < max){\n            var index = min_k_index[min_k.indexOf(max)];\n            min_k[min_k.indexOf(max)] = test_list[i];\n            min_k_index[min_k.indexOf(max)] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n\nvar test_list = [[1, 2], [3, 4], [1, -1]];\nvar K = 2;",
    "    //start\n    var min_k_list = [];\n    var min_k_list_size = 0;\n    for(var i=0; i<test_list.length; i++){\n        if(min_k_list_size < K){\n            min_k_list.push(test_list[i]);\n            min_k_list_size++;\n        }\n        else{\n            min_k_list.sort(function(a,b){return a[1]-b[1]});\n            if(test_list[i][1] < min_k_list[min_k_list_size-1][1]){\n                min_k_list.pop();\n                min_k_list.push(test_list[i]);\n            }\n        }\n    }\n    min_k_list.sort(function(a,b){return a[1]-b[1]});\n    return min_k_list;\n    //end\n}\n",
    "    //start\n    var min_list = [];\n    var min_list_len = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(min_list_len < K){\n            min_list.push(test_list[i]);\n            min_list_len++;\n        }\n        else{\n            min_list.sort(function(a, b){return a[0] - b[0]});\n            if(test_list[i][0] < min_list[min_list_len - 1][0]){\n                min_list[min_list_len - 1] = test_list[i];\n            }\n        }\n    }\n    min_list.sort(function(a, b){return a[0] - b[0]});\n    return min_list;\n    //end\n}\n",
    "    //start\n    var min_k = [];\n    //loop through the list\n    for (var i = 0; i < test_list.length; i++){\n        //if the length of the min_k list is less than K, add the current item to the list\n        if (min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        //otherwise, loop through the min_k list\n        else{\n            for (var j = 0; j < min_k.length; j++){\n                //if the current item is less than the current min_k item, remove the min_k item and add the current item\n                if (test_list[i] < min_k[j]){\n                    min_k.splice(j, 1);\n                    min_k.push(test_list[i]);\n                    break;\n                }\n            }\n        }\n    }\n    //return the min_k list\n    return min_k;\n}\n",
    "    test_list.sort(function(a, b){return a[0] - b[0]});\n    var result = [];\n    for(var i = 0; i < K; i++){\n        result.push(test_list[i]);\n    }\n    return result;\n}\n",
    "    // start\n    // initializing result list\n    var result = [];\n    // initializing min variable\n    var min = test_list[0][0];\n    // initializing min_index variable\n    var min_index = 0;\n    // looping through the list\n    for (var i = 0; i < K; i++){\n        // looping through the list\n        for (var j = 0; j < test_list.length; j++){\n            // checking if the element is less than min\n            if (test_list[j][0] < min){\n                // updating min\n                min = test_list[j][0];\n                // updating min_index\n                min_index = j;\n            }\n        }\n        // appending the min element to result\n        result.push(test_list[min_index]);\n        // removing the min element from the list\n        test_list.splice(min_index, 1);\n        // updating min\n        min = test_list[0][0];\n        // updating min_index\n        min_index = 0;\n    }\n    // returning result\n    return result;\n    // end\n}",
    "    //print(\"test_list:\", test_list)\n    //print(\"K:\", K)\n    //print(\"\")\n    var min_list = []\n    for(var i = 0; i < test_list.length; i++){\n        if(min_list.length < K){\n            min_list.push(test_list[i])\n        }\n        else{\n            min_list.sort(function(a, b){\n                return a[1] - b[1]\n            })\n            if(test_list[i][1] < min_list[K-1][1]){\n                min_list[K-1] = test_list[i]\n            }\n        }\n    }\n    return min_list\n}\n",
    "    //sort the list\n    test_list.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    //return the first k elements\n    return test_list.slice(0,K);\n}\n",
    "    //start\n    let min_k = [];\n    let min_k_set = new Set();\n    let min_k_set_size = 0;\n    for(let i = 0; i < test_list.length; i++){\n        let cur_tuple = test_list[i];\n        if(min_k_set_size < K){\n            min_k_set.add(cur_tuple);\n            min_k_set_size++;\n        }\n        else{\n            let max_tuple = [...min_k_set].reduce((a, b) => a[1] > b[1] ? a : b);\n            if(cur_tuple[1] < max_tuple[1]){\n                min_k_set.delete(max_tuple);\n                min_k_set.add(cur_tuple);\n            }\n        }\n    }\n    min_k = [...min_k_set];\n    return min_k;\n    //end\n}\n\nlet test_list = [['a', 2], ['b', 5], ['c', 1], ['d', 3], ['e', 2], ['f', 4], ['g', 1]];\nlet K = 3;",
    "    // start\n    // sorting the list \n    test_list.sort(function(a, b){return a[0] - b[0]}) \n      \n    // printing the first K numbers \n    for (var i = 0; i < K; i++) \n        console.log(test_list[i][0], test_list[i][1]); \n    // end\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    var min_list = []\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i])\n    }\n    min_list.sort(function(a,b){\n        return a[0] - b[0]\n    })\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][0] < min_list[K-1][0]){\n            min_list[K-1] = test_list[i]\n            min_list.sort(function(a,b){\n                return a[0] - b[0]\n            })\n        }\n    }\n    return min_list\n}\n",
    "    // code here\n    var min_k = test_list.sort((a,b) => a[1] - b[1]).slice(0,K);\n    return min_k;\n}\n",
    "    // code here\n    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        min_k_list.push(test_list[i][1]);\n    }\n    min_k_list.sort(function(a, b){return a-b});\n    return min_k_list.slice(0, K);\n}\n",
    "    //code here\n    let min_k_list = [];\n    for(let i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    for(let i = K; i < test_list.length; i++){\n        for(let j = 0; j < K; j++){\n            if(test_list[i][1] < min_k_list[j][1]){\n                min_k_list[j] = test_list[i];\n                break;\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    test_list.sort(function(a,b){return a[0]-b[0]});\n    var result = [];\n    for(var i=0; i<K; i++){\n        result.push(test_list[i]);\n    }\n    return result;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    return min_k_list;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i][0]);\n    }\n    return min_k;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = test_list.slice(0, K);\n    return min_k;\n}\n",
    "    //code here\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_counter = 0;\n    var min_k_list_counter = 0;\n    var min_k_list_index_counter_max = K;\n    var min_k_list_counter_max = K;\n    var min_k_list_index_counter_min = 0;\n    var min_k_list_counter_min = 0;\n    var min_k_list_index_counter_min_index = 0;\n    var min_k_list_counter_min_index = 0;\n    var min_k_list_index_counter_max_index = 0;\n    var min_k_list_counter_max_index = 0;\n    var min_k_list_index_counter_max_index_value = 0;\n    var min_k_list_counter_max_index_value = 0;\n    var min_k_list_index_counter_min_index_value = 0;\n    var min_k_list_counter_min_index_value = 0;\n    var min_k_list_index_counter_max_value = 0;\n    var min_k_list_counter_max_value = 0;\n    var min_k_list_index_counter_min_value = 0;\n    var min_k_list_counter_min_value = 0;\n    var min_k_list_index_counter_max_value_index = 0;\n    var min_k_list_counter_max_value_index = 0;\n    var min_k_list_index_counter_min_value_index = 0;\n    var min_k_list_counter_min_value_index = 0;\n    var min_k_list_index_counter_max_value_index_value = 0;\n    var min_k_list_counter_max_value_index_value = 0;\n    var min_k_list_index_counter_min_value_index_value = 0;\n    var min_k_list_counter_min_value_index_value = 0;\n",
    "    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_list[K-1][1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n}\n",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_list[K-1][1]){\n            min_list[K-1] = test_list[i];\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n}\n\nvar test_list = [['Geeks', 10], ['for', 15], ['Geeks', 20]];\nvar K = 2;",
    "    test_list.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    return min_k_list;\n}\n",
    "    // start\n    // initializing result list\n    var result = [];\n    // initializing min_value\n    var min_value = test_list[0][0];\n    // initializing min_index\n    var min_index = 0;\n    // looping through the list\n    for (var i = 0; i < K; i++){\n        // looping through the list\n        for (var j = 0; j < test_list.length; j++){\n            // checking condition\n            if (test_list[j][0] < min_value){\n                // updating min_value\n                min_value = test_list[j][0];\n                // updating min_index\n                min_index = j;\n            }\n        }\n        // appending min_value to result\n        result.push(test_list[min_index]);\n        // removing min_value from test_list\n        test_list.splice(min_index, 1);\n        // updating min_value\n        min_value = test_list[0][0];\n    }\n    // returning result\n    return result;\n}",
    "    // start with empty list\n    var min_list = [];\n    // loop through the list\n    for (var i = 0; i < test_list.length; i++){\n        // if the list is empty, add the first item\n        if (min_list.length < K){\n            min_list.push(test_list[i]);\n        }\n        // if the list is not empty, check if the current item is smaller than the max of the list\n        else if (test_list[i] < Math.max.apply(null, min_list)){\n            // if it is, remove the max and add the current item\n            min_list.splice(min_list.indexOf(Math.max.apply(null, min_list)), 1);\n            min_list.push(test_list[i]);\n        }\n    }\n    // return the list\n    return min_list;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var res = [];\n    for(var i = 0; i < K; i++){\n        res.push(test_list[i]);\n    }\n    return res;\n}\n",
    "    //start\n    //test_list = [(1,2), (3,4), (5,6), (7,8), (9,10)]\n    //K = 3\n    //test_list = [(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20)]\n    //K = 5\n    //test_list = [(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20)]\n    //K = 10\n    //test_list = [(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20)]\n    //K = 20\n    //test_list = [(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20)]\n    //K = 30\n    //test_list = [(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20)]\n    //K = 40\n    //test_list = [(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20)]\n    //K = 50\n    //test_list = [(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20)]\n    //K = 60\n    //test_list = [(1,2), (3,4), (5,6), (7,8), (9",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][0] < min_list[K-1][0]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){\n                return a[0] - b[0];\n            });\n        }\n    }\n    return min_list;\n}\n\nvar test_list = [[1,2], [3,4], [1,2], [5,6], [7,8], [1,2], [3,4], [3,4], [7,8], [9,10]];\nvar K = 4;",
    "    //code here\n    var min_k = test_list.slice(0, K);\n    var min_k = min_k.sort((a, b) => a[1] - b[1]);\n    for (var i = K; i < test_list.length; i++) {\n        if (test_list[i][1] < min_k[K - 1][1]) {\n            min_k.pop();\n            min_k.push(test_list[i]);\n            min_k = min_k.sort((a, b) => a[1] - b[1]);\n        }\n    }\n    return min_k;\n}\n",
    "    //start\n    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i][1] < min_list[K-1][1]){\n            min_list[K-1] = test_list[i];\n            min_list.sort(function(a, b){\n                return a[1] - b[1];\n            });\n        }\n    }\n    return min_list;\n    //end\n}\n",
    "    //start\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_sorted = [];\n    var min_k_list_index_sorted_final = [];\n    var min_k_list_final = [];\n    var min_k_list_final_sorted = [];\n    var min_k_list_final_sorted_final = [];\n    var min_k_list_final_sorted_final_final = [];\n    var min_k_list_final_sorted_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final_final_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final_final_final_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final_final_final_final_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final_final_final_final_final_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final_final_final_final_final_final_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final = [];\n    var min_k_list_final_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final = [];\n    var min_k_",
    "    // sort the list in ascending order\n    // test_list.sort(key = lambda x: x[0])\n    test_list.sort((a,b) => a[0] - b[0])\n    // print the first k elements of the sorted list\n    for i in range(K):\n        print(test_list[i][0], end = \" \")\n    print()\n}\n",
    "    //start\n    //sort the list\n    test_list.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    //return the first K elements\n    return test_list.slice(0, K);\n}\n",
    "    //code here\n    //sort the list\n    test_list.sort(function(a,b){\n        return a[0]-b[0];\n    });\n    //return the first k elements\n    return test_list.slice(0,K);\n}\n",
    "    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){return a[1] - b[1]});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i][1] < min_list[K-1][1]){\n            min_list[K-1] = test_list[i];\n            min_list.sort(function(a, b){return a[1] - b[1]});\n        }\n    }\n    return min_list;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    //print(\"test_list:\", test_list)\n    //print(\"K:\", K)\n    var min_k_list = []\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i])\n    }\n    //print(\"min_k_list:\", min_k_list)\n    for (var i = K; i < test_list.length; i++){\n        //print(\"test_list[i]:\", test_list[i])\n        for (var j = 0; j < K; j++){\n            //print(\"min_k_list[j]:\", min_k_list[j])\n            if (test_list[i][1] < min_k_list[j][1]){\n                min_k_list[j] = test_list[i]\n                break\n            }\n        }\n    }\n    //print(\"min_k_list:\", min_k_list)\n    return min_k_list\n}\n\nvar test_list = [('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', 5), ('f', 6), ('g', 7), ('h', 8), ('i', 9), ('j', 10)]\nvar K = 3\nvar expected_output = [('a', 1), ('b', 2), ('c', 3)]\nvar actual_output = min_k(test_list, K)\nassert(expected_output == actual_output, \"Expected output: \" + expected_output + \" Actual output: \" + actual_output)\n\ntest_list = [('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', 5), ('f', 6), ('g', 7), ('h', 8), ('i', 9), ('j', 10)]\nK = 5\nexpected_output = [('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', 5)]\nactual_output = min_k(test_list, K)\nassert(expected_output == actual_output, \"Expected output: \" + expected_output + \" Actual output: \" +",
    "    //start\n    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_index = min_k_index[0];\n        for(var j = 1; j < K; j++){\n            if(min_k[j] > min_k[max_index]){\n                max_index = j;\n            }\n        }\n        if(test_list[i] < min_k[max_index]){\n            min_k[max_index] = test_list[i];\n            min_k_index[max_index] = i;\n        }\n    }\n    return min_k;\n    //end\n}\n",
    "    test_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    var min_k = test_list.slice(0, K);\n    return min_k;\n}\n",
    "    test_list.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    return min_k;\n}\n",
    "    //start\n    var min_k = [];\n    var min_k_set = new Set();\n    var min_k_index = [];\n    var min_k_index_set = new Set();\n    var min_k_index_set_size = 0;\n    var min_k_index_set_size_prev = 0;\n    var min_k_index_set_size_diff = 0;\n    var min_k_index_set_size_diff_prev = 0;\n    var min_k_index_set_size_diff_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev_prev_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev_prev_prev_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var min_k_index_set_size_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    var min_k_index_set_size",
    "    //code here\n    var min_k = test_list.sort((a, b) => a[0] - b[0]).slice(0, K);\n    return min_k;\n}\n"
  ]
}
{
  "name": "mbpp_166_find_even_pair",
  "language": "js",
  "prompt": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = 0; j < A.length; j++){\n            if(i != j){\n                if((A[i] ^ A[j]) % 2 == 0){\n                    count++;\n                }\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpvprv5k4j.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvprv5k4j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i]^A[j])%2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for (var i = 0; i < A.length; i++){\n        for (var j = i + 1; j < A.length; j++){\n            if ((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor (var i = 0; i < A.length; i++) {\n\t\tfor (var j = i + 1; j < A.length; j++) {\n\t\t\tif ((A[i] ^ A[j]) % 2 == 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 === 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i]^A[j])%2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i=0; i<A.length; i++){\n    for(var j=i+1; j<A.length; j++){\n      if((A[i]^A[j])%2===0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    // Write your code here\n    // To print results to the standard output you can use console.log\n    // Example: console.log(\"Hello world!\");\n    var count = 0;\n    for(var i=0;i<A.length;i++){\n        for(var j=i+1;j<A.length;j++){\n            if((A[i]^A[j])%2==0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i=0; i<A.length; i++){\n        for(var j=i+1; j<A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i]^A[j])%2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i=0; i<A.length; i++){\n    for(var j=i+1; j<A.length; j++){\n      if((A[i]^A[j])%2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = 0; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpn5dyf5mc.js:19:10)\n    at Object.<anonymous> (/tmp/tmpn5dyf5mc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i]^A[j])%2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i=0; i<A.length; i++){\n        for(var j=i+1; j<A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i]^A[j])%2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count=0;\n    for(var i=0;i<A.length;i++){\n        for(var j=i+1;j<A.length;j++){\n            if((A[i]^A[j])%2==0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i=0; i<A.length; i++){\n        for(var j=i+1; j<A.length; j++){\n            if((A[i]^A[j])%2==0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i=0; i<A.length; i++){\n        for(var j=i+1; j<A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i=0; i<A.length; i++){\n        for(var j=i+1; j<A.length; j++){\n            if((A[i]^A[j])%2==0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = 0; j < A.length; j++){\n      if(i != j && (A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp6e83p_sq.js:19:10)\n    at Object.<anonymous> (/tmp/tmp6e83p_sq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  let count = 0;\n  for(let i = 0; i < A.length; i++){\n    for(let j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i=0;i<A.length;i++){\n        for(var j=i+1;j<A.length;j++){\n            if((A[i]^A[j])%2==0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
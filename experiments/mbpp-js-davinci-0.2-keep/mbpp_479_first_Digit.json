{
  "name": "mbpp_479_first_Digit",
  "language": "js",
  "prompt": "//Write a python function to find the first digit of a given number.\nfunction first_Digit(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_Digit;\n  assert.deepEqual(candidate(123),1);\n  assert.deepEqual(candidate(456),4);\n  assert.deepEqual(candidate(12),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = first_Digit(1234);",
    "    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar n = 1234;\nvar result = first_Digit(n);",
    "    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar num = first_Digit(123);",
    "    var a = n.toString();\n    var b = a.split(\"\");\n    for(var i=0;i<b.length;i++){\n        if(b[i]>=0){\n            return b[i];\n        }\n    }\n}",
    "    var str=n.toString();\n    var res=str.split(\"\");\n    for(var i=0;i<res.length;i++){\n        if(res[i]>=0){\n            return res[i];\n        }\n    }\n}\nvar result=first_Digit(1234);",
    "    var s = n.toString();\n    var i = 0;\n    while(i < s.length){\n        if(s[i] != 0){\n            return s[i];\n        }\n        i++;\n    }\n}\n",
    "    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}",
    "    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}",
    "    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar n=12345;\nvar result=first_Digit(n);",
    "    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}",
    "    var s = n.toString();\n    var first = s.charAt(0);\n    return first;\n}",
    "    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}",
    "    var str = n.toString();\n    var first = str.charAt(0);\n    return first;\n}\nvar result = first_Digit(1234);",
    "    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(1234);",
    "    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nfirst_Digit(123);\n",
    "    var str = n.toString();\n    var res = str.charAt(0);\n    return res;\n}\nvar num = first_Digit(123);",
    "    var str = n.toString();\n    var res = str.split(\"\");\n    return res[0];\n}\nvar result = first_Digit(1234);",
    "    var n = n.toString();\n    return n[0];\n}",
    "    var num = n.toString();\n    var first = num.charAt(0);\n    return first;\n}",
    "    while(n>=10){\n        n=n/10;\n    }\n    return Math.floor(n);\n}\nvar result=first_Digit(1234);"
  ]
}
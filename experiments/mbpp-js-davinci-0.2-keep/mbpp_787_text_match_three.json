{
  "name": "mbpp_787_text_match_three",
  "language": "js",
  "prompt": "//Write a function that matches a string that has an a followed by three 'b'.\nfunction text_match_three(text){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_787_text_match_three.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_three;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"caacabbbba\"),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    if(text.match(/ab{3}/)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var pattern = /a...b/;\n    if (pattern.test(text)) {\n        console.log(\"The text contains the pattern\");\n    } else {\n        console.log(\"The text does not contain the pattern\");\n    }\n}\ntext_match_three(\"abbb\");\ntext_match_three(\"abb\");\ntext_match_three(\"abbbb\");\n",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    let regex = /ab{3}/;\n    return regex.test(text);\n}\n",
    "    var pattern = /ab{3}/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    let regex = /ab{3}/;\n    return regex.test(text);\n}\n",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(/ab{3}/.test(text)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "    var pattern = /ab{3}/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "  var pattern = /a...b/;\n  if(text.match(pattern)){\n    return true;\n  }else{\n    return false;\n  }\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var pattern = /ab{3}/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /b{3}/;\n    return pattern.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var re = /ab{3}/;\n    return re.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var match = /ab{3}/;\n    return match.test(text);\n}",
    "    var regex = /ab{3}/;\n    var result = regex.test(text);\n    return result;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/g;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    return text.match(/ab{3}/);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(/b{3}/.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /ab{3}/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var match = /ab{3}/;\n    return match.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}\n",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        console.log(\"The text matches the pattern\");\n    }else{\n        console.log(\"The text does not match the pattern\");\n    }\n}\ntext_match_three(\"abbb\");\ntext_match_three(\"aabbb\");\ntext_match_three(\"aaabbb\");\ntext_match_three(\"abb\");\ntext_match_three(\"aabb\");\ntext_match_three(\"aaabb\");\n",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    let match = text.match(/ab{3}/);\n    return match;\n}\n",
    "    var pattern = /a...b/;\n    if (pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if (text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var match = text.match(/ab{3}/);\n    return match;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /ab{3}/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        console.log(\"The text matches the pattern\");\n    }else{\n        console.log(\"The text does not match the pattern\");\n    }\n}\ntext_match_three(\"abbb\");\ntext_match_three(\"acccb\");\ntext_match_three(\"abbbb\");\ntext_match_three(\"abb\");\n",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var pattern = /a...b/;\n    if (pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}\n",
    "    return /^a...b$/.test(text);\n}\n",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(/b{3}/.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /a...b/;\n    if (pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }else{\n        return false;\n    }\n}\n",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    let regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}\n",
    "\tvar pattern = /ab{3}/;\n\tif(pattern.test(text)){\n\t\treturn \"Match\";\n\t}else{\n\t\treturn \"No Match\";\n\t}\n}",
    "    return text.match(/ab{3}/g);\n}",
    "    var regex = /ab{3}/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}",
    "  var pattern = /a...b/;\n  if(pattern.test(text)){\n    return true;\n  }\n  return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    return /ab{3}/.test(text);\n}",
    "    var matches = text.match(/ab{3}/g);\n    return matches;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}\n",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    let regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /a...b/;\n    if (pattern.test(text)) {\n        console.log(\"The text contains the pattern\");\n    } else {\n        console.log(\"The text does not contain the pattern\");\n    }\n}\ntext_match_three(\"abbb\");\ntext_match_three(\"aabbb\");\ntext_match_three(\"aaabbb\");\ntext_match_three(\"abbbb\");\ntext_match_three(\"abb\");\ntext_match_three(\"aabb\");\ntext_match_three(\"aaabb\");\ntext_match_three(\"aaaaabb\");\ntext_match_three(\"abbbbbb\");\ntext_match_three(\"abbbbbbb\");\ntext_match_three(\"abbbbbbbb\");\ntext_match_three(\"abbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbbbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_three(\"abbbbbb",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "  var match = text.match(/ab{3}/);\n  if (match) {\n    return match[0];\n  }\n  return null;\n}\n",
    "    var regex = /ab{3}/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /ab{3}/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /a...b/;\n    if (pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    return /ab{3}/.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}\n",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        console.log(\"The text matches the pattern\");\n    }else{\n        console.log(\"The text does not match the pattern\");\n    }\n}\ntext_match_three(\"abbbb\");\ntext_match_three(\"abbb\");\ntext_match_three(\"abb\");\ntext_match_three(\"ab\");\ntext_match_three(\"a\");\n",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    return /ab{3}/.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}",
    "    return text.match(/ab{3}/g);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    return text.match(/ab{3}/);\n}",
    "    let regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    let regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if (text.match(/ab{3}/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}\n",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}\n",
    "    return /ab{3}/.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    let regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    return text.match(/ab{3}/);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    return /ab{3}/.test(text);\n}",
    "    let regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "  var regex = /ab{3}/;\n  return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /ab{3}/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}\n",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(/b{3}/.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    var matches = text.match(/ab{3}/);\n    return matches;\n}",
    "    let regex = /ab{3}/;\n    if (regex.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var pattern = /a...b/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    let regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    if(text.match(/ab{3}/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /ab{3}/;\n    return regex.test(text);\n}",
    "    return /ab{3}/.test(text);\n}"
  ]
}
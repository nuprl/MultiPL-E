{
  "name": "mbpp_238_number_of_substrings",
  "language": "js",
  "prompt": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_238_number_of_substrings.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            result += 1;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i=0; i<str.length; i++){\n        for (var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if (sub_str)\n                count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var l = str.length;\n    return l*(l+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var l = str.length;\n  var count = 0;\n  for(var i = 0; i < l; i++){\n    for(var j = i + 1; j <= l; j++){\n      if(str.substring(i,j)){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i, j);\n            if (sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for (var i = 0; i < str.length; i++) {\n    for (var j = i+1; j <= str.length; j++) {\n      if(str.substring(i,j)){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i=0; i<str.length; i++){\n    for(var j=i+1; j<=str.length; j++){\n      var sub_str = str.substring(i, j);\n      if(sub_str){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<=str.length; j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i=0; i<str.length; i++){\n        for (var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if (sub_str)\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i=0;i<str.length;i++){\n    for(var j=i+1;j<=str.length;j++){\n      var sub_str = str.substring(i,j);\n      if(sub_str){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var l = str.length;\n    return l*(l+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.slice(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i=0;i<str.length;i++){\n    for(var j=i+1;j<=str.length;j++){\n      var sub_str = str.substring(i,j);\n      if(sub_str){\n        count += 1;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i=0; i<str.length; i++){\n        for (var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if (sub_str)\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var l = str.length;\n  return l * (l + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tif(str.slice(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i=0; i<str.length; i++){\n        for (var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if (sub_str)\n                count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i, j);\n            if (sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar n = str.length;\n\treturn n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.slice(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var c = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                c += 1;\n            }\n        }\n    }\n    return c;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str.length > 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i, j);\n            if (sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i=0;i<str.length;i++){\n    for(var j=i+1;j<=str.length;j++){\n      var sub_str = str.substring(i,j);\n      if(sub_str){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var l = str.length;\n    return l*(l+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor (var i = 0; i < str.length; i++) {\n\t\tfor (var j = i+1; j <= str.length; j++) {\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif (sub_str) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif (sub_str) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var l = str.length;\n  return l * (l + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar substr = str.substring(i,j);\n\t\t\tif(substr){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<=str.length; j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif (sub_str) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i=0; i<str.length; i++){\n    for(var j=i+1; j<=str.length; j++){\n      var sub_str = str.substring(i,j);\n      if(sub_str){\n        count += 1;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\treturn str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var l = str.length;\n    return l*(l+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var l = str.length;\n    return l * (l + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<str.length+1; j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var l = str.length;\n    return l*(l+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<=str.length; j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i=0; i<str.length; i++){\n    for(var j=i+1; j<str.length+1; j++){\n      var sub_str = str.slice(i,j);\n      if(sub_str){\n        count += 1;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j < str.length + 1; j++){\n\t\t\tvar sub_str = str.slice(i, j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif (sub_str) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i=0; i<str.length; i++){\n    for(var j=i+1; j<=str.length; j++){\n      var sub_str = str.substring(i, j);\n      if(sub_str){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i=0;i<str.length;i++){\n    for(var j=i+1;j<=str.length;j++){\n      var sub_str = str.substring(i,j);\n      if(sub_str){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str.length > 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str)\n                count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var l = str.length;\n  return l*(l+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i=0;i<str.length;i++){\n    for(var j=i+1;j<=str.length;j++){\n      var sub_str = str.substring(i,j);\n      if(sub_str.length>0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.slice(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i = 0; i < str.length; i++){\n    for(var j = i + 1; j <= str.length; j++){\n      if(str.slice(i, j)){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar substr = str.substring(i,j);\n\t\t\tif(substr){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var c = 0;\n    for (var i=0; i<str.length; i++)\n      for (var j=i+1; j<=str.length; j++)\n        if (str.substring(i,j)) {\n          c++;\n        }\n    return c;\n}\nvar str = \"w3resource\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i = 0; i < str.length; i++){\n    for(var j = i+1; j <= str.length; j++){\n      var sub_str = str.substring(i, j);\n      if(sub_str){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.slice(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i+1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<=str.length; j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<=str.length; j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<=str.length; j++){\n\t\t\tif(str.substring(i,j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<=str.length; j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i=0;i<str.length;i++){\n    for(var j=i+1;j<=str.length;j++){\n      var sub_str = str.substring(i,j);\n      if(sub_str){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i = 0; i < str.length; i++){\n    for(var j = i + 1; j <= str.length; j++){\n      if(str.slice(i, j)){\n        count += 1;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<=str.length; j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<=str.length; j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var l = str.length;\n    return l * (l + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                result += 1;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n\t\tfor(var j=i+1; j<=str.length; j++){\n\t\t\tvar sub_str = str.substring(i, j);\n\t\t\tif(sub_str){\n\t\t\t\tcount += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var l = str.length;\n  return l*(l+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i = 0; i < str.length; i++) {\n        for (var j = i + 1; j < str.length + 1; j++) {\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\tfor(var j = i + 1; j <= str.length; j++){\n\t\t\tif(str.substring(i, j)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n\tvar count = 0;\n\tfor(var i=0;i<str.length;i++){\n\t\tfor(var j=i+1;j<=str.length;j++){\n\t\t\tvar sub_str = str.substring(i,j);\n\t\t\tif(sub_str){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var l = str.length;\n    return l*(l+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
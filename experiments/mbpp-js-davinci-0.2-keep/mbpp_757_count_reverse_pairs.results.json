{
  "name": "mbpp_757_count_reverse_pairs",
  "language": "js",
  "prompt": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_757_count_reverse_pairs.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split('').reverse().join('')){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == reverse(test_list[j])){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "/tmp/tmposhn5d3o.js:6\n            if(test_list[i] == reverse(test_list[j])){\n                        ^\n\nReferenceError: reverse is not defined\n    at count_reverse_pairs (/tmp/tmposhn5d3o.js:6:25)\n    at test (/tmp/tmposhn5d3o.js:19:20)\n    at Object.<anonymous> (/tmp/tmposhn5d3o.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i+1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == reverse(test_list[j])){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "/tmp/tmp3ncmubd1.js:6\n            if(test_list[i] == reverse(test_list[j])){\n                        ^\n\nReferenceError: reverse is not defined\n    at count_reverse_pairs (/tmp/tmp3ncmubd1.js:6:25)\n    at test (/tmp/tmp3ncmubd1.js:19:20)\n    at Object.<anonymous> (/tmp/tmp3ncmubd1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    let count = 0;\n    for(let i = 0; i < test_list.length; i++){\n        for(let j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        for (var j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1\n            }\n        }\n    }\n    return count\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nvar test_list = [\"abcd\", \"dcba\", \"lls\", \"s\", \"sssll\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split('').reverse().join('')){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nvar test_list = [\"abc\", \"xyz\", \"aba\", \"1221\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    var n = test_list.length;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nvar test_list = ['abcd', 'dcba', 'lls', 's', 'sssll'];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == reverse(test_list[j])){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "/tmp/tmp3ncmubd1.js:6\n            if(test_list[i] == reverse(test_list[j])){\n                        ^\n\nReferenceError: reverse is not defined\n    at count_reverse_pairs (/tmp/tmp3ncmubd1.js:6:25)\n    at test (/tmp/tmp3ncmubd1.js:19:20)\n    at Object.<anonymous> (/tmp/tmp3ncmubd1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    count = 0\n    for(i=0;i<test_list.length;i++){\n        for(j=i+1;j<test_list.length;j++){\n            if(test_list[i]==test_list[j].split(\"\").reverse().join(\"\")){\n                count++\n            }\n        }\n    }\n    return count\n}\n\ntest_list = [\"abc\", \"xyz\", \"aba\", \"1221\"]\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    let count = 0;\n    for(let i=0;i<test_list.length;i++){\n        for(let j=i+1;j<test_list.length;j++){\n            if(test_list[i]==test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nvar test_list = [\"abcd\", \"dcba\", \"lls\", \"s\", \"sssll\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        for (var j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")) {\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    let count = 0;\n    for(let i = 0; i < test_list.length; i++){\n        for(let j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    var n = test_list.length;\n    for (var i = 0; i < n; i++){\n        for (var j = i + 1; j < n; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        for (var j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i]==test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    let count = 0;\n    for(let i = 0; i < test_list.length; i++){\n        for(let j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nvar test_list = [\"abcd\", \"dcba\", \"lls\", \"s\", \"sssll\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nvar test_list = [\"abcd\", \"dcba\", \"lls\", \"s\", \"sssll\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        for (var j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    let count = 0;\n    for(let i=0;i<test_list.length;i++){\n        for(let j=i+1;j<test_list.length;j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nvar test_list = ['abc', 'xyz', 'aba', '1221'];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i=0; i<test_list.length; i++){\n        for (var j=i+1; j<test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nvar test_list = ['abc', 'xyz', 'aba', '1221'];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        for (var j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nvar test_list = [\"abc\", \"xyz\", \"aba\", \"1221\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i+1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i]==test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        for (var j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split('').reverse().join('')){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nvar test_list = [\"abc\", \"xyz\", \"aba\", \"1221\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i+1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i+1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count = count + 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i + 1; j < test_list.length; j++){\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        for (var j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j].split(\"\").reverse().join(\"\")) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1666123543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nfunction count_reverse_pairs(test_list){\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] == test_list[j].split(\"\").reverse().join(\"\")){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_reverse_pairs;\n  assert.deepEqual(candidate([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"]),2);\n  assert.deepEqual(candidate([\"geeks\", \"best\", \"for\", \"skeeg\"]),1);\n  assert.deepEqual(candidate([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"]),2);\n}\n\ntest();",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
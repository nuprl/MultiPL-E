{
  "name": "mbpp_630_get_coordinates",
  "language": "js",
  "prompt": "//Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nfunction get_coordinates(test_tup){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_630_get_coordinates.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var coordinates = [];\n    coordinates.push(test_tup);\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1, y]);\n    coordinates.push([x-1, y]);\n    coordinates.push([x, y+1]);\n    coordinates.push([x, y-1]);\n    coordinates.push([x+1, y+1]);\n    coordinates.push([x-1, y-1]);\n    coordinates.push([x+1, y-1]);\n    coordinates.push([x-1, y+1]);\n    return coordinates;\n}\n",
    "    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x+1,y+1]);\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x-1,y+1]);\n    return coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var adj_coordinates = [];\n    for(var i = -1; i < 2; i++){\n        for(var j = -1; j < 2; j++){\n            if(i == 0 && j == 0){\n                continue;\n            }\n            adj_coordinates.push([x + i, y + j]);\n        }\n    }\n    return adj_coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var result = [];\n    for(var i = x-1; i <= x+1; i++){\n        for(var j = y-1; j <= y+1; j++){\n            if(i != x || j != y){\n                result.push([i,j]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        for(var j=0; j<test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n",
    "    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    coordinates.push([x-1,y]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    return coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [\n        [x-1,y-1],\n        [x-1,y],\n        [x-1,y+1],\n        [x,y-1],\n        [x,y+1],\n        [x+1,y-1],\n        [x+1,y],\n        [x+1,y+1]\n    ];\n    return coordinates;\n}\n",
    "\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x, y+1]);\n\tcoordinates.push([x, y-1]);\n\tcoordinates.push([x+1, y]);\n\tcoordinates.push([x-1, y]);\n\treturn coordinates;\n}\n",
    "    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var tup = test_tup[i];\n        var x = tup[0];\n        var y = tup[1];\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n    }\n    return coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var coord_list = [];\n    for(var i = -1; i <= 1; i++){\n        for(var j = -1; j <= 1; j++){\n            if(i != 0 || j != 0){\n                coord_list.push([x + i, y + j]);\n            }\n        }\n    }\n    return coord_list;\n}\n",
    "    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n",
    "    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1, y-1]);\n    coordinates.push([x, y-1]);\n    coordinates.push([x+1, y-1]);\n    coordinates.push([x-1, y]);\n    coordinates.push([x+1, y]);\n    coordinates.push([x-1, y+1]);\n    coordinates.push([x, y+1]);\n    coordinates.push([x+1, y+1]);\n    return coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var adjacent_coordinates = [];\n    for(var i = x-1; i <= x+1; i++){\n        for(var j = y-1; j <= y+1; j++){\n            if(i == x && j == y){\n                continue;\n            }\n            adjacent_coordinates.push([i,j]);\n        }\n    }\n    return adjacent_coordinates;\n}\n",
    "    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n",
    "    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var tup = test_tup[i];\n        var x = tup[0];\n        var y = tup[1];\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n    }\n    return coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n",
    "    var coordinates = [];\n    for (var i = 0; i < test_tup.length; i++) {\n        var tup = test_tup[i];\n        var x = tup[0];\n        var y = tup[1];\n        coordinates.push([x, y]);\n        coordinates.push([x, y + 1]);\n        coordinates.push([x, y - 1]);\n        coordinates.push([x + 1, y]);\n        coordinates.push([x + 1, y + 1]);\n        coordinates.push([x + 1, y - 1]);\n        coordinates.push([x - 1, y]);\n        coordinates.push([x - 1, y + 1]);\n        coordinates.push([x - 1, y - 1]);\n    }\n    return coordinates;\n}\n"
  ]
}
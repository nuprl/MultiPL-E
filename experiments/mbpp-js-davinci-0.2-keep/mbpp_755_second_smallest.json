{
  "name": "mbpp_755_second_smallest",
  "language": "js",
  "prompt": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_755_second_smallest.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "\tvar min = Math.min.apply(null, numbers);\n\tvar min_index = numbers.indexOf(min);\n\tnumbers.splice(min_index, 1);\n\treturn Math.min.apply(null, numbers);\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min.apply(Math, numbers);\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    var second_min = Math.min.apply(Math, numbers);\n    return second_min;\n}\n",
    "    var first = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(first);\n    numbers.splice(index, 1);\n    var second = Math.min.apply(Math, numbers);\n    return second;\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min.apply(Math, numbers);\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min.apply(Math, numbers);\n}\n",
    "    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for(let i = 0; i < numbers.length; i++){\n        if(numbers[i] < second && numbers[i] != first){\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n",
    "  var min = Math.min.apply(Math, numbers);\n  var index = numbers.indexOf(min);\n  numbers.splice(index, 1);\n  return Math.min.apply(Math, numbers);\n}\n",
    "    var first = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(first);\n    numbers.splice(index, 1);\n    var second = Math.min.apply(Math, numbers);\n    return second;\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    numbers.splice(numbers.indexOf(min), 1);\n    return Math.min.apply(Math, numbers);\n}\n",
    "    var first = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(first);\n    numbers.splice(index, 1);\n    var second = Math.min.apply(Math, numbers);\n    return second;\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    numbers.splice(numbers.indexOf(min), 1);\n    return Math.min.apply(Math, numbers);\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min.apply(Math, numbers);\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    numbers.splice(numbers.indexOf(min), 1);\n    return Math.min.apply(Math, numbers);\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    numbers.splice(numbers.indexOf(min), 1);\n    return Math.min.apply(Math, numbers);\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min.apply(Math, numbers);\n}",
    "    var min = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min.apply(Math, numbers);\n}\n",
    "  var first = Math.min.apply(Math, numbers);\n  var second = Math.max.apply(Math, numbers);\n  for(var i = 0; i < numbers.length; i++){\n    if(numbers[i] < second && numbers[i] != first){\n      second = numbers[i];\n    }\n  }\n  return second;\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min.apply(Math, numbers);\n}\n",
    "    var min = Math.min.apply(Math, numbers);\n    var index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min.apply(Math, numbers);\n}\n"
  ]
}
{
  "name": "mbpp_11_remove_Occ",
  "language": "js",
  "prompt": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == j){\n        return s.slice(0, i) + s.slice(i + 1);\n    }\n    return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0,i);\n    var s2 = s.substring(i+1,j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n  var i = s.indexOf(ch);\n  var j = s.lastIndexOf(ch);\n  return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0,i);\n    var s2 = s.slice(i+1,j);\n    var s3 = s.slice(j+1);\n    var s4 = s1+s2+s3;\n    return s4;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0,i) + s.slice(i+1,j) + s.slice(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i);\n    var s2 = s.slice(i+1, j);\n    var s3 = s.slice(j+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i) + s.substring(i + 1);\n    var s2 = s1.substring(0, j) + s1.substring(j + 1);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmp0d046szh.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0d046szh.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i);\n    var s2 = s.slice(j+1);\n    var s3 = s1.concat(s2);\n    return s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'bcd'\n    at test (/tmp/tmpteopurxz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpteopurxz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'bcd',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\");\n    var s2 = s1.replace(ch, \"\");\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == -1){\n        return s;\n    }\n    else if(i == j){\n        return s.slice(0, i) + s.slice(i + 1);\n    }\n    else{\n        return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var a = s.indexOf(ch);\n    var b = s.lastIndexOf(ch);\n    var c = s.replace(s.charAt(a), '');\n    var d = c.replace(c.charAt(b-1), '');\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0,i);\n    var s2 = s.substring(i+1,j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i);\n    var s2 = s.slice(i+1, j);\n    var s3 = s.slice(j+1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return s1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == -1){\n        return s;\n    }\n    if(i == j){\n        return s.slice(0, i) + s.slice(i+1);\n    }\n    return s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0,i) + s.slice(i+1,j) + s.slice(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var res = s.replace(ch, '');\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helo'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmppzwxyouw.js:11:10)\n    at Object.<anonymous> (/tmp/tmppzwxyouw.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helo',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    return s1.replace(ch, '');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return s1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1, s.length);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var str = s.replace(ch, \"\");\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helo'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmp_cs9fec0.js:11:10)\n    at Object.<anonymous> (/tmp/tmp_cs9fec0.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helo',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0,i);\n    var s2 = s.substring(i+1,j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0,i);\n    var s2 = s.slice(i+1,j);\n    var s3 = s.slice(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i);\n    var s2 = s.slice(i+1, j);\n    var s3 = s.slice(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var index = s.indexOf(ch);\n    var index1 = s.lastIndexOf(ch);\n    var s1 = s.substring(0, index) + s.substring(index + 1);\n    var s2 = s1.substring(0, index1) + s1.substring(index1 + 1);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmpfqtjezuf.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfqtjezuf.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0,i)+s.substring(i+1,j)+s.substring(j+1);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var new_s = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return new_s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0,i);\n    var s2 = s.slice(j+1);\n    return s1+s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'bcd'\n    at test (/tmp/tmpdh9ltf3j.js:15:10)\n    at Object.<anonymous> (/tmp/tmpdh9ltf3j.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'bcd',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\");\n    var s2 = s1.replace(ch, \"\");\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i) + s.slice(i+1);\n    var s2 = s1.slice(0, j) + s1.slice(j+1);\n    return s2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmpp27g940k.js:15:10)\n    at Object.<anonymous> (/tmp/tmpp27g940k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var new_str = s.replace(ch, '');\n    return new_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helo'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmpa0ny4vnb.js:11:10)\n    at Object.<anonymous> (/tmp/tmpa0ny4vnb.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helo',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0,i) + s.slice(i+1,j) + s.slice(j+1);\n    return res;\n}\ns = \"abracadabra\";\nch = \"a\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var new_str = \"\";\n    for(var i = 0; i < s.length; i++){\n        if(s[i] != ch){\n            new_str += s[i];\n        }\n    }\n    return new_str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0,i);\n    var s2 = s.substring(i+1,j);\n    var s3 = s.substring(j+1,s.length);\n    var s4 = s1.concat(s2,s3);\n    return s4;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0,i);\n    var s2 = s.substring(i+1,j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var a = s.indexOf(ch);\n    var b = s.lastIndexOf(ch);\n    var c = s.slice(0, a) + s.slice(a + 1, b) + s.slice(b + 1);\n    return c;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    return s.replace(ch, \"\")\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helo'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmphmows6ws.js:10:10)\n    at Object.<anonymous> (/tmp/tmphmows6ws.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helo',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return s1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\")\n    var s2 = s1.replace(ch, \"\")\n    return s2\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\")\n    var s2 = s1.replace(ch, \"\")\n    return s2\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0,i);\n    var s2 = s.substring(i+1,j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return s1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1, s.length);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1+s2+s3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = \"\";\n    for(var k = 0; k < s.length; k++){\n        if(k != i && k != j){\n            res += s[k];\n        }\n    }\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var new_s = s.replace(ch, \"\");\n    return new_s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helo'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmp3ehn1pz0.js:11:10)\n    at Object.<anonymous> (/tmp/tmp3ehn1pz0.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helo',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == -1 || j == -1){\n        return s;\n    }\n    else{\n        return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\");\n    var s2 = s1.replace(ch, \"\");\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var s1 = s.substring(0, first) + s.substring(first + 1, s.length);\n    var s2 = s1.substring(0, last) + s1.substring(last + 1, s1.length);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmp_iivlm_f.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_iivlm_f.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\");\n    var s2 = s1.replace(ch, \"\");\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0,i) + s.slice(i+1,j) + s.slice(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    var s4 = s1.concat(s2, s3);\n    return s4;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0,i);\n    var s2 = s.substring(i+1,j);\n    var s3 = s.substring(j+1,s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(j + 1, s.length);\n    return s1 + s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'bcd'\n    at test (/tmp/tmp2ylkmvvm.js:15:10)\n    at Object.<anonymous> (/tmp/tmp2ylkmvvm.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'bcd',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return s1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    return s.replace(ch, \"\")\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helo'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmphmows6ws.js:10:10)\n    at Object.<anonymous> (/tmp/tmphmows6ws.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helo',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == -1){\n        return s;\n    }\n    else if(i == j){\n        return s.slice(0, i) + s.slice(i+1);\n    }\n    else{\n        return s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i);\n    var s2 = s.slice(j+1, s.length);\n    return s1+s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'bcd'\n    at test (/tmp/tmponm79k25.js:15:10)\n    at Object.<anonymous> (/tmp/tmponm79k25.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'bcd',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\");\n    var s2 = s1.replace(ch, \"\");\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i) + s.substring(i+1, s.length);\n    var s2 = s1.substring(0, j) + s1.substring(j+1, s1.length);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmpzi979l1x.js:14:10)\n    at Object.<anonymous> (/tmp/tmpzi979l1x.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i);\n    var s2 = s.slice(i+1, j);\n    var s3 = s.slice(j+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str1 = s.substring(0, i);\n    var str2 = s.substring(i+1, j);\n    var str3 = s.substring(j+1);\n    return str1 + str2 + str3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return s1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var new_str = \"\";\n    for(var i = 0; i < s.length; i++){\n        if(s[i] != ch){\n            new_str += s[i];\n        }\n    }\n    return new_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0,i) + s.slice(i+1,j) + s.slice(j+1);\n    return s1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.slice(0, first) + s.slice(first+1, last) + s.slice(last+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\")\n    var s2 = s1.replace(ch, \"\")\n    return s2\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    var s4 = s1.concat(s2,s3);\n    return s4;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var str = s.replace(ch, \"\")\n    return str\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helo'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmpdnef6sjf.js:11:10)\n    at Object.<anonymous> (/tmp/tmpdnef6sjf.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helo',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i) + s.substring(i+1, s.length);\n    var s2 = s1.substring(0, j-1) + s1.substring(j, s1.length);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\");\n    return s1.replace(ch, \"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str1 = s.substring(0, i);\n    var str2 = s.substring(i + 1, j);\n    var str3 = s.substring(j + 1);\n    return str1 + str2 + str3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\");\n    var s2 = s1.replace(ch, \"\");\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i) + s.substring(i+1);\n    var s2 = s1.substring(0, j) + s1.substring(j+1);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmp734frwla.js:14:10)\n    at Object.<anonymous> (/tmp/tmp734frwla.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == -1){\n        return s;\n    }\n    else if(i == j){\n        return s.slice(0,i) + s.slice(i+1);\n    }\n    else{\n        return s.slice(0,i) + s.slice(i+1, j) + s.slice(j+1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return s1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return s1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return s1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0,i);\n    var s2 = s.substring(i+1,j);\n    var s3 = s.substring(j+1,s.length);\n    var s4 = s1+s2+s3;\n    return s4;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1, s.length);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var index = s.indexOf(ch);\n    var index1 = s.lastIndexOf(ch);\n    var s1 = s.slice(0, index) + s.slice(index + 1);\n    var s2 = s1.slice(0, index1) + s1.slice(index1 + 1);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmp1pnfktyt.js:14:10)\n    at Object.<anonymous> (/tmp/tmp1pnfktyt.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0,i) + s.slice(i+1,j) + s.slice(j+1);\n    return s1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.slice(0,i) + s.slice(i+1,j) + s.slice(j+1,s.length);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var index = s.indexOf(ch);\n    var index1 = s.lastIndexOf(ch);\n    var s1 = s.slice(0,index) + s.slice(index+1,index1) + s.slice(index1+1);\n    return s1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return s1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i);\n    var s2 = s.slice(i+1, j);\n    var s3 = s.slice(j+1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i) + s.substring(i + 1);\n    var s2 = s1.substring(0, j) + s1.substring(j + 1);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmp0d046szh.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0d046szh.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i==j){\n        return s.replace(ch, \"\");\n    }\n    else{\n        return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\")\n    var s2 = s1.replace(ch, \"\")\n    return s2\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i+1, j);\n    var s3 = s.substring(j+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var a = s.indexOf(ch);\n    var b = s.lastIndexOf(ch);\n    var c = s.slice(0, a) + s.slice(a + 1, s.length);\n    var d = c.slice(0, b) + c.slice(b + 1, c.length);\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmpyqzcothd.js:14:10)\n    at Object.<anonymous> (/tmp/tmpyqzcothd.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, \"\")\n    var s2 = s1.replace(ch, \"\")\n    return s2\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return s1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.slice(0, i) + s.slice(i + 1);\n    var s2 = s1.slice(0, j) + s1.slice(j + 1);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmptzbb8s8v.js:14:10)\n    at Object.<anonymous> (/tmp/tmptzbb8s8v.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
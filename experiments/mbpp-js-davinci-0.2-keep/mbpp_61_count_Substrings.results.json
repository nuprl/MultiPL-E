{
  "name": "mbpp_61_count_Substrings",
  "language": "js",
  "prompt": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    let count = 0;\n    for(let i = 0; i < s.length; i++){\n        for(let j = i + 1; j <= s.length; j++){\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for(let k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        var sum = 0;\n        for(var j=i;j<s.length;j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    let count = 0;\n    for(let i = 0; i < s.length; i++){\n        for(let j = i + 1; j <= s.length; j++){\n            let sum = 0;\n            let str = s.slice(i, j);\n            for(let k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == j - i + 1){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var sub_str = s.substring(i, j);\n            for(var k = 0; k < sub_str.length; k++){\n                sum += parseInt(sub_str[k]);\n            }\n            if(sum == sub_str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == j - i + 1)\n                count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.slice(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    let count = 0;\n    for(let i = 0; i < s.length; i++){\n        for(let j = i + 1; j <= s.length; j++){\n            let sub = s.slice(i, j);\n            let sum = 0;\n            for(let k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var sub = s.substring(i, j);\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    let count = 0;\n    for (let i = 0; i < s.length; i++){\n        for (let j = i + 1; j <= s.length; j++){\n            let sum = 0;\n            let sub = s.slice(i, j);\n            for (let k = 0; k < sub.length; k++){\n                sum += Number(sub[k]);\n            }\n            if (sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        var sum = 0;\n        for (var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n\tvar count = 0;\n\tfor(var i = 0; i < s.length; i++){\n\t\tfor(var j = i + 1; j <= s.length; j++){\n\t\t\tvar sub = s.substring(i, j);\n\t\t\tif(sub.length == sum_Digits(sub)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "/tmp/tmpp8i2ub0f.js:7\n\t\t\tif(sub.length == sum_Digits(sub)){\n\t\t\t       ^\n\nReferenceError: sum_Digits is not defined\n    at count_Substrings (/tmp/tmpp8i2ub0f.js:7:11)\n    at test (/tmp/tmpp8i2ub0f.js:20:20)\n    at Object.<anonymous> (/tmp/tmpp8i2ub0f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var str = s.substring(i, j);\n            for(var k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i+1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    let count = 0;\n    for(let i = 0; i < s.length; i++){\n        for(let j = i+1; j <= s.length; j++){\n            let sub = s.substring(i,j);\n            let sum = 0;\n            for(let k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    let count = 0;\n    for(let i = 0; i < s.length; i++){\n        for(let j = i + 1; j <= s.length; j++){\n            let sub = s.slice(i, j);\n            let sum = 0;\n            for(let k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++) {\n        var sum = 0;\n        for (var j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    let count = 0;\n    for(let i = 0; i < s.length; i++){\n        for(let j = i + 1; j <= s.length; j++){\n            let sum = 0;\n            let str = s.slice(i, j);\n            for(let k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == j - i + 1){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        var sum = 0;\n        for(var j=i;j<s.length;j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        for (var j = i + 1; j <= s.length; j++){\n            if (sum_Digits(s.slice(i, j)) == (j - i)){\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "/tmp/tmp8fj4to16.js:6\n            if (sum_Digits(s.slice(i, j)) == (j - i)){\n            ^\n\nReferenceError: sum_Digits is not defined\n    at count_Substrings (/tmp/tmp8fj4to16.js:6:13)\n    at test (/tmp/tmp8fj4to16.js:19:20)\n    at Object.<anonymous> (/tmp/tmp8fj4to16.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    let count = 0;\n    for(let i = 0; i < s.length; i++){\n        let sum = 0;\n        for(let j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        var sum = 0;\n        for (var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++) {\n        for (var j = i + 1; j <= s.length; j++) {\n            var sub_str = s.substring(i, j);\n            var sum = 0;\n            for (var k = 0; k < sub_str.length; k++) {\n                sum += parseInt(sub_str[k]);\n            }\n            if (sum == sub_str.length)\n                count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        for (var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for (var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.slice(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var sub = s.substring(i, j);\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        for (var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var sub = s.substring(i, j);\n            for (var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n  var count = 0;\n  for(var i = 0; i < s.length; i++){\n    var sum = 0;\n    for(var j = i; j < s.length; j++){\n      sum += parseInt(s[j]);\n      if(sum == (j - i + 1)){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            if(sub.length == sum_digits(sub)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "/tmp/tmpad0ipcie.js:7\n            if(sub.length == sum_digits(sub)){\n                   ^\n\nReferenceError: sum_digits is not defined\n    at count_Substrings (/tmp/tmpad0ipcie.js:7:20)\n    at test (/tmp/tmpad0ipcie.js:19:20)\n    at Object.<anonymous> (/tmp/tmpad0ipcie.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        for(var j=i+1;j<=s.length;j++){\n            var sum = 0;\n            var sub = s.substring(i,j);\n            for(var k=0;k<sub.length;k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n  var count = 0;\n  for (var i = 0; i < s.length; i++) {\n    var sum = 0;\n    for (var j = i; j < s.length; j++) {\n      sum += parseInt(s[j]);\n      if (sum == (j - i + 1)) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        for(var j=i+1;j<=s.length;j++){\n            var sum = 0;\n            var str = s.slice(i,j);\n            for(var k=0;k<str.length;k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == j - i + 1){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++) {\n        var sum = 0;\n        for (var j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.slice(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var sub = s.substring(i, j);\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        for(var j=i+1;j<=s.length;j++){\n            var sum = 0;\n            var str = s.substring(i,j);\n            for(var k=0;k<str.length;k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        var sum = 0;\n        for (var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i; j < s.length; j++){\n            var sum = 0;\n            for(var k = i; k <= j; k++){\n                sum += parseInt(s[k]);\n            }\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count=0;\n    for(var i=0;i<s.length;i++){\n        var sum=0;\n        for(var j=i;j<s.length;j++){\n            sum+=parseInt(s[j]);\n            if(sum==(j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var sub = s.substring(i, j);\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var str = s.substring(i,j);\n            for(var k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var sum = 0;\n    for(var i = 0; i < s.length; i++){\n        sum += parseInt(s[i]);\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3c3xlt9j.js:15:10)\n    at Object.<anonymous> (/tmp/tmp3c3xlt9j.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            if(sub.length == sum_of_digits(sub)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "/tmp/tmpk87l4s1g.js:7\n            if(sub.length == sum_of_digits(sub)){\n                   ^\n\nReferenceError: sum_of_digits is not defined\n    at count_Substrings (/tmp/tmpk87l4s1g.js:7:20)\n    at test (/tmp/tmpk87l4s1g.js:20:20)\n    at Object.<anonymous> (/tmp/tmpk87l4s1g.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    let count = 0;\n    for(let i = 0; i < s.length; i++){\n        for(let j = i + 1; j <= s.length; j++){\n            let sub = s.substring(i, j);\n            let sum = 0;\n            for(let k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub_str = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub_str.length; k++){\n                sum += parseInt(sub_str[k]);\n            }\n            if(sum == sub_str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i,j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i; j < s.length; j++){\n            var sum = 0;\n            for(var k = i; k <= j; k++){\n                sum += parseInt(s[k]);\n            }\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        for (var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            for (var k = i; k < j; k++){\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            if(sub.length == sum_of_digits(sub)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "/tmp/tmp89ozts6b.js:7\n            if(sub.length == sum_of_digits(sub)){\n                   ^\n\nReferenceError: sum_of_digits is not defined\n    at count_Substrings (/tmp/tmp89ozts6b.js:7:20)\n    at test (/tmp/tmp89ozts6b.js:19:20)\n    at Object.<anonymous> (/tmp/tmp89ozts6b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var str = s.slice(i, j);\n            for(var k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        var sum = 0;\n        for (var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var str = s.slice(i, j);\n            for(var k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var sub = s.substring(i, j);\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        for (var j = i + 1; j <= s.length; j++){\n            var sub_str = s.substring(i, j);\n            var sum = 0;\n            for (var k = 0; k < sub_str.length; k++){\n                sum += parseInt(sub_str[k]);\n            }\n            if (sum == sub_str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var str = s.substring(i, j);\n            for(var k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i; j < s.length; j++){\n            var sum = 0;\n            for(var k = i; k <= j; k++){\n                sum += parseInt(s[k]);\n            }\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var sub = s.substring(i, j);\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == j - i + 1){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        for(var j=i+1;j<=s.length;j++){\n            var sub = s.substring(i,j);\n            var sum = 0;\n            for(var k=0;k<sub.length;k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == j - i + 1){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var sub = s.substring(i, j);\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var str = s.slice(i, j);\n            var sum = 0;\n            for(var k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var str = s.substring(i, j);\n            for(var k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++) {\n        for (var j = i + 1; j <= s.length; j++) {\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for (var k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        var sum = 0;\n        for(var j=i;j<s.length;j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        var sum = 0;\n        for(var j=i;j<s.length;j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            if(sub.length == sum_of_digits(sub)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "/tmp/tmpk87l4s1g.js:7\n            if(sub.length == sum_of_digits(sub)){\n                   ^\n\nReferenceError: sum_of_digits is not defined\n    at count_Substrings (/tmp/tmpk87l4s1g.js:7:20)\n    at test (/tmp/tmpk87l4s1g.js:20:20)\n    at Object.<anonymous> (/tmp/tmpk87l4s1g.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var sub = s.substring(i, j);\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var str = s.slice(i, j);\n            for(var k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == j - i + 1){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub_str = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub_str.length; k++){\n                sum += parseInt(sub_str[k]);\n            }\n            if(sum == sub_str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        for (var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for (var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    let count = 0;\n    for(let i = 0; i < s.length; i++){\n        for(let j = i + 1; j <= s.length; j++){\n            let sub = s.substring(i, j);\n            if(sub.length == sum_digits(sub)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "/tmp/tmprm1olvl1.js:7\n            if(sub.length == sum_digits(sub)){\n                   ^\n\nReferenceError: sum_digits is not defined\n    at count_Substrings (/tmp/tmprm1olvl1.js:7:20)\n    at test (/tmp/tmprm1olvl1.js:20:20)\n    at Object.<anonymous> (/tmp/tmprm1olvl1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == j - i + 1){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == j - i + 1){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var str = s.slice(i,j);\n            for(var k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++) {\n        for (var j = i + 1; j <= s.length; j++) {\n            var sum = 0;\n            var sub = s.substring(i, j);\n            for (var k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\ncount_Substrings(\"abcabc\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub_str = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub_str.length; k++){\n                sum += parseInt(sub_str[k]);\n            }\n            if(sum == sub_str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.slice(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\ncount_Substrings(\"abcab\")\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122721,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for (var i = 0; i < s.length; i++){\n        for (var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for (var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.slice(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        for(var j=i+1;j<=s.length;j++){\n            var sub = s.substring(i,j);\n            var sum = 0;\n            for(var k=0;k<sub.length;k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            if(sub.length == sum_Digits(sub)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122721,
      "stdout": "",
      "stderr": "/tmp/tmpg_5vesd5.js:7\n            if(sub.length == sum_Digits(sub)){\n                   ^\n\nReferenceError: sum_Digits is not defined\n    at count_Substrings (/tmp/tmpg_5vesd5.js:7:20)\n    at test (/tmp/tmpg_5vesd5.js:20:20)\n    at Object.<anonymous> (/tmp/tmpg_5vesd5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        var sum = 0;\n        for(var j=i;j<s.length;j++){\n            sum += parseInt(s[j]);\n            if(sum == (j-i+1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122721,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub_str = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub_str.length; k++){\n                sum += parseInt(sub_str[k]);\n            }\n            if(sum == sub_str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i=0;i<s.length;i++){\n        for(var j=i+1;j<=s.length;j++){\n            var sum = 0;\n            var str = s.substring(i,j);\n            for(var k=0;k<str.length;k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sub = s.substring(i, j);\n            var sum = 0;\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i+1; j <= s.length; j++){\n            var sum = 0;\n            var sub = s.substring(i,j);\n            for(var k = 0; k < sub.length; k++){\n                sum += parseInt(sub[k]);\n            }\n            if(sum == sub.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122721,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        for(var j = i + 1; j <= s.length; j++){\n            var sum = 0;\n            var str = s.slice(i, j);\n            for(var k = 0; k < str.length; k++){\n                sum += parseInt(str[k]);\n            }\n            if(sum == str.length){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1666122721,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s){\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        var sum = 0;\n        for(var j = i; j < s.length; j++){\n            sum += parseInt(s[j]);\n            if(sum == (j - i + 1)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
      "timestamp": 1665509982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
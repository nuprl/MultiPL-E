{
  "name": "mbpp_304_find_Element",
  "language": "js",
  "prompt": "//Write a python function to find element at a given index after number of rotations.\nfunction find_Element(arr, ranges, rotations, index){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_304_find_Element.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Element;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5], [[0, 2], [0, 3]], 2, 1),3);\n  assert.deepEqual(candidate([1, 2, 3, 4], [[0, 1], [0, 2]], 1, 2),3);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [[0, 1], [0, 2]], 1, 1),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    for(var i = 0; i < rotations; i++){\n        var temp = arr[ranges - 1];\n        for(var j = ranges - 1; j > 0; j--){\n            arr[j] = arr[j - 1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}",
    "    for(var i=0; i<rotations; i++){\n        var first = arr.shift();\n        arr.push(first);\n    }\n    return arr[index];\n}",
    "    var new_arr = [];\n    var len = arr.length;\n    for(var i = 0; i < rotations; i++){\n        var temp = arr[len - 1];\n        for(var j = len - 1; j > 0; j--){\n            arr[j] = arr[j - 1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}",
    "    for(var i = 0; i < rotations; i++){\n        var temp = arr[ranges - 1];\n        for(var j = ranges - 1; j >= 0; j--){\n            arr[j] = arr[j - 1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}\n",
    "    for(var i=0; i<rotations; i++){\n        var temp = arr[ranges-1];\n        for(var j=ranges-1; j>0; j--){\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}\nvar arr = [1,2,3,4,5];\nvar ranges = arr.length;\nvar rotations = 2;\nvar index = 2;",
    "    for(let i = 0; i < rotations; i++){\n        let temp = arr[ranges-1];\n        for(let j = ranges-1; j > 0; j--){\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}\n",
    "    for(var i = 0; i < rotations; i++){\n        var temp = arr[ranges - 1];\n        for(var j = ranges - 1; j > 0; j--){\n            arr[j] = arr[j - 1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}",
    "    for(var i=0; i<rotations; i++){\n        arr.unshift(arr.pop());\n    }\n    return arr[index];\n}",
    "    for(var i=0; i<rotations; i++){\n        var temp = arr[ranges-1];\n        for(var j=ranges-1; j>0; j--){\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}\nvar arr = [1,2,3,4,5];\nvar ranges = arr.length;\nvar rotations = 2;\nvar index = 2;",
    "    var len = arr.length;\n    var new_index = (index + rotations) % len;\n    return arr[new_index];\n}\n",
    "    var new_arr = [];\n    var new_index = index;\n    for(var i = 0; i < rotations; i++){\n        new_arr = arr.slice(ranges - 1);\n        for(var j = 0; j < ranges - 1; j++){\n            new_arr.push(arr[j]);\n        }\n        arr = new_arr;\n    }\n    return arr[new_index];\n}",
    "    for(var i=0; i<rotations; i++){\n        var temp = arr[ranges-1];\n        for(var j=ranges-1; j>0; j--){\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}",
    "    var new_arr = [];\n    for(var i = 0; i < ranges; i++){\n        new_arr[i] = arr[i];\n    }\n    for(var i = 0; i < rotations; i++){\n        var temp = new_arr[0];\n        for(var j = 0; j < ranges - 1; j++){\n            new_arr[j] = new_arr[j + 1];\n        }\n        new_arr[ranges - 1] = temp;\n    }\n    return new_arr[index];\n}\n\nvar arr = [1, 2, 3, 4, 5, 6, 7];\nvar ranges = arr.length;\nvar rotations = 2;\nvar index = 2;",
    "    var arr_length = arr.length;\n    var new_index = (index + rotations) % arr_length;\n    return arr[new_index];\n}\n",
    "    for(var i=0; i<rotations; i++){\n        var temp = arr[ranges-1];\n        for(var j=ranges-1; j>0; j--){\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}",
    "    for(var i=0; i<rotations; i++){\n        var temp = arr[ranges-1];\n        for(var j=ranges-1; j>0; j--){\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    console.log(arr[index]);\n}\nfind_Element([1,2,3,4,5], 5, 2, 1);\n",
    "    for(var i=0; i<rotations; i++){\n        var temp = arr[ranges-1];\n        for(var j=ranges-1; j>0; j--){\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}\n\nvar arr = [1,2,3,4,5];\nvar ranges = arr.length;\nvar rotations = 2;\nvar index = 1;",
    "    var new_arr = [];\n    for(var i = 0; i < rotations; i++){\n        new_arr = arr.slice(ranges - 1);\n        for(var j = 0; j < ranges - 1; j++){\n            new_arr.push(arr[j]);\n        }\n        arr = new_arr;\n    }\n    return arr[index];\n}",
    "    var new_arr = [];\n    for(var i=0; i<ranges; i++){\n        new_arr.push(arr[i]);\n    }\n    for(var j=0; j<rotations; j++){\n        new_arr.unshift(new_arr.pop());\n    }\n    return new_arr[index];\n}\nfind_Element([1,2,3,4,5,6], 6, 2, 3);\n",
    "    for(var i=0; i<rotations; i++){\n        var temp = arr[ranges-1];\n        for(var j=ranges-1; j>0; j--){\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];\n}"
  ]
}
{
  "name": "mbpp_407_rearrange_bigger",
  "language": "js",
  "prompt": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var temp = 0;\n  for(var i = arr.length-1; i > 0; i--){\n    if(arr[i] > arr[i-1]){\n      temp = arr[i];\n      arr[i] = arr[i-1];\n      arr[i-1] = temp;\n      break;\n    }\n  }\n  return Number(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvyxp69bx.js:22:10)\n    at Object.<anonymous> (/tmp/tmpvyxp69bx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkerhsud5.js:34:10)\n    at Object.<anonymous> (/tmp/tmpkerhsud5.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuottxh44.js:34:10)\n    at Object.<anonymous> (/tmp/tmpuottxh44.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsovho02y.js:35:10)\n    at Object.<anonymous> (/tmp/tmpsovho02y.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0) return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp88dfflr4.js:32:10)\n    at Object.<anonymous> (/tmp/tmp88dfflr4.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var nums = n.toString().split('');\n    var i = nums.length - 1;\n    while(i > 0 && nums[i] <= nums[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = nums.length - 1;\n    while(nums[j] <= nums[i - 1]){\n        j--;\n    }\n    var temp = nums[i - 1];\n    nums[i - 1] = nums[j];\n    nums[j] = temp;\n    j = nums.length - 1;\n    while(i < j){\n        temp = nums[i];\n        nums[i] = nums[j];\n        nums[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(nums.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzsdttj1k.js:35:10)\n    at Object.<anonymous> (/tmp/tmpzsdttj1k.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]) {\n    i--;\n  }\n  if(i <= 0) {\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]) {\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j) {\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpolak53hh.js:35:10)\n    at Object.<anonymous> (/tmp/tmpolak53hh.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var digits = n.toString().split('');\n    var i = digits.length - 1;\n    while(i > 0 && digits[i] <= digits[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = digits.length - 1;\n    while(digits[j] <= digits[i-1]){\n        j--;\n    }\n    var temp = digits[i-1];\n    digits[i-1] = digits[j];\n    digits[j] = temp;\n    j = digits.length - 1;\n    while(i < j){\n        temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(digits.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp5dyx83qd.js:35:10)\n    at Object.<anonymous> (/tmp/tmp5dyx83qd.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1cfu96s9.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1cfu96s9.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var num = n.toString().split('');\n    var i = num.length - 1;\n    while(i > 0 && num[i] <= num[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = num.length - 1;\n    while(num[j] <= num[i-1]){\n        j--;\n    }\n    var temp = num[i-1];\n    num[i-1] = num[j];\n    num[j] = temp;\n    j = num.length - 1;\n    while(i < j){\n        temp = num[i];\n        num[i] = num[j];\n        num[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(num.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmko_qtoa.js:34:10)\n    at Object.<anonymous> (/tmp/tmpmko_qtoa.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k7zmobo.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1k7zmobo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0) return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnoewvp_e.js:33:10)\n    at Object.<anonymous> (/tmp/tmpnoewvp_e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length - 1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyssg52ul.js:35:10)\n    at Object.<anonymous> (/tmp/tmpyssg52ul.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  let arr = n.toString().split('');\n  let i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  let j = arr.length - 1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  let temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwxbi263l.js:34:10)\n    at Object.<anonymous> (/tmp/tmpwxbi263l.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }else{\n        var j = arr.length - 1;\n        while(arr[j] <= arr[i - 1]){\n            j--;\n        }\n        var temp = arr[i - 1];\n        arr[i - 1] = arr[j];\n        arr[j] = temp;\n        j = arr.length - 1;\n        while(i < j){\n            temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n            i++;\n            j--;\n        }\n        return parseInt(arr.join(''));\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpc030dq8j.js:36:10)\n    at Object.<anonymous> (/tmp/tmpc030dq8j.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1dsi8hj4.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1dsi8hj4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe896hinm.js:35:10)\n    at Object.<anonymous> (/tmp/tmpe896hinm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n\tvar arr = n.toString().split('');\n\tvar i = arr.length-1;\n\twhile(i > 0 && arr[i-1] >= arr[i]){\n\t\ti--;\n\t}\n\tif(i <= 0){\n\t\treturn -1;\n\t}\n\tvar j = arr.length-1;\n\twhile(arr[j] <= arr[i-1]){\n\t\tj--;\n\t}\n\tvar temp = arr[i-1];\n\tarr[i-1] = arr[j];\n\tarr[j] = temp;\n\tj = arr.length-1;\n\twhile(i < j){\n\t\ttemp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t\ti++;\n\t\tj--;\n\t}\n\treturn parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmoy1qtdu.js:35:10)\n    at Object.<anonymous> (/tmp/tmpmoy1qtdu.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k7zmobo.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1k7zmobo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\").map(Number);\n    var i = arr.length-1;\n    while(arr[i-1]>=arr[i]){\n        i--;\n    }\n    if(i<=0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j]<=arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i<j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp635zx1b8.js:34:10)\n    at Object.<anonymous> (/tmp/tmp635zx1b8.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('').map(Number);\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmper9belrc.js:35:10)\n    at Object.<anonymous> (/tmp/tmper9belrc.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        var temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdedajjgy.js:34:10)\n    at Object.<anonymous> (/tmp/tmpdedajjgy.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var num = n.toString().split('');\n    var i = num.length-1;\n    while(i > 0 && num[i] <= num[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = num.length-1;\n    while(num[j] <= num[i-1]){\n        j--;\n    }\n    var temp = num[i-1];\n    num[i-1] = num[j];\n    num[j] = temp;\n    j = num.length-1;\n    while(i < j){\n        temp = num[i];\n        num[i] = num[j];\n        num[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(num.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmb6xo8mf.js:35:10)\n    at Object.<anonymous> (/tmp/tmpmb6xo8mf.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        var temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzdrud2yx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpzdrud2yx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]) {\n    i--;\n  }\n  if (i <= 0) {\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]) {\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while (i < j) {\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7ax8my06.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7ax8my06.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0) return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnoewvp_e.js:33:10)\n    at Object.<anonymous> (/tmp/tmpnoewvp_e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split(\"\").map(Number);\n  var i = arr.length-1;\n  while(arr[i-1]>=arr[i]){\n    i--;\n  }\n  if(i<=0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j]<=arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i<j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8n_t1gd8.js:35:10)\n    at Object.<anonymous> (/tmp/tmp8n_t1gd8.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ifr_9j.js:35:10)\n    at Object.<anonymous> (/tmp/tmp95ifr_9j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0) return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnoewvp_e.js:33:10)\n    at Object.<anonymous> (/tmp/tmpnoewvp_e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ifr_9j.js:35:10)\n    at Object.<anonymous> (/tmp/tmp95ifr_9j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var num = n.toString().split('');\n    var i = num.length-1;\n    while(i > 0 && num[i] <= num[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = num.length-1;\n    while(num[j] <= num[i-1]){\n        j--;\n    }\n    var temp = num[i-1];\n    num[i-1] = num[j];\n    num[j] = temp;\n    j = num.length-1;\n    while(i < j){\n        temp = num[i];\n        num[i] = num[j];\n        num[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(num.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmb6xo8mf.js:35:10)\n    at Object.<anonymous> (/tmp/tmpmb6xo8mf.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp14mcfx81.js:34:10)\n    at Object.<anonymous> (/tmp/tmp14mcfx81.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k7zmobo.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1k7zmobo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('').map(Number);\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsqmc8zkv.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsqmc8zkv.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0) return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnoewvp_e.js:33:10)\n    at Object.<anonymous> (/tmp/tmpnoewvp_e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  let arr = n.toString().split('');\n  let i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  let j = arr.length - 1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  let temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwxbi263l.js:34:10)\n    at Object.<anonymous> (/tmp/tmpwxbi263l.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbuswo6y6.js:35:10)\n    at Object.<anonymous> (/tmp/tmpbuswo6y6.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  let arr = n.toString().split('');\n  let i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i - 1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  let j = arr.length - 1;\n  while(arr[j] <= arr[i - 1]){\n    j--;\n  }\n  let temp = arr[i - 1];\n  arr[i - 1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq_neklcm.js:35:10)\n    at Object.<anonymous> (/tmp/tmpq_neklcm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe896hinm.js:35:10)\n    at Object.<anonymous> (/tmp/tmpe896hinm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i - 1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpidizi1wi.js:34:10)\n    at Object.<anonymous> (/tmp/tmpidizi1wi.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var digits = n.toString().split('');\n  var i = digits.length - 1;\n  while(i > 0 && digits[i] <= digits[i - 1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = digits.length - 1;\n  while(digits[j] <= digits[i - 1]){\n    j--;\n  }\n  var temp = digits[i - 1];\n  digits[i - 1] = digits[j];\n  digits[j] = temp;\n  j = digits.length - 1;\n  while(i < j){\n    temp = digits[i];\n    digits[i] = digits[j];\n    digits[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(digits.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzz905fyq.js:35:10)\n    at Object.<anonymous> (/tmp/tmpzz905fyq.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length - 1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyssg52ul.js:35:10)\n    at Object.<anonymous> (/tmp/tmpyssg52ul.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  let arr = n.toString().split('');\n  let i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i - 1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  let j = arr.length - 1;\n  while(arr[j] <= arr[i - 1]){\n    j--;\n  }\n  let temp = arr[i - 1];\n  arr[i - 1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq_neklcm.js:35:10)\n    at Object.<anonymous> (/tmp/tmpq_neklcm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0) return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnoewvp_e.js:33:10)\n    at Object.<anonymous> (/tmp/tmpnoewvp_e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split(\"\");\n  var i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length - 1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq2di1dv5.js:35:10)\n    at Object.<anonymous> (/tmp/tmpq2di1dv5.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var num = n.toString().split('');\n    var i = num.length-1;\n    while(i > 0 && num[i] <= num[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = num.length-1;\n    while(num[j] <= num[i-1]){\n        j--;\n    }\n    var temp = num[i-1];\n    num[i-1] = num[j];\n    num[j] = temp;\n    j = num.length-1;\n    while(i < j){\n        temp = num[i];\n        num[i] = num[j];\n        num[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(num.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp_g6abtp3.js:34:10)\n    at Object.<anonymous> (/tmp/tmp_g6abtp3.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i - 1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpidizi1wi.js:34:10)\n    at Object.<anonymous> (/tmp/tmpidizi1wi.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  let arr = n.toString().split('');\n  let i = arr.length - 1;\n  while(i > 0 && arr[i - 1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  let j = arr.length - 1;\n  while(arr[j] <= arr[i - 1]){\n    j--;\n  }\n  let temp = arr[i - 1];\n  arr[i - 1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpd6wklz8s.js:35:10)\n    at Object.<anonymous> (/tmp/tmpd6wklz8s.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var str = n.toString();\n    var arr = str.split(\"\");\n    var arr2 = arr.slice();\n    var arr3 = arr.slice();\n    var arr4 = arr.slice();\n    var arr5 = arr.slice();\n    var arr6 = arr.slice();\n    var arr7 = arr.slice();\n    var arr8 = arr.slice();\n    var arr9 = arr.slice();\n    var arr10 = arr.slice();\n    var arr11 = arr.slice();\n    var arr12 = arr.slice();\n    var arr13 = arr.slice();\n    var arr14 = arr.slice();\n    var arr15 = arr.slice();\n    var arr16 = arr.slice();\n    var arr17 = arr.slice();\n    var arr18 = arr.slice();\n    var arr19 = arr.slice();\n    var arr20 = arr.slice();\n    var arr21 = arr.slice();\n    var arr22 = arr.slice();\n    var arr23 = arr.slice();\n    var arr24 = arr.slice();\n    var arr25 = arr.slice();\n    var arr26 = arr.slice();\n    var arr27 = arr.slice();\n    var arr28 = arr.slice();\n    var arr29 = arr.slice();\n    var arr30 = arr.slice();\n    var arr31 = arr.slice();\n    var arr32 = arr.slice();\n    var arr33 = arr.slice();\n    var arr34 = arr.slice();\n    var arr35 = arr.slice();\n    var arr36 = arr.slice();\n    var arr37 = arr.slice();\n    var arr38 = arr.slice();\n    var arr39 = arr.slice();\n    var arr40 = arr.slice();\n    var arr41 = arr.slice();\n    var arr42 = arr.slice();\n    var arr43 = arr.slice();\n    var arr44 = arr.slice();\n    var arr45 = arr.slice();\n    var arr46 = arr.slice();\n    var arr47 = arr.slice();\n    var arr48 = arr.slice();\n    var arr49 = arr.slice();\n    var arr50 = arr.slice();\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpfv00u380.js:65\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        var temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4l_0ycuk.js:35:10)\n    at Object.<anonymous> (/tmp/tmp4l_0ycuk.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k7zmobo.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1k7zmobo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  let arr = n.toString().split('');\n  let i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  let j = arr.length - 1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  let temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwxbi263l.js:34:10)\n    at Object.<anonymous> (/tmp/tmpwxbi263l.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var str = n.toString();\n  var arr = str.split('');\n  var arr2 = arr.slice();\n  arr2.sort(function(a,b){return b-a});\n  if(arr.join('') == arr2.join('')){\n    return -1;\n  }\n  for(var i = arr.length-1; i > 0; i--){\n    if(arr[i] > arr[i-1]){\n      var temp = arr[i];\n      arr[i] = arr[i-1];\n      arr[i-1] = temp;\n      break;\n    }\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp_4315leh.js:27:10)\n    at Object.<anonymous> (/tmp/tmp_4315leh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var len = arr.length;\n    var i = len - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = len - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = len - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgy2nsaj5.js:37:10)\n    at Object.<anonymous> (/tmp/tmpgy2nsaj5.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k7zmobo.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1k7zmobo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpp16r1r5x.js:35:10)\n    at Object.<anonymous> (/tmp/tmpp16r1r5x.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpp16r1r5x.js:35:10)\n    at Object.<anonymous> (/tmp/tmpp16r1r5x.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbuswo6y6.js:35:10)\n    at Object.<anonymous> (/tmp/tmpbuswo6y6.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmppmypbcpz.js:34:10)\n    at Object.<anonymous> (/tmp/tmppmypbcpz.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var n_arr = n.toString().split('').map(Number);\n  var n_arr_sorted = n_arr.slice().sort(function(a,b){return b-a});\n  var n_arr_sorted_str = n_arr_sorted.join('');\n  var n_str = n.toString();\n  if(n_arr_sorted_str === n_str){\n    return -1;\n  }\n  var n_arr_sorted_str_arr = n_arr_sorted_str.split('').map(Number);\n  var n_arr_sorted_str_arr_reversed = n_arr_sorted_str_arr.slice().reverse();\n  var n_arr_sorted_str_arr_reversed_str = n_arr_sorted_str_arr_reversed.join('');\n  var n_arr_sorted_str_arr_reversed_str_arr = n_arr_sorted_str_arr_reversed_str.split('').map(Number);\n  var n_arr_sorted_str_arr_reversed_str_arr_sorted = n_arr_sorted_str_arr_reversed_str_arr.slice().sort(function(a,b){return a-b});\n  var n_arr_sorted_str_arr_reversed_str_arr_sorted_str = n_arr_sorted_str_arr_reversed_str_arr_sorted.join('');\n  var n_arr_sorted_str_arr_reversed_str_arr_sorted_str_arr = n_arr_sorted_str_arr_reversed_str_arr_sorted_str.split('').map(Number);\n  var n_arr_sorted_str_arr_reversed_str_arr_sorted_str_arr_reversed = n_arr_sorted_str_arr_reversed_str_arr_sorted_str_arr.slice().reverse();\n  var n_arr_sorted_str_arr_revers\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpvyf67kj9.js:29\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmppmypbcpz.js:34:10)\n    at Object.<anonymous> (/tmp/tmppmypbcpz.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]) {\n    i--;\n  }\n  if (i <= 0) {\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]) {\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while (i < j) {\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7ax8my06.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7ax8my06.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var num = n.toString().split(\"\");\n    var index = -1;\n    for(var i = num.length - 1; i > 0; i--){\n        if(num[i] > num[i - 1]){\n            index = i - 1;\n            break;\n        }\n    }\n    if(index == -1){\n        return -1;\n    }\n    var smallest = index + 1;\n    for(var i = smallest; i < num.length; i++){\n        if(num[i] > num[index] && num[i] < num[smallest]){\n            smallest = i;\n        }\n    }\n    var temp = num[index];\n    num[index] = num[smallest];\n    num[smallest] = temp;\n    var arr = num.splice(index + 1);\n    arr.sort();\n    num = num.concat(arr);\n    return parseInt(num.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmnl37kke.js:35:10)\n    at Object.<anonymous> (/tmp/tmpmnl37kke.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n\tvar arr = n.toString().split(\"\");\n\tvar i = arr.length-1;\n\twhile(i > 0 && arr[i-1] >= arr[i]){\n\t\ti--;\n\t}\n\tif(i <= 0){\n\t\treturn -1;\n\t}\n\tvar j = arr.length-1;\n\twhile(arr[j] <= arr[i-1]){\n\t\tj--;\n\t}\n\tvar temp = arr[i-1];\n\tarr[i-1] = arr[j];\n\tarr[j] = temp;\n\tj = arr.length-1;\n\twhile(i < j){\n\t\ttemp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t\ti++;\n\t\tj--;\n\t}\n\treturn parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpd6siuu4v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpd6siuu4v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k7zmobo.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1k7zmobo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1cfu96s9.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1cfu96s9.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var index = -1;\n  for(var i = arr.length - 1; i > 0; i--){\n    if(+arr[i] > +arr[i - 1]){\n      index = i - 1;\n      break;\n    }\n  }\n  if(index === -1){\n    return index;\n  }else{\n    var smallest = index + 1;\n    for(var j = index + 2; j < arr.length; j++){\n      if(+arr[j] > +arr[index] && +arr[j] < +arr[smallest]){\n        smallest = j;\n      }\n    }\n    var temp = arr[index];\n    arr[index] = arr[smallest];\n    arr[smallest] = temp;\n    var sub = arr.splice(index + 1).sort();\n    arr = arr.concat(sub);\n    return +arr.join('');\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp12g60xyi.js:35:10)\n    at Object.<anonymous> (/tmp/tmp12g60xyi.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0) return -1;\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpa2qmh9pq.js:33:10)\n    at Object.<anonymous> (/tmp/tmpa2qmh9pq.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ifr_9j.js:35:10)\n    at Object.<anonymous> (/tmp/tmp95ifr_9j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpp16r1r5x.js:35:10)\n    at Object.<anonymous> (/tmp/tmpp16r1r5x.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmkj28wvm.js:34:10)\n    at Object.<anonymous> (/tmp/tmpmkj28wvm.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i - 1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }else{\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n      j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n      temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n      i++;\n      j--;\n    }\n    return parseInt(arr.join(''));\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvroskgxa.js:36:10)\n    at Object.<anonymous> (/tmp/tmpvroskgxa.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7d3gbtyw.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7d3gbtyw.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var digits = n.toString().split('');\n    var i = digits.length - 1;\n    while (i > 0 && digits[i - 1] >= digits[i])\n        i--;\n    if (i <= 0)\n        return -1;\n    var j = digits.length - 1;\n    while (digits[j] <= digits[i - 1])\n        j--;\n    var temp = digits[i - 1];\n    digits[i - 1] = digits[j];\n    digits[j] = temp;\n    j = digits.length - 1;\n    while (i < j) {\n        temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(digits.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjeqwxcfe.js:31:10)\n    at Object.<anonymous> (/tmp/tmpjeqwxcfe.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
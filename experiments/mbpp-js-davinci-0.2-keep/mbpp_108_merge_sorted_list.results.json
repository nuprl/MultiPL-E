{
  "name": "mbpp_108_merge_sorted_list",
  "language": "js",
  "prompt": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var nums = num1.concat(num2, num3);\n    return nums.sort(function(a, b){return a - b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmplfc_l82k.js:41:10)\n    at Object.<anonymous> (/tmp/tmplfc_l82k.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdjabkzf6.js:47:10)\n    at Object.<anonymous> (/tmp/tmpdjabkzf6.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var num1 = [1,2,3,4,5,6,7,8,9,10];\n    var num2 = [1,2,3,4,5,6,7,8,9,10];\n    var num3 = [1,2,3,4,5,6,7,8,9,10];\n    var num4 = num1.concat(num2,num3);\n    var num5 = num4.sort(function(a, b){return a-b});\n    console.log(num5);\n}\nmerge_sorted_list();\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "[\n   1,  1,  1, 2, 2, 2, 3, 3, 3,\n   4,  4,  4, 5, 5, 5, 6, 6, 6,\n   7,  7,  7, 8, 8, 8, 9, 9, 9,\n  10, 10, 10\n]\n[\n   1,  1,  1, 2, 2, 2, 3, 3, 3,\n   4,  4,  4, 5, 5, 5, 6, 6, 6,\n   7,  7,  7, 8, 8, 8, 9, 9, 9,\n  10, 10, 10\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpf46dmr4v.js:17:10)\n    at Object.<anonymous> (/tmp/tmpf46dmr4v.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1_gy55tc.js:40:10)\n    at Object.<anonymous> (/tmp/tmp1_gy55tc.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdjabkzf6.js:47:10)\n    at Object.<anonymous> (/tmp/tmpdjabkzf6.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwexzk5p5.js:41:10)\n    at Object.<anonymous> (/tmp/tmpwexzk5p5.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar merged_list = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tmerged_list.push(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tmerged_list.push(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse{\n\t\t\tmerged_list.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tmerged_list.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tmerged_list.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tmerged_list.push(num3[k]);\n\t\tk++;\n\t}\n\treturn merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpe45rk7zu.js:41:10)\n    at Object.<anonymous> (/tmp/tmpe45rk7zu.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpywyr2dy4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpywyr2dy4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpe_jq9pp7.js:41:10)\n    at Object.<anonymous> (/tmp/tmpe_jq9pp7.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else{\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3p7wzdqg.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3p7wzdqg.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpp3mp6rrd.js:40:10)\n    at Object.<anonymous> (/tmp/tmpp3mp6rrd.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1sibqr69.js:28:10)\n    at Object.<anonymous> (/tmp/tmp1sibqr69.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpkttlfmtb.js:40:10)\n    at Object.<anonymous> (/tmp/tmpkttlfmtb.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var num1_length = num1.length;\n    var num2_length = num2.length;\n    var num3_length = num3.length;\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1_length && j < num2_length && k < num3_length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1_length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2_length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3_length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpyydsxeag.js:44:10)\n    at Object.<anonymous> (/tmp/tmpyydsxeag.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var new_arr = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      new_arr.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      new_arr.push(num2[j]);\n      j++;\n    }\n    else if(num3[k] < num1[i] && num3[k] < num2[j]){\n      new_arr.push(num3[k]);\n      k++;\n    }\n  }\n  return new_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpuba1s7op.js:29:10)\n    at Object.<anonymous> (/tmp/tmpuba1s7op.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [num1, num2, num3];\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr[i].length; j++){\n            result.push(arr[i][j]);\n        }\n    }\n    return result.sort(function(a, b){return a - b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpkttlfmtb.js:40:10)\n    at Object.<anonymous> (/tmp/tmpkttlfmtb.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpog9_fa9n.js:40:10)\n    at Object.<anonymous> (/tmp/tmpog9_fa9n.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                merged.push(num1[i]);\n                i++;\n            }else{\n                merged.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                merged.push(num2[j]);\n                j++;\n            }else{\n                merged.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        merged.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged.push(num3[k]);\n        k++;\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpfoqapy69.js:46:10)\n    at Object.<anonymous> (/tmp/tmpfoqapy69.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    for(var i = 0; i < num1.length; i++){\n        arr.push(num1[i]);\n    }\n    for(var i = 0; i < num2.length; i++){\n        arr.push(num2[i]);\n    }\n    for(var i = 0; i < num3.length; i++){\n        arr.push(num3[i]);\n    }\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n                var temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var sorted = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                sorted.push(num1[i]);\n                i++;\n            }else{\n                sorted.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                sorted.push(num2[j]);\n                j++;\n            }else{\n                sorted.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        sorted.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        sorted.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        sorted.push(num3[k]);\n        k++;\n    }\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmplmy_2rce.js:46:10)\n    at Object.<anonymous> (/tmp/tmplmy_2rce.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      result.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      result.push(num2[j]);\n      j++;\n    }\n    else if(num3[k] < num1[i] && num3[k] < num2[j]){\n      result.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    result.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    result.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    result.push(num3[k]);\n    k++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpra2sigmx.js:41:10)\n    at Object.<anonymous> (/tmp/tmpra2sigmx.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      result.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      result.push(num2[j]);\n      j++;\n    }\n    else if(num3[k] < num1[i] && num3[k] < num2[j]){\n      result.push(num3[k]);\n      k++;\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp__882nv3.js:29:10)\n    at Object.<anonymous> (/tmp/tmp__882nv3.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            } else {\n                result.push(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            } else {\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpxd61zfzp.js:46:10)\n    at Object.<anonymous> (/tmp/tmpxd61zfzp.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [num1, num2, num3];\n    var sorted = arr.sort(function(a, b){return a-b});\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    25,\n    24,\n    15,\n    4,\n    5,\n    29,\n    110\n  ],\n  [\n    19,\n    20,\n    11,\n    56,\n    25,\n    233,\n    154\n  ],\n  [\n    24,\n    26,\n    54,\n    48\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpopthf4rr.js:13:10)\n    at Object.<anonymous> (/tmp/tmpopthf4rr.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [\n      25, 24,  15, 4,\n       5, 29, 110\n    ],\n    [\n      19,  20,  11, 56,\n      25, 233, 154\n    ],\n    [ 24, 26, 54, 48 ]\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var arr = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp4nci40dc.js:40:10)\n    at Object.<anonymous> (/tmp/tmp4nci40dc.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nvar num1 = [1, 4, 6, 7, 8];\nvar num2 = [2, 3, 5, 9];\nvar num3 = [0, 10, 11, 12, 13];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpt0fmh3at.js:44:10)\n    at Object.<anonymous> (/tmp/tmpt0fmh3at.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar result = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tresult.push(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tresult.push(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse{\n\t\t\tresult.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tresult.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tresult.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tresult.push(num3[k]);\n\t\tk++;\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpkoknotwx.js:41:10)\n    at Object.<anonymous> (/tmp/tmpkoknotwx.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp_q42dapp.js:40:10)\n    at Object.<anonymous> (/tmp/tmp_q42dapp.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdi__bhmu.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdi__bhmu.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwexzk5p5.js:41:10)\n    at Object.<anonymous> (/tmp/tmpwexzk5p5.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpp3mp6rrd.js:40:10)\n    at Object.<anonymous> (/tmp/tmpp3mp6rrd.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpe_jq9pp7.js:41:10)\n    at Object.<anonymous> (/tmp/tmpe_jq9pp7.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                new_list.push(num1[i]);\n                i++;\n            }\n            else{\n                new_list.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                new_list.push(num2[j]);\n                j++;\n            }\n            else{\n                new_list.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwh52_ocm.js:49:10)\n    at Object.<anonymous> (/tmp/tmpwh52_ocm.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpe_jq9pp7.js:41:10)\n    at Object.<anonymous> (/tmp/tmpe_jq9pp7.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmplfc_l82k.js:41:10)\n    at Object.<anonymous> (/tmp/tmplfc_l82k.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var num1_len = num1.length;\n    var num2_len = num2.length;\n    var num3_len = num3.length;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var sorted_list = [];\n    while(i < num1_len && j < num2_len && k < num3_len){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            sorted_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            sorted_list.push(num2[j]);\n            j++;\n        }\n        else{\n            sorted_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1_len){\n        sorted_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2_len){\n        sorted_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3_len){\n        sorted_list.push(num3[k]);\n        k++;\n    }\n    return sorted_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpejeun2n9.js:44:10)\n    at Object.<anonymous> (/tmp/tmpejeun2n9.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpja44w4vz.js:41:10)\n    at Object.<anonymous> (/tmp/tmpja44w4vz.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var num = num1.concat(num2, num3);\n    return num.sort(function(a, b){return a-b});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpywyr2dy4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpywyr2dy4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      result.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      result.push(num2[j]);\n      j++;\n    }\n    else if(num3[k] < num1[i] && num3[k] < num2[j]){\n      result.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    result.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    result.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    result.push(num3[k]);\n    k++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpra2sigmx.js:41:10)\n    at Object.<anonymous> (/tmp/tmpra2sigmx.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpg0_fawrp.js:41:10)\n    at Object.<anonymous> (/tmp/tmpg0_fawrp.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpe_jq9pp7.js:41:10)\n    at Object.<anonymous> (/tmp/tmpe_jq9pp7.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nvar num1 = [1,2,3,4,5];\nvar num2 = [6,7,8,9,10];\nvar num3 = [11,12,13,14,15];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp4dntwhqu.js:43:10)\n    at Object.<anonymous> (/tmp/tmp4dntwhqu.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpouh51abe.js:38:10)\n    at Object.<anonymous> (/tmp/tmpouh51abe.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpouh51abe.js:38:10)\n    at Object.<anonymous> (/tmp/tmpouh51abe.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nvar num1 = [1,2,3,4,5];\nvar num2 = [2,3,4,5,6];\nvar num3 = [3,4,5,6,7];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp_6vr3x64.js:44:10)\n    at Object.<anonymous> (/tmp/tmp_6vr3x64.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var newArr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            newArr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            newArr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            newArr.push(num3[k]);\n            k++;\n        }\n    }\n    return newArr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmps3ld3v9m.js:29:10)\n    at Object.<anonymous> (/tmp/tmps3ld3v9m.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpe_jq9pp7.js:41:10)\n    at Object.<anonymous> (/tmp/tmpe_jq9pp7.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1_gy55tc.js:40:10)\n    at Object.<anonymous> (/tmp/tmp1_gy55tc.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort(function(a, b){return a-b});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwexzk5p5.js:41:10)\n    at Object.<anonymous> (/tmp/tmpwexzk5p5.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpja44w4vz.js:41:10)\n    at Object.<anonymous> (/tmp/tmpja44w4vz.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nvar num1 = [1, 2, 3, 4, 5];\nvar num2 = [6, 7, 8, 9, 10];\nvar num3 = [11, 12, 13, 14, 15];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpet513m_p.js:42:10)\n    at Object.<anonymous> (/tmp/tmpet513m_p.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                new_list.push(num1[i]);\n                i++;\n            }\n            else{\n                new_list.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                new_list.push(num2[j]);\n                j++;\n            }\n            else{\n                new_list.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwh52_ocm.js:49:10)\n    at Object.<anonymous> (/tmp/tmpwh52_ocm.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpp3mp6rrd.js:40:10)\n    at Object.<anonymous> (/tmp/tmpp3mp6rrd.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            list.push(num2[j]);\n            j++;\n        }\n        else{\n            list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        list.push(num3[k]);\n        k++;\n    }\n    return list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjqwpf91m.js:41:10)\n    at Object.<anonymous> (/tmp/tmpjqwpf91m.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar new_list = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tnew_list.push(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tnew_list.push(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j]){\n\t\t\tnew_list.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tnew_list.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tnew_list.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tnew_list.push(num3[k]);\n\t\tk++;\n\t}\n\treturn new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpx5q05y6y.js:41:10)\n    at Object.<anonymous> (/tmp/tmpx5q05y6y.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp827zq9sy.js:39:10)\n    at Object.<anonymous> (/tmp/tmp827zq9sy.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else{\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\nvar num1 = [1,2,3,4,5];\nvar num2 = [6,7,8,9,10];\nvar num3 = [11,12,13,14,15];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3x86isop.js:43:10)\n    at Object.<anonymous> (/tmp/tmp3x86isop.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i=0, j=0, k=0;\n    while(i<num1.length && j<num2.length && k<num3.length){\n        if(num1[i]<num2[j] && num1[i]<num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j]<num1[i] && num2[j]<num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i<num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j<num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k<num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpi54rzml5.js:39:10)\n    at Object.<anonymous> (/tmp/tmpi54rzml5.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp5ne1vrrf.js:39:10)\n    at Object.<anonymous> (/tmp/tmp5ne1vrrf.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp5ne1vrrf.js:39:10)\n    at Object.<anonymous> (/tmp/tmp5ne1vrrf.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var num4 = num1.concat(num2, num3);\n    var num5 = num4.sort(function(a, b){return a-b});\n    return num5;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar result = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tresult.push(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tresult.push(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j]){\n\t\t\tresult.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tresult.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tresult.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tresult.push(num3[k]);\n\t\tk++;\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpgdnu4dq7.js:41:10)\n    at Object.<anonymous> (/tmp/tmpgdnu4dq7.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nvar num1 = [1,2,3,4,5,6,7,8,9,10];\nvar num2 = [1,2,3,4,5,6,7,8,9,10];\nvar num3 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp9ss77sfo.js:44:10)\n    at Object.<anonymous> (/tmp/tmp9ss77sfo.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp5ne1vrrf.js:39:10)\n    at Object.<anonymous> (/tmp/tmp5ne1vrrf.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpqaf2fd7d.js:39:10)\n    at Object.<anonymous> (/tmp/tmpqaf2fd7d.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [num1, num2, num3];\n    var sorted = arr.sort(function(a, b){return a-b});\n    return sorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    25,\n    24,\n    15,\n    4,\n    5,\n    29,\n    110\n  ],\n  [\n    19,\n    20,\n    11,\n    56,\n    25,\n    233,\n    154\n  ],\n  [\n    24,\n    26,\n    54,\n    48\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp9k2c4r2j.js:12:10)\n    at Object.<anonymous> (/tmp/tmp9k2c4r2j.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [\n      25, 24,  15, 4,\n       5, 29, 110\n    ],\n    [\n      19,  20,  11, 56,\n      25, 233, 154\n    ],\n    [ 24, 26, 54, 48 ]\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpplbejk2k.js:39:10)\n    at Object.<anonymous> (/tmp/tmpplbejk2k.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else{\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpj0qcb2xe.js:41:10)\n    at Object.<anonymous> (/tmp/tmpj0qcb2xe.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwexzk5p5.js:41:10)\n    at Object.<anonymous> (/tmp/tmpwexzk5p5.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] <= num1[i] && num2[j] <= num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp8u92s00z.js:41:10)\n    at Object.<anonymous> (/tmp/tmp8u92s00z.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                list.push(num1[i]);\n                i++;\n            }else{\n                list.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                list.push(num2[j]);\n                j++;\n            }else{\n                list.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        list.push(num3[k]);\n        k++;\n    }\n    return list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpm68ipwt2.js:45:10)\n    at Object.<anonymous> (/tmp/tmpm68ipwt2.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var num = num1.concat(num2, num3);\n    num.sort(function(a, b){return a-b});\n    return num;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                merged_list.push(num1[i]);\n                i++;\n            }\n            else{\n                merged_list.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                merged_list.push(num2[j]);\n                j++;\n            }\n            else{\n                merged_list.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3a8o6_jm.js:48:10)\n    at Object.<anonymous> (/tmp/tmp3a8o6_jm.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp5cjg2ko_.js:38:10)\n    at Object.<anonymous> (/tmp/tmp5cjg2ko_.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpp3mp6rrd.js:40:10)\n    at Object.<anonymous> (/tmp/tmpp3mp6rrd.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwexzk5p5.js:41:10)\n    at Object.<anonymous> (/tmp/tmpwexzk5p5.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpe1rmfyit.js:40:10)\n    at Object.<anonymous> (/tmp/tmpe1rmfyit.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var sorted_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            sorted_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            sorted_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            sorted_list.push(num3[k]);\n            k++;\n        }\n    }\n    return sorted_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpnqxoq9fk.js:29:10)\n    at Object.<anonymous> (/tmp/tmpnqxoq9fk.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      result.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      result.push(num2[j]);\n      j++;\n    }\n    else{\n      result.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    result.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    result.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    result.push(num3[k]);\n    k++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmppt1ok0e0.js:41:10)\n    at Object.<anonymous> (/tmp/tmppt1ok0e0.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpg0_fawrp.js:41:10)\n    at Object.<anonymous> (/tmp/tmpg0_fawrp.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [num1, num2, num3];\n    var merged = [].concat.apply([], arr);\n    return merged.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var arr = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      arr.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      arr.push(num2[j]);\n      j++;\n    }\n    else{\n      arr.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    arr.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    arr.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    arr.push(num3[k]);\n    k++;\n  }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmppnnm5cyl.js:41:10)\n    at Object.<anonymous> (/tmp/tmppnnm5cyl.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nvar num1 = [1,2,3,4,5,6,7,8,9];\nvar num2 = [1,2,3,4,5,6,7,8,9];\nvar num3 = [1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp51m0ncrn.js:40:10)\n    at Object.<anonymous> (/tmp/tmp51m0ncrn.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else{\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpj0qcb2xe.js:41:10)\n    at Object.<anonymous> (/tmp/tmpj0qcb2xe.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpywyr2dy4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpywyr2dy4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else{\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3p7wzdqg.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3p7wzdqg.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var num1 = [1,2,3,4,5];\n    var num2 = [6,7,8,9,10];\n    var num3 = [11,12,13,14,15];\n    var num4 = num1.concat(num2, num3);\n    var num5 = num4.sort();\n    console.log(num5);\n}\nmerge_sorted_list();\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "[\n   1, 10, 11, 12, 13, 14,\n  15,  2,  3,  4,  5,  6,\n   7,  8,  9\n]\n[\n   1, 10, 11, 12, 13, 14,\n  15,  2,  3,  4,  5,  6,\n   7,  8,  9\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp9xomdci8.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9xomdci8.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var sorted_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            sorted_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            sorted_list.push(num2[j]);\n            j++;\n        }\n        else{\n            sorted_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        sorted_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        sorted_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        sorted_list.push(num3[k]);\n        k++;\n    }\n    return sorted_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp7yqpk4uk.js:41:10)\n    at Object.<anonymous> (/tmp/tmp7yqpk4uk.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nvar num1 = [1, 2, 3, 4, 5];\nvar num2 = [6, 7, 8, 9, 10];\nvar num3 = [11, 12, 13, 14, 15];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp9gjsw_8t.js:44:10)\n    at Object.<anonymous> (/tmp/tmp9gjsw_8t.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    let new_list = [];\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else{\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpo5f3j86e.js:41:10)\n    at Object.<anonymous> (/tmp/tmpo5f3j86e.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwexzk5p5.js:41:10)\n    at Object.<anonymous> (/tmp/tmpwexzk5p5.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpywyr2dy4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpywyr2dy4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [num1, num2, num3];\n    var merged = [].concat.apply([], arr);\n    return merged.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdi__bhmu.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdi__bhmu.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpkttlfmtb.js:40:10)\n    at Object.<anonymous> (/tmp/tmpkttlfmtb.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var sorted_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            sorted_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            sorted_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            sorted_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        sorted_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        sorted_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        sorted_list.push(num3[k]);\n        k++;\n    }\n    return sorted_list;\n}\nvar num1 = [1,2,3,4,5,6,7,8,9,10];\nvar num2 = [1,2,3,4,5,6,7,8,9,10];\nvar num3 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmptjpgjy7t.js:43:10)\n    at Object.<anonymous> (/tmp/tmptjpgjy7t.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpg0_fawrp.js:41:10)\n    at Object.<anonymous> (/tmp/tmpg0_fawrp.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      result.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      result.push(num2[j]);\n      j++;\n    }\n    else{\n      result.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    result.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    result.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    result.push(num3[k]);\n    k++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmppt1ok0e0.js:41:10)\n    at Object.<anonymous> (/tmp/tmppt1ok0e0.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpx3xf4dkr.js:40:10)\n    at Object.<anonymous> (/tmp/tmpx3xf4dkr.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpp3mp6rrd.js:40:10)\n    at Object.<anonymous> (/tmp/tmpp3mp6rrd.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpywyr2dy4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpywyr2dy4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var arr = num1.concat(num2, num3);\n  arr.sort(function(a, b){\n    return a - b;\n  });\n  return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpm3n9k9fq.js:44:10)\n    at Object.<anonymous> (/tmp/tmpm3n9k9fq.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nvar num1 = [1,3,5,7,9];\nvar num2 = [2,4,6,8,10];\nvar num3 = [0,11,12,13,14,15];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpcx4s8t4k.js:43:10)\n    at Object.<anonymous> (/tmp/tmpcx4s8t4k.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpplbejk2k.js:39:10)\n    at Object.<anonymous> (/tmp/tmpplbejk2k.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    arr.sort(function(a, b){return a-b});\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else{\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\n\nvar num1 = [1,2,3,4,5,6,7,8,9,10];\nvar num2 = [2,4,6,8,10,12,14,16,18,20];\nvar num3 = [3,6,9,12,15,18,21,24,27,30];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpaejl4028.js:44:10)\n    at Object.<anonymous> (/tmp/tmpaejl4028.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpywyr2dy4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpywyr2dy4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp11rijoa5.js:43:10)\n    at Object.<anonymous> (/tmp/tmp11rijoa5.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var merged_list = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp731ptv7x.js:41:10)\n    at Object.<anonymous> (/tmp/tmp731ptv7x.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var arr = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      arr.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      arr.push(num2[j]);\n      j++;\n    }\n    else if(num3[k] < num1[i] && num3[k] < num2[j]){\n      arr.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    arr.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    arr.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    arr.push(num3[k]);\n    k++;\n  }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1t8r3kra.js:41:10)\n    at Object.<anonymous> (/tmp/tmp1t8r3kra.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpp3mp6rrd.js:40:10)\n    at Object.<anonymous> (/tmp/tmpp3mp6rrd.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    for(var i = 0; i < num1.length; i++){\n        arr.push(num1[i]);\n    }\n    for(var i = 0; i < num2.length; i++){\n        arr.push(num2[i]);\n    }\n    for(var i = 0; i < num3.length; i++){\n        arr.push(num3[i]);\n    }\n    return arr.sort(function(a, b){return a - b});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar num = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tnum.push(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tnum.push(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j]){\n\t\t\tnum.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tnum.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tnum.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tnum.push(num3[k]);\n\t\tk++;\n\t}\n\treturn num;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpu5hrkau9.js:41:10)\n    at Object.<anonymous> (/tmp/tmpu5hrkau9.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var merged_list = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      merged_list.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      merged_list.push(num2[j]);\n      j++;\n    }\n    else if(num3[k] < num1[i] && num3[k] < num2[j]){\n      merged_list.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    merged_list.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    merged_list.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    merged_list.push(num3[k]);\n    k++;\n  }\n  return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmppjffnip4.js:41:10)\n    at Object.<anonymous> (/tmp/tmppjffnip4.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3mcp7zjj.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3mcp7zjj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var merged_list = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      merged_list.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      merged_list.push(num2[j]);\n      j++;\n    }\n    else if(num3[k] < num1[i] && num3[k] < num2[j]){\n      merged_list.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    merged_list.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    merged_list.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    merged_list.push(num3[k]);\n    k++;\n  }\n  return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmppjffnip4.js:41:10)\n    at Object.<anonymous> (/tmp/tmppjffnip4.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    for(var i = 0; i < num1.length; i++){\n        arr.push(num1[i]);\n    }\n    for(var j = 0; j < num2.length; j++){\n        arr.push(num2[j]);\n    }\n    for(var k = 0; k < num3.length; k++){\n        arr.push(num3[k]);\n    }\n    return arr.sort(function(a, b){return a-b});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpzzaoz7b7.js:48:10)\n    at Object.<anonymous> (/tmp/tmpzzaoz7b7.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpywyr2dy4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpywyr2dy4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                new_list.push(num1[i]);\n                i++;\n            }\n            else{\n                new_list.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                new_list.push(num2[j]);\n                j++;\n            }\n            else{\n                new_list.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwh52_ocm.js:49:10)\n    at Object.<anonymous> (/tmp/tmpwh52_ocm.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    arr.push(num1, num2, num3);\n    arr.sort(function(a, b){return a-b});\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    25,\n    24,\n    15,\n    4,\n    5,\n    29,\n    110\n  ],\n  [\n    19,\n    20,\n    11,\n    56,\n    25,\n    233,\n    154\n  ],\n  [\n    24,\n    26,\n    54,\n    48\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdg84l0d2.js:14:10)\n    at Object.<anonymous> (/tmp/tmpdg84l0d2.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [\n      25, 24,  15, 4,\n       5, 29, 110\n    ],\n    [\n      19,  20,  11, 56,\n      25, 233, 154\n    ],\n    [ 24, 26, 54, 48 ]\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar num1 = num1.split(\",\");\n\tvar num2 = num2.split(\",\");\n\tvar num3 = num3.split(\",\");\n\tvar num = num1.concat(num2, num3);\n\tnum = num.sort(function(a, b){return a-b});\n\treturn num;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "/tmp/tmpb8c3b_z1.js:3\n\tvar num1 = num1.split(\",\");\n\t                ^\n\nTypeError: num1.split is not a function\n    at merge_sorted_list (/tmp/tmpb8c3b_z1.js:3:18)\n    at test (/tmp/tmpb8c3b_z1.js:16:20)\n    at Object.<anonymous> (/tmp/tmpb8c3b_z1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var merged = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged.push(num3[k]);\n        k++;\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmporksqs26.js:41:10)\n    at Object.<anonymous> (/tmp/tmporksqs26.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpzt_ws4u1.js:29:10)\n    at Object.<anonymous> (/tmp/tmpzt_ws4u1.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpm3n9k9fq.js:44:10)\n    at Object.<anonymous> (/tmp/tmpm3n9k9fq.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpywyr2dy4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpywyr2dy4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdjabkzf6.js:47:10)\n    at Object.<anonymous> (/tmp/tmpdjabkzf6.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar result = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tresult.push(num1[i]);\n\t\t\ti++;\n\t\t}else if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tresult.push(num2[j]);\n\t\t\tj++;\n\t\t}else{\n\t\t\tresult.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tresult.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tresult.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tresult.push(num3[k]);\n\t\tk++;\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp7lkxnvp2.js:39:10)\n    at Object.<anonymous> (/tmp/tmp7lkxnvp2.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    while(num1.length && num2.length && num3.length){\n        if(num1[0] < num2[0] && num1[0] < num3[0]){\n            result.push(num1.shift());\n        }else if(num2[0] < num1[0] && num2[0] < num3[0]){\n            result.push(num2.shift());\n        }else{\n            result.push(num3.shift());\n        }\n    }\n    while(num1.length){\n        result.push(num1.shift());\n    }\n    while(num2.length){\n        result.push(num2.shift());\n    }\n    while(num3.length){\n        result.push(num3.shift());\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpy83ydtjt.js:30:10)\n    at Object.<anonymous> (/tmp/tmpy83ydtjt.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var num = num1.concat(num2, num3);\n    return num.sort(function(a, b){return a-b});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      result.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      result.push(num2[j]);\n      j++;\n    }\n    else{\n      result.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    result.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    result.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    result.push(num3[k]);\n    k++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmppt1ok0e0.js:41:10)\n    at Object.<anonymous> (/tmp/tmppt1ok0e0.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        list.push(num3[k]);\n        k++;\n    }\n    return list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpprf9xofx.js:41:10)\n    at Object.<anonymous> (/tmp/tmpprf9xofx.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar arr = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tarr.push(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tarr.push(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j]){\n\t\t\tarr.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tarr.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tarr.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tarr.push(num3[k]);\n\t\tk++;\n\t}\n\treturn arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp957uwvmq.js:41:10)\n    at Object.<anonymous> (/tmp/tmp957uwvmq.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    let arr = [num1, num2, num3];\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        result = result.concat(arr[i]);\n    }\n    return result.sort((a, b) => a - b);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp3qwrktyu.js:39:10)\n    at Object.<anonymous> (/tmp/tmp3qwrktyu.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpywyr2dy4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpywyr2dy4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp_q42dapp.js:40:10)\n    at Object.<anonymous> (/tmp/tmp_q42dapp.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar arr = num1.concat(num2, num3);\n\tvar sorted = arr.sort(function(a, b){return a-b});\n\treturn sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpywyr2dy4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpywyr2dy4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var sorted_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            sorted_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            sorted_list.push(num2[j]);\n            j++;\n        }\n        else{\n            sorted_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        sorted_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        sorted_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        sorted_list.push(num3[k]);\n        k++;\n    }\n    return sorted_list;\n}\n\nvar num1 = [1,2,3,4,5,6,7,8,9];\nvar num2 = [1,2,3,4,5,6,7,8,9];\nvar num3 = [1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpoupkz_l5.js:44:10)\n    at Object.<anonymous> (/tmp/tmpoupkz_l5.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpafcndgmw.js:40:10)\n    at Object.<anonymous> (/tmp/tmpafcndgmw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    for(var i = 0; i < num1.length; i++){\n        arr.push(num1[i]);\n    }\n    for(var i = 0; i < num2.length; i++){\n        arr.push(num2[i]);\n    }\n    for(var i = 0; i < num3.length; i++){\n        arr.push(num3[i]);\n    }\n    arr.sort(function(a, b){return a-b});\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1t8s35hj.js:38:10)\n    at Object.<anonymous> (/tmp/tmp1t8s35hj.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n  var nums = [num1, num2, num3];\n  var merged = [];\n  for(var i = 0; i < nums.length; i++){\n    for(var j = 0; j < nums[i].length; j++){\n      merged.push(nums[i][j]);\n    }\n  }\n  return merged.sort(function(a, b){return a - b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdignbzit.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdignbzit.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three lists into a single sorted list.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpizypa3lb.js:46:10)\n    at Object.<anonymous> (/tmp/tmpizypa3lb.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
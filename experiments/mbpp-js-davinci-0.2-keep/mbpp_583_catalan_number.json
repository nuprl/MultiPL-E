{
  "name": "mbpp_583_catalan_number",
  "language": "js",
  "prompt": "//Write a function which returns nth catalan number.\nfunction catalan_number(num){\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_583_catalan_number.py",
  "prompt_terminology": "verbatim",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    var c = 1;\n    for(var i = 0; i < num; i++){\n        c = c * (2 * num - i) / (i + 1);\n    }\n    return c;\n}",
    "    if(num<=1){\n        return 1;\n    }\n    var res=0;\n    for(var i=0;i<num;i++){\n        res+=catalan_number(i)*catalan_number(num-i-1);\n    }\n    return res;\n}",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    if(num == 0){\n        return 1;\n    }\n    var catalan = 0;\n    for(var i = 0; i < num; i++){\n        catalan += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return catalan;\n}\n",
    "    var catalan_number = 1;\n    if(num <= 1){\n        return 1;\n    }\n    for(var i = 2; i <= num; i++){\n        catalan_number = catalan_number * (num + i)/i;\n    }\n    return catalan_number;\n}",
    "  if(num <= 1){\n    return 1;\n  }\n  var res = 0;\n  for(var i = 0; i < num; i++){\n    res += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return res;\n}\n",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    if(num<=1){\n        return 1;\n    }\n    var res=0;\n    for(var i=0;i<num;i++){\n        res+=catalan_number(i)*catalan_number(num-i-1);\n    }\n    return res;\n}",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    var catalan_number = 1;\n    for(var i = 0; i < num; i++){\n        catalan_number = catalan_number * (2*num - i)/(i + 1);\n    }\n    return catalan_number;\n}\n",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    var catalan_num = 1;\n    for(var i = 0; i < num; i++){\n        catalan_num = catalan_num * (num + i) / (i + 1);\n    }\n    return catalan_num;\n}",
    "    var c = 1;\n    for(var i=0;i<num;i++){\n        c = c*(2*num-i)/(i+1);\n    }\n    return c/(num+1);\n}",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}",
    "    var catalan = [];\n    catalan[0] = catalan[1] = 1;\n    for(var i=2; i<=num; i++){\n        catalan[i] = 0;\n        for(var j=0; j<i; j++){\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];\n}",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    var catalan_number = 1;\n    for(var i = 0; i < num; i++){\n        catalan_number = catalan_number * (2*num - i);\n        catalan_number = catalan_number / (i + 1);\n    }\n    return catalan_number / (num + 1);\n}",
    "    if(num <= 1){\n        return 1;\n    }\n    var result = 0;\n    for(var i = 0; i < num; i++){\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;\n}"
  ]
}
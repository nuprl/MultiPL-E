name: HumanEval_78_hex_key
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You have been tasked to write a function that receives \n  \
  \  // a hexadecimal number as a string and counts the number of hexadecimal \n \
  \   // digits that are primes (prime number, or a prime, is a natural number \n\
  \    // greater than 1 that is not a product of two smaller natural numbers).\n\
  \    // Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n\
  \    // Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    // So you have to determine\
  \ a number of the following digits: 2, 3, 5, 7, \n    // B (=decimal 11), D (=decimal\
  \ 13).\n    // Note: you may assume the input is always correct or empty string,\
  \ \n    // and symbols A,B,C,D,E,F are always uppercase.\n    // Examples:\n   \
  \ // >>> HexKey((\"AB\"))\n    // (1L)\n    // >>> HexKey((\"1077E\"))\n    // (2L)\n\
  \    // >>> HexKey((\"ABED1A33\"))\n    // (4L)\n    // >>> HexKey((\"123456789ABCDEF0\"\
  ))\n    // (6L)\n    // >>> HexKey((\"2020\"))\n    // (2L)\n    public static long\
  \ HexKey(string num) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(HexKey((\"\
  AB\")) == (1L));\n    Debug.Assert(HexKey((\"1077E\")) == (2L));\n    Debug.Assert(HexKey((\"\
  ABED1A33\")) == (4L));\n    Debug.Assert(HexKey((\"2020\")) == (2L));\n    Debug.Assert(HexKey((\"\
  123456789ABCDEF0\")) == (6L));\n    Debug.Assert(HexKey((\"112233445566778899AABBCCDDEEFF00\"\
  )) == (12L));\n    }\n\n}\n"
completions: ["        // Your code goes here\n        return 0;", "        // Your\
    \ code here\n        return 0;", "        // Your code here\n        return 0;",
  "        // Your code goes here\n        return 0;", "        long count = 0;\n\
    \        for (int i = 0; i < num.Length; i++) {\n            if (num[i] == '2'\
    \ || num[i] == '3' || num[i] == '5' || num[i] == '7' || num[i] == 'B' || num[i]\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;", "        // Your code goes here\n        return 0;", "        // your\
    \ code here\n        return 0;", "        long count = 0;\n        foreach (char\
    \ c in num) {\n            if (c == '2' || c == '3' || c == '5' || c == '7' ||\
    \ c == 'B' || c == 'D') {\n                count++;\n            }\n        }\n\
    \        return count;", "        // Your code here\n        return 0;", "   \
    \     long count = 0;\n        foreach (char c in num) {\n            if (c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < num.Length; i++) {\n         \
    \   if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i] == '7' || num[i]\
    \ == 'B' || num[i] == 'D') {\n                count++;\n            }\n      \
    \  }\n        return count;", "        long count = 0;\n        for (int i = 0;\
    \ i < num.Length; i++) {\n            if (num[i] == '2' || num[i] == '3' || num[i]\
    \ == '5' || num[i] == '7' || num[i] == 'B' || num[i] == 'D') {\n             \
    \   count++;\n            }\n        }\n        return count;", "        // Your\
    \ code goes here\n        return 0;", "        // Your code goes here\n      \
    \  return 0;", "        long count = 0;\n        for (int i = 0; i < num.Length;\
    \ i++) {\n            if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7' || num[i] == 'B' || num[i] == 'D') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        // Your code goes here\n\
    \        return 0;", "        // your code here\n        return 0;", "       \
    \ // Your code goes here\n        return 0;", "        // Your code goes here\n\
    \        return 0;", "        long count = 0;\n        for (int i = 0; i < num.Length;\
    \ i++) {\n            if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7' || num[i] == 'B' || num[i] == 'D') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        // Your code goes here\n\
    \        return 0;", "        // Your code goes here\n        return 0;", "  \
    \      long count = 0;\n        foreach (char c in num) {\n            if (c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  // Your code goes here\n        return 0;", "        long count = 0;\n    \
    \    foreach (char c in num) {\n            if (c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D') {\n                count++;\n         \
    \   }\n        }\n        return count;", "        // Your code goes here\n  \
    \      return 0;", "        long count = 0;\n        for (int i = 0; i < num.Length;\
    \ i++) {\n            if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7' || num[i] == 'B' || num[i] == 'D') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        long count = 0;\n    \
    \    char[] hex = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B',\
    \ 'C', 'D', 'E', 'F'};\n        List<char> primes = new List<char> {'2', '3',\
    \ '5', '7', 'B', 'D'};\n        foreach (char c in num) {\n            if (primes.Contains(c))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return num.ToCharArray().Count(x => "2357BD".Contains(x));', '        return
    num.ToCharArray().Count(c => "2357BD".Contains(c));', "        // Your code here\n\
    \        return 0;", "        // Your code goes here\n        return 0;", "  \
    \      // Your code goes here.\n        return 0;", "        long count = 0;\n\
    \        for (int i = 0; i < num.Length; i++) {\n            if (num[i] == '2'\
    \ || num[i] == '3' || num[i] == '5' || num[i] == '7' || num[i] == 'B' || num[i]\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < num.Length; i++)\
    \ {\n            if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7' || num[i] == 'B' || num[i] == 'D') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        // your code here\n  \
    \      return 0;", "        long count = 0;\n        for (int i = 0; i < num.Length;\
    \ i++) {\n            if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7' || num[i] == 'B' || num[i] == 'D') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        long count = 0;\n    \
    \    for (int i = 0; i < num.Length; i++) {\n            if (num[i] == '2' ||\
    \ num[i] == '3' || num[i] == '5' || num[i] == '7' || num[i] == 'B' || num[i] ==\
    \ 'D') {\n                count++;\n            }\n        }\n        return count;",
  '        return num.ToCharArray().Count(x => "2357BD".Contains(x));', "        //\
    \ Your code goes here\n        return 0;", "        // Your code goes here\n \
    \       return 0;", '        return num.ToCharArray().Count(c => "2357BD".Contains(c));',
  "        // your code here\n        return 0;", '        return num.ToCharArray().Where(c
    => "2357BD".Contains(c)).Count();', "        // Your code goes here\n        return\
    \ 0;", "        long count = 0;\n        for (int i = 0; i < num.Length; i++)\
    \ {\n            if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7' || num[i] == 'B' || num[i] == 'D') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        // Your code here\n  \
    \      return 0;", "        // Your code goes here\n        return 0;", '        return
    num.ToCharArray().Where(x => "2357BD".Contains(x)).Count();', "        // Your\
    \ code goes here\n        return 0;", "        int[] primes = { 2, 3, 5, 7, 11,\
    \ 13 };\n        int[] digits = num.Select(c => Convert.ToInt32(c.ToString(),\
    \ 16)).ToArray();\n        return digits.Count(d => primes.Contains(d));", " \
    \       // Your code goes here.\n        return 0;", "        // Your code goes\
    \ here\n        return 0;", "        string hex = \"0123456789ABCDEF\";\n    \
    \    string primes = \"2357BD\";\n        long count = 0;\n        for (int i\
    \ = 0; i < num.Length; i++) {\n            if (primes.Contains(num[i])) {\n  \
    \              count++;\n            }\n        }\n        return count;", " \
    \       // Your code here\n        return 0;", "        // your code here\n  \
    \      return 0;", "        // Your code here\n        return 0;", "        long\
    \ count = 0;\n        foreach (char c in num) {\n            if (c == '2' || c\
    \ == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;", "        // Your code here\n\
    \        return 0;", "        // Your code goes here\n        return 0;", "  \
    \      // Your code goes here.\n        return 0;", "        // Your code goes\
    \ here.\n        return 0;", "        // Your code here\n        return 0;", " \
    \       // Your code here\n        return 0;", "        long count = 0;\n    \
    \    for (int i = 0; i < num.Length; i++) {\n            if (num[i] == '2' ||\
    \ num[i] == '3' || num[i] == '5' || num[i] == '7' || num[i] == 'B' || num[i] ==\
    \ 'D') {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code here\n        return 0;", "        // Your code goes here.\n\
    \        return 0;", "        // Your code goes here\n        return 0;", "  \
    \      // Your code goes here\n        return 0;", "        // Your code goes\
    \ here\n        return 0;", "        long count = 0;\n        for (int i = 0;\
    \ i < num.Length; i++) {\n            if (num[i] == '2' || num[i] == '3' || num[i]\
    \ == '5' || num[i] == '7' || num[i] == 'B' || num[i] == 'D') {\n             \
    \   count++;\n            }\n        }\n        return count;", "        // Your\
    \ code goes here.\n        return 0;", "        // Your code goes here\n     \
    \   return 0;", "        // Your code goes here\n        return 0;", "       \
    \ // Your code here\n        return 0;", "        // Your code goes here\n   \
    \     return 0;", "        // Your code goes here\n        return 0;", "     \
    \   // Your code goes here\n        return 0;", "        // Your code goes here\n\
    \        return 0;", "        // Your code goes here.\n        return 0;", " \
    \       long count = 0;\n        foreach (char c in num) {\n            if (c\
    \ == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n    \
    \            count++;\n            }\n        }\n        return count;", "   \
    \     // Your code goes here\n        return 0;", "        // Your code goes here\n\
    \        return 0;", '        return num.Where(c => "2357BD".Contains(c)).Count();',
  "        long count = 0;\n        foreach (char c in num) {\n            if (c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < num.Length; i++) {\n         \
    \   if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i] == '7' || num[i]\
    \ == 'B' || num[i] == 'D') {\n                count++;\n            }\n      \
    \  }\n        return count;", "        // Your code goes here\n        return\
    \ 0;", "        int[] primes = { 2, 3, 5, 7, 11, 13 };\n        int[] hex = {\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };\n        int[] hex_primes\
    \ = { 2, 3, 5, 7, 11, 13 };\n        int count = 0;\n        for (int i = 0; i\
    \ < num.Length; i++) {\n            for (int j = 0; j < hex.Length; j++) {\n \
    \               if (num[i] == hex[j]) {\n                    for (int k = 0; k\
    \ < hex_primes.Length; k++) {\n                        if (hex[j] == hex_primes[k])\
    \ {\n                            count++;\n                        }\n       \
    \             }\n                }\n            }\n        }\n        return count;",
  "        // Your code goes here\n        return 0;", "        // Your code goes\
    \ here\n        return 0;", "        // Your code goes here\n        return 0;",
  "        long count = 0;\n        foreach (char c in num) {\n            if (c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < num.Length; i++) {\n         \
    \   if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i] == '7' || num[i]\
    \ == 'B' || num[i] == 'D') {\n                count++;\n            }\n      \
    \  }\n        return count;", '        return num.ToCharArray().Where(c => "2357BD".Contains(c)).Count();',
  "        // Your code goes here\n        return 0;", "        // Your code goes\
    \ here\n        return 0;", "        // Your code here\n        return 0;", " \
    \       // Your code goes here.\n        return 0;", "        // Your code goes\
    \ here.\n        return 0;", "        // Your code goes here\n        return 0;",
  "        // Your code goes here\n        return 0;", '        return num.ToCharArray().Count(c
    => "2357BD".Contains(c));', "        // Your code goes here\n        return 0;",
  "        // Your code goes here\n        return 0;", "        long count = 0;\n\
    \        foreach (char c in num) {\n            switch (c) {\n               \
    \ case '2':\n                case '3':\n                case '5':\n          \
    \      case '7':\n                case 'B':\n                case 'D':\n     \
    \               count++;\n                    break;\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        foreach (char c in\
    \ num) {\n            if (c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D') {\n                count++;\n            }\n        }\n   \
    \     return count;", "        // Your code here\n        return 0;", "      \
    \  // Your code goes here\n        return 0;", '        return num.ToCharArray().Count(x
    => "2357BD".Contains(x));', "        long count = 0;\n        for (int i = 0;\
    \ i < num.Length; i++) {\n            if (num[i] == '2' || num[i] == '3' || num[i]\
    \ == '5' || num[i] == '7' || num[i] == 'B' || num[i] == 'D') {\n             \
    \   count++;\n            }\n        }\n        return count;", "        // Your\
    \ code goes here\n        return 0;", "        // Your code here\n        return\
    \ 0;", "        // Your code here\n        return 0;", "        long count = 0;\n\
    \        foreach (char c in num) {\n            int i = Convert.ToInt32(c.ToString(),\
    \ 16);\n            if (i == 2 || i == 3 || i == 5 || i == 7 || i == 11 || i ==\
    \ 13) {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code goes here.\n        return 0;", "        // Your code goes\
    \ here\n        return 0;", "        long count = 0;\n        foreach (char c\
    \ in num) {\n            if (c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D') {\n                count++;\n            }\n        }\n\
    \        return count;", "        var primes = new List<int> { 2, 3, 5, 7, 11,\
    \ 13 };\n        var hex = new List<char> { '0', '1', '2', '3', '4', '5', '6',\
    \ '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };\n        var count = 0;\n   \
    \     foreach (var c in num) {\n            if (primes.Contains(hex.IndexOf(c)))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code here\n        return 0;", '        return num.Count(c => "2357BD".Contains(c));',
  "        // Your code here\n        return 0;", "        var primes = new HashSet<int>()\
    \ { 2, 3, 5, 7, 11, 13 };\n        return num.ToCharArray().Select(c => Convert.ToInt32(c.ToString(),\
    \ 16)).Count(p => primes.Contains(p));", "        long result = 0;\n        foreach\
    \ (char c in num) {\n            int i = Convert.ToInt32(c.ToString(), 16);\n\
    \            if (i == 2 || i == 3 || i == 5 || i == 7 || i == 11 || i == 13) {\n\
    \                result++;\n            }\n        }\n        return result;",
  "        long count = 0;\n        for (int i = 0; i < num.Length; i++) {\n     \
    \       if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i] == '7' ||\
    \ num[i] == 'B' || num[i] == 'D') {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < num.Length; i++) {\n            if (num[i] == '2' || num[i] == '3'\
    \ || num[i] == '5' || num[i] == '7' || num[i] == 'B' || num[i] == 'D') {\n   \
    \             count++;\n            }\n        }\n        return count;", "  \
    \      long count = 0;\n        foreach (char c in num) {\n            if (c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (char c in num) {\n            if (c == '2'\
    \ || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n           \
    \     count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        foreach (char c in num) {\n            if (c == '2' || c\
    \ == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        foreach (char c in num) {\n            if (c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n  \
    \          }\n        }\n        return count;", "        // Your code here\n\
    \        return 0;", "        var primes = new HashSet<int> { 2, 3, 5, 7, 11,\
    \ 13 };\n        var hex = new HashSet<char> { '0', '1', '2', '3', '4', '5', '6',\
    \ '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };\n        var count = 0;\n   \
    \     foreach (var c in num) {\n            if (hex.Contains(c) && primes.Contains(int.Parse(c.ToString(),\
    \ System.Globalization.NumberStyles.HexNumber))) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // Your code here\n\
    \        return 0;", "        long count = 0;\n        for (int i = 0; i < num.Length;\
    \ i++) {\n            if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7' || num[i] == 'B' || num[i] == 'D') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        // Your code goes here\n\
    \        return 0;", "        // Your code goes here.\n        return 0;", " \
    \       // Your code goes here\n        return 0;", "        // Your code goes\
    \ here\n        return 0;", "        // Your code goes here\n        return 0;",
  "        // Your code here\n        return 0;", "        // your code here\n   \
    \     return 0;", "        long count = 0;\n        for (int i = 0; i < num.Length;\
    \ i++) {\n            if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7' || num[i] == 'B' || num[i] == 'D') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        // Your code goes here\n\
    \        return 0;", "        // Your code goes here\n        return 0;", "  \
    \      // Your code goes here\n        return 0;", "        // Your code here\n\
    \        return 0;", "        // Your code here\n        return 0;", '        return
    num.Count(c => "2357BD".Contains(c));', "        // Your code goes here\n    \
    \    return 0;", "        // your code here\n        return 0;", "        // Your\
    \ code goes here\n        return 0;", "        long count = 0;\n        for (int\
    \ i = 0; i < num.Length; i++) {\n            if (num[i] == '2' || num[i] == '3'\
    \ || num[i] == '5' || num[i] == '7' || num[i] == 'B' || num[i] == 'D') {\n   \
    \             count++;\n            }\n        }\n        return count;", "  \
    \      // Your code goes here\n        return 0;", "        // Your code goes\
    \ here\n        return 0;", "        // your code here\n        return 0;", " \
    \       long count = 0;\n        for (int i = 0; i < num.Length; i++) {\n    \
    \        if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i] == '7'\
    \ || num[i] == 'B' || num[i] == 'D') {\n                count++;\n           \
    \ }\n        }\n        return count;", "        long count = 0;\n        foreach\
    \ (char c in num) {\n            if (c == '2' || c == '3' || c == '5' || c ==\
    \ '7' || c == 'B' || c == 'D') {\n                count++;\n            }\n  \
    \      }\n        return count;", "        // Your code here\n        return 0;",
  "        long count = 0;\n        foreach (char c in num) {\n            if (c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n       \
    \         count++;\n            }\n        }\n        return count;", '        return
    num.ToCharArray().Count(c => "2357BD".Contains(c));', "        // Your code here\n\
    \        return 0;", "        // Your code here\n        return 0;", "       \
    \ // Your code goes here\n        return 0;", "        // Your code here\n   \
    \     return 0;", "        // Your code goes here\n        return 0;", "     \
    \   // Your code here\n        return 0;", "        // Your code here\n      \
    \  return 0;", "        long count = 0;\n        for (int i = 0; i < num.Length;\
    \ i++) {\n            if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7' || num[i] == 'B' || num[i] == 'D') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        long count = 0;\n    \
    \    foreach (char c in num) {\n            if (c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D') {\n                count++;\n         \
    \   }\n        }\n        return count;", "        long count = 0;\n        foreach\
    \ (char c in num) {\n            if (c == '2' || c == '3' || c == '5' || c ==\
    \ '7' || c == 'B' || c == 'D') {\n                count++;\n            }\n  \
    \      }\n        return count;", '        return num.ToCharArray().Count(c =>
    "2357BD".Contains(c));', "        long count = 0;\n        foreach (char c in\
    \ num) {\n            if (c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D') {\n                count++;\n            }\n        }\n   \
    \     return count;", "        // Your code goes here\n        return 0;", " \
    \       var hex = new Dictionary<char, int>() {\n            {'0', 0}, {'1', 1},\
    \ {'2', 2}, {'3', 3}, {'4', 4}, {'5', 5}, {'6', 6}, {'7', 7}, {'8', 8}, {'9',\
    \ 9},\n            {'A', 10}, {'B', 11}, {'C', 12}, {'D', 13}, {'E', 14}, {'F',\
    \ 15}\n        };\n        var primes = new HashSet<int>() {2, 3, 5, 7, 11, 13};\n\
    \        return num.Select(c => hex[c]).Count(x => primes.Contains(x));", "  \
    \      long count = 0;\n        foreach (char c in num) {\n            if (c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  // Your code goes here.\n        return 0;", "        long count = 0;\n   \
    \     foreach (char c in num) {\n            if (c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n     \
    \       }\n        }\n        return count;", '        return num.ToCharArray().Select(x
    => Convert.ToInt32(x.ToString(), 16)).Where(x => x == 2 || x == 3 || x == 5 ||
    x == 7 || x == 11 || x == 13).Count();', "        long count = 0;\n        foreach\
    \ (char c in num) {\n            if (c == '2' || c == '3' || c == '5' || c ==\
    \ '7' || c == 'B' || c == 'D') {\n                count++;\n            }\n  \
    \      }\n        return count;", "        // Your code here\n        return 0;",
  "        // Your code goes here\n        return 0;", "        // Your code goes\
    \ here\n        return 0;", "        // Your code here\n        return 0;", " \
    \       // Your code here\n        return 0;", '        return num.ToCharArray().Count(c
    => "2357BD".Contains(c));', "        // Your code goes here\n        return 0;",
  "        long count = 0;\n        for (int i = 0; i < num.Length; i++) {\n     \
    \       if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i] == '7' ||\
    \ num[i] == 'B' || num[i] == 'D') {\n                count++;\n            }\n\
    \        }\n        return count;", "        var hex = new HashSet<char>() { '2',\
    \ '3', '5', '7', 'B', 'D' };\n        return num.Count(c => hex.Contains(c));",
  "        // Your code goes here\n        return 0;", '        return num.ToCharArray().Count(c
    => "2357BD".Contains(c));', "        long count = 0;\n        foreach (char c\
    \ in num) {\n            if (c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D') {\n                count++;\n            }\n        }\n\
    \        return count;", "        // your code here\n        return 0;", "   \
    \     // Your code goes here\n        return 0;", "        var primes = new HashSet<int>\
    \ { 2, 3, 5, 7, 11, 13 };\n        return num.Select(c => (int)c).Where(c => primes.Contains(c)).Count();",
  "        long count = 0;\n        for (int i = 0; i < num.Length; i++) {\n     \
    \       if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i] == '7' ||\
    \ num[i] == 'B' || num[i] == 'D') {\n                count++;\n            }\n\
    \        }\n        return count;", "        // Your code goes here\n        return\
    \ 0;", "        long count = 0;\n        for (int i = 0; i < num.Length; i++)\
    \ {\n            if (num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7' || num[i] == 'B' || num[i] == 'D') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        var primes = new HashSet<int>()\
    \ { 2, 3, 5, 7, 11, 13 };\n        var hex = new HashSet<char>() { '0', '1', '2',\
    \ '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };\n       \
    \ var digits = num.ToCharArray();\n        var count = 0;\n        foreach (var\
    \ digit in digits) {\n            if (hex.Contains(digit) && primes.Contains(int.Parse(digit.ToString(),\
    \ System.Globalization.NumberStyles.HexNumber))) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // Your code goes\
    \ here.\n        return 0;", "        long count = 0;\n        foreach (char c\
    \ in num) {\n            if (c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D') {\n                count++;\n            }\n        }\n\
    \        return count;", "        // Your code goes here\n        return 0;"]
stop_tokens:
- "\n    }\n"

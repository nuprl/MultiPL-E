language: cs
name: HumanEval_90_next_smallest
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       if (min > nextMin) {\n            min = nextMin;\n            nextMin
    = lst[0];\n        }\n        for (int i = 2; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                nextMin = min;\n                min = lst[i];\n
    \           } else if (lst[i] < nextMin) {\n                nextMin = lst[i];\n
    \           }\n        }\n        return nextMin;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb6a6f0b375a4836a843b8534e42aae2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb6a6f0b375a4836a843b8534e42aae2>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long i in lst) {\n            if (i <
    min) {\n                min2 = min;\n                min = i;\n            } else
    if (i < min2) {\n                min2 = i;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <602e9eb92a634ecd8671226875d5d100>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <602e9eb92a634ecd8671226875d5d100>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long secondMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               secondMin = min;\n                min = lst[i];\n            }
    else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n            }\n
    \       }\n        if (min == secondMin) {\n            return null;\n        }\n
    \       return secondMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long secondMin
    = long.MaxValue;\n        for (int i = 1; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                secondMin = min;\n                min = lst[i];\n
    \           } else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n
    \           }\n        }\n        if (secondMin == long.MaxValue) {\n            return
    null;\n        }\n        return secondMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]
    < min) {\n                min2 = min;\n                min = lst[i];\n            }
    else if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       if (min == min2) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f9498f897d043f8897974f6e68944bd>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <3f9498f897d043f8897974f6e68944bd>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <3f9498f897d043f8897974f6e68944bd>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <3f9498f897d043f8897974f6e68944bd>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <3f9498f897d043f8897974f6e68944bd>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long secondMin
    = long.MaxValue;\n        foreach (long i in lst) {\n            if (i < min)
    {\n                secondMin = min;\n                min = i;\n            } else
    if (i < secondMin && i != min) {\n                secondMin = i;\n            }\n
    \       }\n        if (secondMin == long.MaxValue) {\n            return null;\n
    \       }\n        return secondMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long nextMin
    = long.MaxValue;\n        for (int i = 1; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                nextMin = min;\n                min = lst[i];\n
    \           } else if (lst[i] < nextMin) {\n                nextMin = lst[i];\n
    \           }\n        }\n        if (nextMin == long.MaxValue) {\n            return
    null;\n        }\n        return nextMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <7d3cea0cdf34439db5d354c7db020d5d>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <7d3cea0cdf34439db5d354c7db020d5d>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <7d3cea0cdf34439db5d354c7db020d5d>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <7d3cea0cdf34439db5d354c7db020d5d>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long i in lst) {\n            if (i <
    min) {\n                min2 = min;\n                min = i;\n            } else
    if (i < min2) {\n                min2 = i;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <602e9eb92a634ecd8671226875d5d100>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <602e9eb92a634ecd8671226875d5d100>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            long tmp = min;\n            min = min2;\n            min2
    = tmp;\n        }\n        for (int i = 2; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                min2 = min;\n                min = lst[i];\n
    \           } else if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n
    \       }\n        return min2;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0f161fd84a24c4cb283e778060590c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0f161fd84a24c4cb283e778060590c8>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        if (lst.Count == 1) {\n            return null;\n        }\n
    \       long min = lst[0];\n        long min2 = lst[1];\n        for (int i =
    1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long second
    = long.MaxValue;\n        foreach (long i in lst) {\n            if (i < min)
    {\n                second = min;\n                min = i;\n            } else
    if (i < second && i != min) {\n                second = i;\n            }\n        }\n
    \       if (second == long.MaxValue) {\n            return null;\n        }\n
    \       return second;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9e6e6c0d56ba4d1885f56ec7c4fadf74>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9e6e6c0d56ba4d1885f56ec7c4fadf74>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9e6e6c0d56ba4d1885f56ec7c4fadf74>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9e6e6c0d56ba4d1885f56ec7c4fadf74>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min > min2) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33537ae1032e4213bea9b5fc44b52de2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33537ae1032e4213bea9b5fc44b52de2>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    nextMin = long.MaxValue;\n        foreach (long i in lst) {\n            if (i
    < min) {\n                nextMin = min;\n                min = i;\n            }
    else if (i < nextMin) {\n                nextMin = i;\n            }\n        }\n
    \       if (nextMin == long.MaxValue) {\n            return null;\n        }\n
    \       return nextMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1fabc26b1d740d5b26904dbbcdd181b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1fabc26b1d740d5b26904dbbcdd181b>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        foreach (long i in lst) {\n            if (i < min) {\n                min2
    = min;\n                min = i;\n            } else if (i < min2) {\n                min2
    = i;\n            }\n        }\n        if (min2 == min) {\n            return
    null;\n        }\n        return min2;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9767ce4f7b794780a4975221731bbc86>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9767ce4f7b794780a4975221731bbc86>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9767ce4f7b794780a4975221731bbc86>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9767ce4f7b794780a4975221731bbc86>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9767ce4f7b794780a4975221731bbc86>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[0];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3bd37772a41e43c9af4a0ed5fb5b707c>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next_min = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               next_min = min;\n                min = lst[i];\n            }
    else if (lst[i] < next_min) {\n                next_min = lst[i];\n            }\n
    \       }\n        if (min == next_min) {\n            return null;\n        }\n
    \       return next_min;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long x in lst) {\n            if (x <
    min) {\n                min2 = min;\n                min = x;\n            } else
    if (x < min2) {\n                min2 = x;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            long x = lst[i];\n
    \           if (x < min) {\n                min2 = min;\n                min =
    x;\n            } else if (x < min2) {\n                min2 = x;\n            }\n
    \       }\n        return min2;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <824a9e2d28944aa897bfd37efc402885>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <824a9e2d28944aa897bfd37efc402885>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       if (min > nextMin) {\n            min = nextMin;\n            nextMin
    = lst[0];\n        }\n        for (int i = 2; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                nextMin = min;\n                min = lst[i];\n
    \           } else if (lst[i] < nextMin) {\n                nextMin = lst[i];\n
    \           }\n        }\n        return nextMin;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb6a6f0b375a4836a843b8534e42aae2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb6a6f0b375a4836a843b8534e42aae2>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = long.MaxValue;\n        long nextMin = long.MaxValue;\n
    \       foreach (long x in lst) {\n            if (x < min) {\n                nextMin
    = min;\n                min = x;\n            } else if (x < nextMin) {\n                nextMin
    = x;\n            }\n        }\n        if (nextMin == long.MaxValue) {\n            return
    null;\n        }\n        return nextMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cebb3cbe659a4463a811757764cd084e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cebb3cbe659a4463a811757764cd084e>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long secondMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               secondMin = min;\n                min = lst[i];\n            }
    else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n            }\n
    \       }\n        if (min == secondMin) {\n            return null;\n        }\n
    \       return secondMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = long.MaxValue;\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               next = min;\n                min = lst[i];\n            } else
    if (lst[i] < next) {\n                next = lst[i];\n            }\n        }\n
    \       if (next == long.MaxValue) {\n            return null;\n        }\n        return
    next;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7000c864d0c1402da4d15c43132174ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7000c864d0c1402da4d15c43132174ef>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            long x = lst[i];\n
    \           if (x < min) {\n                min2 = min;\n                min =
    x;\n            } else if (x < min2) {\n                min2 = x;\n            }\n
    \       }\n        return min2;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <824a9e2d28944aa897bfd37efc402885>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <824a9e2d28944aa897bfd37efc402885>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i]
    < min) {\n                min2 = min;\n                min = lst[i];\n            }
    else if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       if (min2 == min) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e9f4222ba3e4dcdb2912ab1e26bd6e7>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <8e9f4222ba3e4dcdb2912ab1e26bd6e7>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <8e9f4222ba3e4dcdb2912ab1e26bd6e7>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <8e9f4222ba3e4dcdb2912ab1e26bd6e7>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <8e9f4222ba3e4dcdb2912ab1e26bd6e7>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min > min2) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33537ae1032e4213bea9b5fc44b52de2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33537ae1032e4213bea9b5fc44b52de2>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long x in lst) {\n            if (x <
    min) {\n                min2 = min;\n                min = x;\n            } else
    if (x < min2) {\n                min2 = x;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e2c1d0e9d6c4178aa6be273230e0a4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e2c1d0e9d6c4178aa6be273230e0a4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here.\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d9aa11d1b4242cfb624b2fc2375db0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d9aa11d1b4242cfb624b2fc2375db0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here.\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d9aa11d1b4242cfb624b2fc2375db0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d9aa11d1b4242cfb624b2fc2375db0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        if (lst.Count == 1) {\n            return null;\n        }\n
    \       long min = lst[0];\n        long next = lst[1];\n        for (int i =
    1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long secondMin = lst[1];\n
    \       if (min > secondMin) {\n            long temp = min;\n            min
    = secondMin;\n            secondMin = temp;\n        }\n        for (int i = 2;
    i < lst.Count; i++) {\n            if (lst[i] < min) {\n                secondMin
    = min;\n                min = lst[i];\n            } else if (lst[i] < secondMin)
    {\n                secondMin = lst[i];\n            }\n        }\n        return
    secondMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d181029439964f889325a915b338fa90>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d181029439964f889325a915b338fa90>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long x in lst) {\n            if (x <
    min) {\n                min2 = min;\n                min = x;\n            } else
    if (x < min2) {\n                min2 = x;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        if (lst.Count == 1) {\n            return null;\n        }\n
    \       long min = lst[0];\n        long min2 = lst[1];\n        if (min2 < min)
    {\n            min = min2;\n            min2 = lst[0];\n        }\n        for
    (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        return min2;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2701db8b36b04b4fba89024b6b480d47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2701db8b36b04b4fba89024b6b480d47>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long second = lst[1];\n
    \       if (second < min) {\n            min = second;\n            second = lst[0];\n
    \       }\n        for (int i = 2; i < lst.Count; i++) {\n            if (lst[i]
    < min) {\n                second = min;\n                min = lst[i];\n            }
    else if (lst[i] < second) {\n                second = lst[i];\n            }\n
    \       }\n        return second;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da68ad163a744a4d94108f09113306d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da68ad163a744a4d94108f09113306d1>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next_min = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               next_min = min;\n                min = lst[i];\n            }
    else if (lst[i] < next_min) {\n                next_min = lst[i];\n            }\n
    \       }\n        if (min == next_min) {\n            return null;\n        }\n
    \       return next_min;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long next
    = long.MaxValue;\n        for (int i = 1; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                next = min;\n                min = lst[i];\n
    \           } else if (lst[i] < next) {\n                next = lst[i];\n            }\n
    \       }\n        if (next == long.MaxValue) {\n            return null;\n        }\n
    \       return next;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <bd165444ee8b4ed79b6918d673fe2672>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <bd165444ee8b4ed79b6918d673fe2672>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <bd165444ee8b4ed79b6918d673fe2672>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <bd165444ee8b4ed79b6918d673fe2672>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]
    < min) {\n                min2 = min;\n                min = lst[i];\n            }
    else if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       if (min2 == min) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long second = long.MaxValue;\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               second = min;\n                min = lst[i];\n            } else
    if (lst[i] < second) {\n                second = lst[i];\n            }\n        }\n
    \       if (second == long.MaxValue) {\n            return null;\n        }\n
    \       return second;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <52f3bc63f77c4c76bfb9b46452c354df>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <52f3bc63f77c4c76bfb9b46452c354df>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    secondMin = long.MaxValue;\n        foreach (long x in lst) {\n            if
    (x < min) {\n                secondMin = min;\n                min = x;\n            }
    else if (x < secondMin) {\n                secondMin = x;\n            }\n        }\n
    \       if (secondMin == long.MaxValue) {\n            return null;\n        }\n
    \       return secondMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17c6d2bb8949491281db14e198a427bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17c6d2bb8949491281db14e198a427bb>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long second = long.MaxValue;\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               second = min;\n                min = lst[i];\n            } else
    if (lst[i] < second) {\n                second = lst[i];\n            }\n        }\n
    \       if (second == long.MaxValue) {\n            return null;\n        }\n
    \       return second;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <52f3bc63f77c4c76bfb9b46452c354df>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <52f3bc63f77c4c76bfb9b46452c354df>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long x in lst) {\n            if (x <
    min) {\n                min2 = min;\n                min = x;\n            } else
    if (x < min2) {\n                min2 = x;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = long.MaxValue;\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       if (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27bee7b45dcc4a7b88abcb8652a89c47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27bee7b45dcc4a7b88abcb8652a89c47>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = long.MaxValue;\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (nextMin == long.MaxValue) {\n            return null;\n        }\n
    \       return nextMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05da07ec14e34c23a6f007ab29e19f62>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05da07ec14e34c23a6f007ab29e19f62>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long second = lst[1];\n
    \       if (min > second) {\n            min = second;\n            second = lst[0];\n
    \       }\n        for (int i = 2; i < lst.Count; i++) {\n            if (lst[i]
    < min) {\n                second = min;\n                min = lst[i];\n            }
    else if (lst[i] < second) {\n                second = lst[i];\n            }\n
    \       }\n        return second;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f31f52deae84caeafbc539b6df27259>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f31f52deae84caeafbc539b6df27259>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    secondMin = long.MaxValue;\n        foreach (long l in lst) {\n            if
    (l < min) {\n                secondMin = min;\n                min = l;\n            }
    else if (l < secondMin) {\n                secondMin = l;\n            }\n        }\n
    \       if (secondMin == long.MaxValue) {\n            return null;\n        }\n
    \       return secondMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e3f3161aa7d1401bb91ca7ffaf3324f3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e3f3161aa7d1401bb91ca7ffaf3324f3>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        foreach (long i in lst) {\n            if (i < min) {\n                min2
    = min;\n                min = i;\n            } else if (i < min2) {\n                min2
    = i;\n            }\n        }\n        if (min2 == min) {\n            return
    null;\n        }\n        return min2;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9767ce4f7b794780a4975221731bbc86>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9767ce4f7b794780a4975221731bbc86>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9767ce4f7b794780a4975221731bbc86>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9767ce4f7b794780a4975221731bbc86>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9767ce4f7b794780a4975221731bbc86>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long smallest = lst[0];\n        long nextSmallest =
    lst[1];\n        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i]
    < smallest) {\n                nextSmallest = smallest;\n                smallest
    = lst[i];\n            } else if (lst[i] < nextSmallest) {\n                nextSmallest
    = lst[i];\n            }\n        }\n        if (smallest == nextSmallest) {\n
    \           return null;\n        }\n        return nextSmallest;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long l in lst) {\n            if (l <
    min) {\n                min2 = min;\n                min = l;\n            } else
    if (l < min2) {\n                min2 = l;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <230a32a7054f496daf63294cc90b20c2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <230a32a7054f496daf63294cc90b20c2>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        if (lst.Count == 1) {\n            return null;\n        }\n
    \       long min = lst[0];\n        long min2 = lst[1];\n        if (min > min2)
    {\n            min = min2;\n            min2 = lst[0];\n        }\n        for
    (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        return min2;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f87de50ae29e4d54b280da59e8a21750>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f87de50ae29e4d54b280da59e8a21750>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long nextMin
    = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i]
    < min) {\n                nextMin = min;\n                min = lst[i];\n            }
    else if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n
    \       }\n        if (min == nextMin) {\n            return null;\n        }\n
    \       return nextMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <227f5912d16540f795be85a6f4ac5c55>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <227f5912d16540f795be85a6f4ac5c55>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <227f5912d16540f795be85a6f4ac5c55>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <227f5912d16540f795be85a6f4ac5c55>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <227f5912d16540f795be85a6f4ac5c55>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long secondMin = long.MaxValue;\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               secondMin = min;\n                min = lst[i];\n            }
    else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n            }\n
    \       }\n        if (secondMin == long.MaxValue) {\n            return null;\n
    \       }\n        return secondMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7b3c4d9a7a8e4876864615b8cb8ba9ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7b3c4d9a7a8e4876864615b8cb8ba9ca>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here.\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d9aa11d1b4242cfb624b2fc2375db0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d9aa11d1b4242cfb624b2fc2375db0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        foreach (long i in lst) {\n            if (i < min) {\n                min2
    = min;\n                min = i;\n            } else if (i < min2) {\n                min2
    = i;\n            }\n        }\n        if (min2 == min) {\n            return
    null;\n        }\n        return min2;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9767ce4f7b794780a4975221731bbc86>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9767ce4f7b794780a4975221731bbc86>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9767ce4f7b794780a4975221731bbc86>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9767ce4f7b794780a4975221731bbc86>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9767ce4f7b794780a4975221731bbc86>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next_min = lst[0];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               next_min = min;\n                min = lst[i];\n            }
    else if (lst[i] < next_min) {\n                next_min = lst[i];\n            }\n
    \       }\n        if (min == next_min) {\n            return null;\n        }\n
    \       return next_min;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <68cc69fd3ade4199854f342a9ed679c0>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) return null;\n        long
    min = lst[0];\n        long min2 = lst[1];\n        if (min2 < min) {\n            long
    tmp = min;\n            min = min2;\n            min2 = tmp;\n        }\n        for
    (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        return min2;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <421a6b6e64714be8b23c1e84e364cef9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <421a6b6e64714be8b23c1e84e364cef9>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        var min = lst.Min();\n        var min2
    = lst.Where(x => x > min).Min();\n        if (min2 == long.MaxValue) {\n            return
    null;\n        }\n        return min2;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.Min (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00022] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00007] in <7c6bf815f2c145d98f80931d5e1fc53f>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <7c6bf815f2c145d98f80931d5e1fc53f>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.Min (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00022] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00007] in <7c6bf815f2c145d98f80931d5e1fc53f>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <7c6bf815f2c145d98f80931d5e1fc53f>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]
    < min) {\n                min2 = min;\n                min = lst[i];\n            }
    else if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       if (min2 == min) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long x in lst) {\n            if (x <
    min) {\n                min2 = min;\n                min = x;\n            } else
    if (x < min2) {\n                min2 = x;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        if (lst.Count == 1) {\n            return null;\n        }\n
    \       long min = lst[0];\n        long next = lst[1];\n        for (int i =
    1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e2c1d0e9d6c4178aa6be273230e0a4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e2c1d0e9d6c4178aa6be273230e0a4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long secondMin = lst[1];\n
    \       if (min > secondMin) {\n            min = secondMin;\n            secondMin
    = lst[0];\n        }\n        for (int i = 2; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                secondMin = min;\n                min = lst[i];\n
    \           } else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n
    \           }\n        }\n        return secondMin;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4378f872a76f4f4090e403c988bc6906>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4378f872a76f4f4090e403c988bc6906>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long secondMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               secondMin = min;\n                min = lst[i];\n            }
    else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n            }\n
    \       }\n        if (min == secondMin) {\n            return null;\n        }\n
    \       return secondMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long smallest = long.MaxValue;\n        long
    nextSmallest = long.MaxValue;\n        foreach (long l in lst) {\n            if
    (l < smallest) {\n                nextSmallest = smallest;\n                smallest
    = l;\n            } else if (l < nextSmallest) {\n                nextSmallest
    = l;\n            }\n        }\n        if (nextSmallest == long.MaxValue) {\n
    \           return null;\n        }\n        return nextSmallest;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5cccaea6fd184822ae79a7be0b3ca0d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5cccaea6fd184822ae79a7be0b3ca0d2>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long smallest = lst[0];\n        long
    nextSmallest = long.MaxValue;\n        for (int i = 1; i < lst.Count; i++) {\n
    \           if (lst[i] < smallest) {\n                nextSmallest = smallest;\n
    \               smallest = lst[i];\n            } else if (lst[i] < nextSmallest)
    {\n                nextSmallest = lst[i];\n            }\n        }\n        if
    (nextSmallest == long.MaxValue) {\n            return null;\n        }\n        return
    nextSmallest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <34ae7c6e2e1548d790193a89732bf51f>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <34ae7c6e2e1548d790193a89732bf51f>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <34ae7c6e2e1548d790193a89732bf51f>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <34ae7c6e2e1548d790193a89732bf51f>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long l in lst) {\n            if (l <
    min) {\n                min2 = min;\n                min = l;\n            } else
    if (l < min2) {\n                min2 = l;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <230a32a7054f496daf63294cc90b20c2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <230a32a7054f496daf63294cc90b20c2>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long secondMin
    = long.MaxValue;\n        foreach (long i in lst) {\n            if (i < min)
    {\n                secondMin = min;\n                min = i;\n            } else
    if (i < secondMin && i != min) {\n                secondMin = i;\n            }\n
    \       }\n        if (secondMin == long.MaxValue) {\n            return null;\n
    \       }\n        return secondMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    secondMin = long.MaxValue;\n        foreach (long x in lst) {\n            if
    (x < min) {\n                secondMin = min;\n                min = x;\n            }
    else if (x < secondMin) {\n                secondMin = x;\n            }\n        }\n
    \       if (secondMin == long.MaxValue) {\n            return null;\n        }\n
    \       return secondMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17c6d2bb8949491281db14e198a427bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17c6d2bb8949491281db14e198a427bb>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        if (lst.Count == 1) {\n            return null;\n        }\n
    \       long min = lst[0];\n        long min2 = lst[1];\n        if (min > min2)
    {\n            min = min2;\n            min2 = lst[0];\n        }\n        for
    (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        return min2;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f87de50ae29e4d54b280da59e8a21750>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f87de50ae29e4d54b280da59e8a21750>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e2c1d0e9d6c4178aa6be273230e0a4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e2c1d0e9d6c4178aa6be273230e0a4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e2c1d0e9d6c4178aa6be273230e0a4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e2c1d0e9d6c4178aa6be273230e0a4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798121
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        foreach (long i in lst) {\n            if (i < min) {\n                min2
    = min;\n                min = i;\n            } else if (i < min2) {\n                min2
    = i;\n            }\n        }\n        if (min2 == min) {\n            return
    null;\n        }\n        return min2;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9767ce4f7b794780a4975221731bbc86>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9767ce4f7b794780a4975221731bbc86>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9767ce4f7b794780a4975221731bbc86>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9767ce4f7b794780a4975221731bbc86>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9767ce4f7b794780a4975221731bbc86>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       if (min > nextMin) {\n            min = nextMin;\n            nextMin
    = lst[0];\n        }\n        for (int i = 2; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                nextMin = min;\n                min = lst[i];\n
    \           } else if (lst[i] < nextMin) {\n                nextMin = lst[i];\n
    \           }\n        }\n        return nextMin;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb6a6f0b375a4836a843b8534e42aae2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb6a6f0b375a4836a843b8534e42aae2>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    secondMin = long.MaxValue;\n        foreach (long i in lst) {\n            if
    (i < min) {\n                secondMin = min;\n                min = i;\n            }
    else if (i < secondMin) {\n                secondMin = i;\n            }\n        }\n
    \       if (secondMin == long.MaxValue) {\n            return null;\n        }\n
    \       return secondMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9bedbcba592406cb5570747c61830d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9bedbcba592406cb5570747c61830d6>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            long x = lst[i];\n
    \           if (x < min) {\n                min2 = min;\n                min =
    x;\n            } else if (x < min2) {\n                min2 = x;\n            }\n
    \       }\n        return min2;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <824a9e2d28944aa897bfd37efc402885>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <824a9e2d28944aa897bfd37efc402885>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long secondMin
    = long.MaxValue;\n        for (int i = 1; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                secondMin = min;\n                min = lst[i];\n
    \           } else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n
    \           }\n        }\n        if (secondMin == long.MaxValue) {\n            return
    null;\n        }\n        return secondMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]
    < min) {\n                min2 = min;\n                min = lst[i];\n            }
    else if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       if (min2 == min) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // TODO: implement this function\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72270f6136004f3a87fc0ce61a303010>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72270f6136004f3a87fc0ce61a303010>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       if (min > nextMin) {\n            min = nextMin;\n            nextMin
    = lst[0];\n        }\n        for (int i = 2; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                nextMin = min;\n                min = lst[i];\n
    \           } else if (lst[i] < nextMin) {\n                nextMin = lst[i];\n
    \           }\n        }\n        return nextMin;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb6a6f0b375a4836a843b8534e42aae2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb6a6f0b375a4836a843b8534e42aae2>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = long.MaxValue;\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       if (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27bee7b45dcc4a7b88abcb8652a89c47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27bee7b45dcc4a7b88abcb8652a89c47>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i]
    < min) {\n                min2 = min;\n                min = lst[i];\n            }
    else if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       if (min2 == min) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e9f4222ba3e4dcdb2912ab1e26bd6e7>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <8e9f4222ba3e4dcdb2912ab1e26bd6e7>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <8e9f4222ba3e4dcdb2912ab1e26bd6e7>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <8e9f4222ba3e4dcdb2912ab1e26bd6e7>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <8e9f4222ba3e4dcdb2912ab1e26bd6e7>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long x in lst) {\n            if (x <
    min) {\n                min2 = min;\n                min = x;\n            } else
    if (x < min2) {\n                min2 = x;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[0];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3bd37772a41e43c9af4a0ed5fb5b707c>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    second = long.MaxValue;\n        foreach (long i in lst) {\n            if (i
    < min) {\n                second = min;\n                min = i;\n            }
    else if (i < second && i != min) {\n                second = i;\n            }\n
    \       }\n        if (second == long.MaxValue) {\n            return null;\n
    \       }\n        return second;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = long.MaxValue;\n        long min2 = long.MaxValue;\n
    \       foreach (long i in lst) {\n            if (i < min) {\n                min2
    = min;\n                min = i;\n            } else if (i < min2) {\n                min2
    = i;\n            }\n        }\n        if (min2 == long.MaxValue) {\n            return
    null;\n        }\n        return min2;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7d5bb416d49244f49234bd9ea34e170e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7d5bb416d49244f49234bd9ea34e170e>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        return null;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25785b7c48c642beb09987071b5480d4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25785b7c48c642beb09987071b5480d4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min > min2) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33537ae1032e4213bea9b5fc44b52de2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33537ae1032e4213bea9b5fc44b52de2>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here.\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d9aa11d1b4242cfb624b2fc2375db0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d9aa11d1b4242cfb624b2fc2375db0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798121
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        foreach (long x in lst) {\n            if (x < min) {\n                min2
    = min;\n                min = x;\n            } else if (x < min2) {\n                min2
    = x;\n            }\n        }\n        if (min2 == min) {\n            return
    null;\n        }\n        return min2;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfeddc9b8b834f44bd8bea768f389cd5>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <dfeddc9b8b834f44bd8bea768f389cd5>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <dfeddc9b8b834f44bd8bea768f389cd5>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <dfeddc9b8b834f44bd8bea768f389cd5>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <dfeddc9b8b834f44bd8bea768f389cd5>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long min2
    = lst[0];\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]
    < min) {\n                min2 = min;\n                min = lst[i];\n            }
    else if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       if (min2 == min) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <643f63cc5bc644bca5d5d9eaed281177>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    nextMin = long.MaxValue;\n        foreach (long i in lst) {\n            if (i
    < min) {\n                nextMin = min;\n                min = i;\n            }
    else if (i < nextMin) {\n                nextMin = i;\n            }\n        }\n
    \       if (nextMin == long.MaxValue) {\n            return null;\n        }\n
    \       return nextMin;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1fabc26b1d740d5b26904dbbcdd181b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1fabc26b1d740d5b26904dbbcdd181b>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long secondMin = lst[1];\n
    \       if (min > secondMin) {\n            min = secondMin;\n            secondMin
    = lst[0];\n        }\n        for (int i = 2; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                secondMin = min;\n                min = lst[i];\n
    \           } else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n
    \           }\n        }\n        return secondMin;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4378f872a76f4f4090e403c988bc6906>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4378f872a76f4f4090e403c988bc6906>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long secondMin
    = long.MaxValue;\n        for (int i = 1; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                secondMin = min;\n                min = lst[i];\n
    \           } else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n
    \           }\n        }\n        if (secondMin == long.MaxValue) {\n            return
    null;\n        }\n        return secondMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <98ec50992bf4410eb5fee48f38c0beee>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long x in lst) {\n            if (x <
    min) {\n                min2 = min;\n                min = x;\n            } else
    if (x < min2) {\n                min2 = x;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = long.MaxValue;\n
    \       foreach (long x in lst) {\n            if (x < min) {\n                nextMin
    = min;\n                min = x;\n            } else if (x < nextMin) {\n                nextMin
    = x;\n            }\n        }\n        if (nextMin == long.MaxValue) {\n            return
    null;\n        }\n        return nextMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <14f7c9c72c7e45499776aad5f20c0cbc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <14f7c9c72c7e45499776aad5f20c0cbc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        long smallest = lst[0];\n        long nextSmallest =
    smallest;\n        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i]
    < smallest) {\n                nextSmallest = smallest;\n                smallest
    = lst[i];\n            } else if (lst[i] < nextSmallest) {\n                nextSmallest
    = lst[i];\n            }\n        }\n        if (nextSmallest == smallest) {\n
    \           return null;\n        }\n        return nextSmallest;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b1d2593f52d4e5484477e14034c513b>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[0];\n        for
    (int i = 1; i < lst.Count; i++) {\n            long v = lst[i];\n            if
    (v < min) {\n                min2 = min;\n                min = v;\n            }
    else if (v < min2) {\n                min2 = v;\n            }\n        }\n        if
    (min2 == min) {\n            return null;\n        }\n        return min2;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24957f832b864ab28f888c957b859bdd>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    nextMin = long.MaxValue;\n        foreach (long item in lst) {\n            if
    (item < min) {\n                nextMin = min;\n                min = item;\n
    \           } else if (item < nextMin) {\n                nextMin = item;\n            }\n
    \       }\n        if (nextMin == long.MaxValue) {\n            return null;\n
    \       }\n        return nextMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <592ad4e788ce4d49b76a704b9e2c1ab5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <592ad4e788ce4d49b76a704b9e2c1ab5>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next_min = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               next_min = min;\n                min = lst[i];\n            }
    else if (lst[i] < next_min) {\n                next_min = lst[i];\n            }\n
    \       }\n        if (min == next_min) {\n            return null;\n        }\n
    \       return next_min;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min2
    = min;\n                min = lst[i];\n            } else if (lst[i] < min2) {\n
    \               min2 = lst[i];\n            }\n        }\n        if (min2 ==
    min) {\n            return null;\n        }\n        return min2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long nextMin = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               nextMin = min;\n                min = lst[i];\n            } else
    if (lst[i] < nextMin) {\n                nextMin = lst[i];\n            }\n        }\n
    \       if (min == nextMin) {\n            return null;\n        }\n        return
    nextMin;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long x in lst) {\n            if (x <
    min) {\n                min2 = min;\n                min = x;\n            } else
    if (x < min2) {\n                min2 = x;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = long.MaxValue;\n        long
    min2 = long.MaxValue;\n        foreach (long x in lst) {\n            if (x <
    min) {\n                min2 = min;\n                min = x;\n            } else
    if (x < min2) {\n                min2 = x;\n            }\n        }\n        if
    (min2 == long.MaxValue) {\n            return null;\n        }\n        return
    min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90381aa7512342e0b5f2043a42237f4a>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = long.MaxValue;\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               next = min;\n                min = lst[i];\n            } else
    if (lst[i] < next) {\n                next = lst[i];\n            }\n        }\n
    \       if (next == long.MaxValue) {\n            return null;\n        }\n        return
    next;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ebbb323b9a654b738942fd20a8e0ad78>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ebbb323b9a654b738942fd20a8e0ad78>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long secondMin
    = long.MaxValue;\n        foreach (long i in lst) {\n            if (i < min)
    {\n                secondMin = min;\n                min = i;\n            } else
    if (i < secondMin && i != min) {\n                secondMin = i;\n            }\n
    \       }\n        if (secondMin == long.MaxValue) {\n            return null;\n
    \       }\n        return secondMin;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <9e065fd5adc744d8a1980a0b430abf29>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code goes here.\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86b9f0a47d4347e69e95f08cfbe58d38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        long min = lst[0];\n        long second
    = long.MaxValue;\n        for (int i = 1; i < lst.Count; i++) {\n            if
    (lst[i] < min) {\n                second = min;\n                min = lst[i];\n
    \           } else if (lst[i] < second && lst[i] != min) {\n                second
    = lst[i];\n            }\n        }\n        if (second == long.MaxValue) {\n
    \           return null;\n        }\n        return second;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <7e755f6046b24799bf57a4e7bf1114a4>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <7e755f6046b24799bf57a4e7bf1114a4>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.NextSmallest
    (System.Collections.Generic.List`1[T] lst) [0x00001] in <7e755f6046b24799bf57a4e7bf1114a4>:0
    \n  at Problem.Main (System.String[] args) [0x00072] in <7e755f6046b24799bf57a4e7bf1114a4>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count == 0) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = long.MaxValue;\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               next = min;\n                min = lst[i];\n            } else
    if (lst[i] < next) {\n                next = lst[i];\n            }\n        }\n
    \       if (next == long.MaxValue) {\n            return null;\n        }\n        return
    next;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7000c864d0c1402da4d15c43132174ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7000c864d0c1402da4d15c43132174ef>:0
    \n"
  stdout: ''
  timestamp: 1659798121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min > min2) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33537ae1032e4213bea9b5fc44b52de2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33537ae1032e4213bea9b5fc44b52de2>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long min2 = lst[1];\n        if
    (min2 < min) {\n            min = min2;\n            min2 = lst[0];\n        }\n
    \       for (int i = 2; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               min2 = min;\n                min = lst[i];\n            } else
    if (lst[i] < min2) {\n                min2 = lst[i];\n            }\n        }\n
    \       return min2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c66bdc5eb8ec450382eb2610a8b3a14e>:0
    \n"
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = long.MaxValue;\n        long second = long.MaxValue;\n
    \       foreach (long i in lst) {\n            if (i < min) {\n                second
    = min;\n                min = i;\n            } else if (i < second) {\n                second
    = i;\n            }\n        }\n        if (second == long.MaxValue) {\n            return
    null;\n        }\n        return second;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <baf8f228d3f04e31ba02fe094059051e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <baf8f228d3f04e31ba02fe094059051e>:0
    \n"
  stdout: ''
  timestamp: 1659798122
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next_min = lst[1];\n
    \       for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n
    \               next_min = min;\n                min = lst[i];\n            }
    else if (lst[i] < next_min) {\n                next_min = lst[i];\n            }\n
    \       }\n        if (min == next_min) {\n            return null;\n        }\n
    \       return next_min;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        if (lst.Count < 2) {\n            return
    null;\n        }\n        long min = lst[0];\n        long next = lst[1];\n        for
    (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                next
    = min;\n                min = lst[i];\n            } else if (lst[i] < next) {\n
    \               next = lst[i];\n            }\n        }\n        if (min == next)
    {\n            return null;\n        }\n        return next;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L, (long)0L}))).Equals(1L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)-35L, (long)34L,
    (long)12L, (long)-45L}))).Equals(-35L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()
    that returns the 2nd smallest element of the list.\n    // Return None if there
    is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n    //
    2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>> NextSmallest((new
    List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n    public static Nullable<long>
    NextSmallest(List<long> lst) {\n        // Your code here\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,
    (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n
    \   Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,
    (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new
    long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new
    List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58e18e0878d64627abc072ce747dd7b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798120

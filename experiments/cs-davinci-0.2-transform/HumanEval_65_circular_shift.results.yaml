language: cs
name: HumanEval_65_circular_shift
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length)\n            return new string(s.Reverse().ToArray());\n\
    \        return s.Substring(s.Length - (int)shift) + s.Substring(0, s.Length -\
    \ (int)shift);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5c4e112b2dd4dd798e9cd179b705636>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length)\n            return new string(s.Reverse().ToArray());\n\
    \        return s.Substring(s.Length - (int)shift) + s.Substring(0, s.Length -\
    \ (int)shift);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5c4e112b2dd4dd798e9cd179b705636>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        if (shift\
    \ == 0) {\n            return x.ToString();\n        }\n        string s = x.ToString();\n\
    \        if (shift >= s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring(s.Length - (int)shift) + s.Substring(0,\
    \ s.Length - (int)shift);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L),\
    \ (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"\
    79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n   \
    \ Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ab569de3d694eed9ccf073c7ab443d5>:0 \n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        if (shift\
    \ == 0) return x.ToString();\n        string s = x.ToString();\n        if (shift\
    \ >= s.Length) return new string(s.Reverse().ToArray());\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <98e3d2f5b9044c579f348fec690a8f03>:0 \n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        if (shift\
    \ == 0) return x.ToString();\n        string s = x.ToString();\n        if (shift\
    \ > s.Length) {\n            return new string(s.Reverse().ToArray());\n     \
    \   }\n        return s.Substring(s.Length - (int)shift) + s.Substring(0, s.Length\
    \ - (int)shift);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799505
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        var s\
    \ = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <14eb2e20212a4eba9c85bd34bcd87ba1>:0 \n"
  stdout: ''
  timestamp: 1659799506
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        shift = shift % s.Length;\n        if (shift == 0)\
    \ {\n            return s;\n        }\n        return s.Substring((int)shift)\
    \ + s.Substring(0, (int)shift);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L),\
    \ (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"\
    79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n   \
    \ Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90f642778f3a46d68993dfe4fff9c492>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90f642778f3a46d68993dfe4fff9c492>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        var digits\
    \ = new List<int>();\n        while (x > 0) {\n            digits.Add((int)(x\
    \ % 10));\n            x /= 10;\n        }\n        if (shift >= digits.Count)\
    \ {\n            digits.Reverse();\n            return string.Join(\"\", digits);\n\
    \        }\n        var result = digits.Skip((int)shift).Concat(digits.Take((int)shift));\n\
    \        return string.Join(\"\", result);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n\
    \    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L),\
    \ (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"\
    21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ccc9c79305a4a20ace7742a38269b67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ccc9c79305a4a20ace7742a38269b67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799506
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        var digits\
    \ = new List<long>();\n        while (x > 0) {\n            digits.Add(x % 10);\n\
    \            x /= 10;\n        }\n        shift %= digits.Count;\n        if (shift\
    \ == 0) {\n            return string.Join(\"\", digits.Select(d => d.ToString()).Reverse());\n\
    \        }\n        var shifted = digits.Skip((int)shift).Concat(digits.Take((int)shift));\n\
    \        return string.Join(\"\", shifted.Select(d => d.ToString()).Reverse());\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c41ecd458f35462fbc04023e4507ab64>:0 \n"
  stdout: ''
  timestamp: 1659799506
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        shift = shift % s.Length;\n        if (shift == 0)\
    \ return s;\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc91c71f711745bcba760c517dac0224>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc91c71f711745bcba760c517dac0224>:0 \n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        var s\
    \ = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <14eb2e20212a4eba9c85bd34bcd87ba1>:0 \n"
  stdout: ''
  timestamp: 1659799506
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        var s\
    \ = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <14eb2e20212a4eba9c85bd34bcd87ba1>:0 \n"
  stdout: ''
  timestamp: 1659799506
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        if (shift\
    \ == 0) {\n            return x.ToString();\n        }\n        var s = x.ToString();\n\
    \        if (shift >= s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring(s.Length - (int)shift) + s.Substring(0,\
    \ s.Length - (int)shift);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L),\
    \ (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"\
    79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n   \
    \ Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <856f77f5391e44e1ac8301f6057e513f>:0 \n"
  stdout: ''
  timestamp: 1659799506
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        shift = shift % s.Length;\n        if (shift == 0)\
    \ {\n            return s;\n        }\n        return s.Substring((int)shift)\
    \ + s.Substring(0, (int)shift);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L),\
    \ (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"\
    79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n   \
    \ Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90f642778f3a46d68993dfe4fff9c492>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90f642778f3a46d68993dfe4fff9c492>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427

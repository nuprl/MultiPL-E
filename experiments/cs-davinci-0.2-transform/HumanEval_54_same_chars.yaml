name: HumanEval_54_same_chars
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Check if two words have the same characters.\n    // >>> SameChars((\"\
  eabcdzzzz\"), (\"dddzzzzzzzddeddabc\"))\n    // (true)\n    // >>> SameChars((\"\
  abcd\"), (\"dddddddabc\"))\n    // (true)\n    // >>> SameChars((\"dddddddabc\"\
  ), (\"abcd\"))\n    // (true)\n    // >>> SameChars((\"eabcd\"), (\"dddddddabc\"\
  ))\n    // (false)\n    // >>> SameChars((\"abcd\"), (\"dddddddabce\"))\n    //\
  \ (false)\n    // >>> SameChars((\"eabcdzzzz\"), (\"dddzzzzzzzddddabc\"))\n    //\
  \ (false)\n    public static bool SameChars(string s0, string s1) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SameChars((\"\
  eabcdzzzz\"), (\"dddzzzzzzzddeddabc\")) == (true));\n    Debug.Assert(SameChars((\"\
  abcd\"), (\"dddddddabc\")) == (true));\n    Debug.Assert(SameChars((\"dddddddabc\"\
  ), (\"abcd\")) == (true));\n    Debug.Assert(SameChars((\"eabcd\"), (\"dddddddabc\"\
  )) == (false));\n    Debug.Assert(SameChars((\"abcd\"), (\"dddddddabcf\")) == (false));\n\
  \    Debug.Assert(SameChars((\"eabcdzzzz\"), (\"dddzzzzzzzddddabc\")) == (false));\n\
  \    Debug.Assert(SameChars((\"aabb\"), (\"aaccc\")) == (false));\n    }\n\n}\n"
completions: ["        if (s0.Length != s1.Length) {\n            return false;\n\
    \        }\n        int[] c0 = new int[26];\n        int[] c1 = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n\
    \            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        int[] cnt0 = new int[26];\n\
    \        int[] cnt1 = new int[26];\n        foreach (char c in s0) {\n       \
    \     cnt0[c - 'a']++;\n        }\n        foreach (char c in s1) {\n        \
    \    cnt1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n   \
    \         if (cnt0[i] != cnt1[i]) {\n                return false;\n         \
    \   }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) {\n            return false;\n        }\n        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n\
    \            c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n \
    \       for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n  \
    \              return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) return false;\n        int[] c0 = new int[256];\n\
    \        int[] c1 = new int[256];\n        for (int i = 0; i < s0.Length; i++)\
    \ {\n            c0[s0[i]]++;\n            c1[s1[i]]++;\n        }\n        for\
    \ (int i = 0; i < 256; i++) {\n            if (c0[i] != c1[i]) return false;\n\
    \        }\n        return true;", "        var a0 = s0.ToCharArray();\n     \
    \   var a1 = s1.ToCharArray();\n        Array.Sort(a0);\n        Array.Sort(a1);\n\
    \        return new string(a0) == new string(a1);", "        int[] c0 = new int[256];\n\
    \        int[] c1 = new int[256];\n        foreach (char c in s0) {\n        \
    \    c0[c]++;\n        }\n        foreach (char c in s1) {\n            c1[c]++;\n\
    \        }\n        for (int i = 0; i < 256; i++) {\n            if (c0[i] !=\
    \ c1[i]) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        if (s0.Length != s1.Length) {\n            return false;\n\
    \        }\n        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = new int[256];\n        var c1 = new int[256];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i]]++;\n   \
    \         c1[s1[i]]++;\n        }\n        for (int i = 0; i < 256; i++) {\n \
    \           if (c0[i] != c1[i]) {\n                return false;\n           \
    \ }\n        }\n        return true;", "        if (s0.Length != s1.Length) {\n\
    \            return false;\n        }\n        var c0 = new int[26];\n       \
    \ var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n     \
    \       c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n      \
    \  for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n       \
    \         return false;\n            }\n        }\n        return true;", "  \
    \      if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        for (int i = 0; i < c0.Length;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) return false;\n        int[] cnt0 = new int[26];\n        int[] cnt1\
    \ = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n            cnt0[s0[i]\
    \ - 'a']++;\n            cnt1[s1[i] - 'a']++;\n        }\n        for (int i =\
    \ 0; i < 26; i++) {\n            if (cnt0[i] != cnt1[i]) return false;\n     \
    \   }\n        return true;", "        int[] c0 = new int[26];\n        int[]\
    \ c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n         \
    \   c0[s0[i] - 'a']++;\n        }\n        for (int i = 0; i < s1.Length; i++)\
    \ {\n            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n\
    \            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        foreach (char c in s0) {\n         \
    \   c0[c - 'a']++;\n        }\n        foreach (char c in s1) {\n            c1[c\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n\
    \            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = new int[26];\n   \
    \     var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n \
    \           c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n  \
    \      for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ int[] c0 = new int[26];\n        int[] c1 = new int[26];\n        for (int i\
    \ = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n        }\n    \
    \    for (int i = 0; i < s1.Length; i++) {\n            c1[s1[i] - 'a']++;\n \
    \       }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        int[] counts = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            counts[s0[i] - 'a']++;\n\
    \            counts[s1[i] - 'a']--;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (counts[i] != 0) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = new int[26];\n        var c1 = new int[26];\n        foreach\
    \ (var c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var\
    \ c in s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = new int[26];\n        var c1 = new int[26];\n        for (int\
    \ i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ if (s0.Length != s1.Length) {\n            return false;\n        }\n      \
    \  var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n\
    \        Array.Sort(c1);\n        for (int i = 0; i < c0.Length; i++) {\n    \
    \        if (c0[i] != c1[i]) {\n                return false;\n            }\n\
    \        }\n        return true;", "        var c0 = s0.ToCharArray();\n     \
    \   var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        foreach (char c in s0) {\n         \
    \   c0[c - 'a']++;\n        }\n        foreach (char c in s1) {\n            c1[c\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c\
    \ in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) return false;\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        for (int i = 0; i < c0.Length; i++) {\n            if (c0[i] != c1[i])\
    \ return false;\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        for (int i = 0; i < c0.Length; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = new int[26];\n        var c1 = new int[26];\n        for (int\
    \ i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (s0.Length != s1.Length) return false;\n \
    \       int[] c0 = new int[26];\n        int[] c1 = new int[26];\n        for\
    \ (int i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n        \
    \    c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n \
    \           if (c0[i] != c1[i]) return false;\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        foreach (char c in s0) {\n         \
    \   c0[c - 'a']++;\n        }\n        foreach (char c in s1) {\n            c1[c\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        var c0 = s0.ToCharArray();\n        var c1 =\
    \ s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n      \
    \  return new string(c0) == new string(c1);", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return c0.SequenceEqual(c1);", "        int[] cnt0 = new int[26];\n \
    \       int[] cnt1 = new int[26];\n        foreach (char c in s0) {\n        \
    \    cnt0[c - 'a']++;\n        }\n        foreach (char c in s1) {\n         \
    \   cnt1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n    \
    \        if (cnt0[i] != cnt1[i]) {\n                return false;\n          \
    \  }\n        }\n        return true;", "        if (s0.Length != s1.Length) {\n\
    \            return false;\n        }\n        var c0 = s0.ToCharArray();\n  \
    \      var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        for (int i = 0; i < c0.Length; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        // TODO: Implement this function.\n        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        int[] count = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            count[s0[i] - 'a']++;\n\
    \            count[s1[i] - 'a']--;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (count[i] != 0) {\n                return false;\n  \
    \          }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ return false;\n        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return c0.SequenceEqual(c1);",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ if (s0.Length != s1.Length) {\n            return false;\n        }\n      \
    \  var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n\
    \        Array.Sort(c1);\n        return new string(c0) == new string(c1);", " \
    \       int[] cnt0 = new int[26];\n        int[] cnt1 = new int[26];\n       \
    \ foreach (char c in s0) {\n            cnt0[c - 'a']++;\n        }\n        foreach\
    \ (char c in s1) {\n            cnt1[c - 'a']++;\n        }\n        for (int\
    \ i = 0; i < 26; i++) {\n            if (cnt0[i] != cnt1[i]) {\n             \
    \   return false;\n            }\n        }\n        return true;", "        if\
    \ (s0.Length != s1.Length) {\n            return false;\n        }\n        var\
    \ c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n\
    \        Array.Sort(c1);\n        return new string(c0) == new string(c1);", " \
    \       if (s0.Length != s1.Length) {\n            return false;\n        }\n\
    \        var c0 = new int[256];\n        var c1 = new int[256];\n        for (int\
    \ i = 0; i < s0.Length; i++) {\n            c0[s0[i]]++;\n            c1[s1[i]]++;\n\
    \        }\n        for (int i = 0; i < 256; i++) {\n            if (c0[i] !=\
    \ c1[i]) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        int[] cnt = new int[26];\n        foreach (char c in s0) {\n\
    \            cnt[c - 'a']++;\n        }\n        foreach (char c in s1) {\n  \
    \          cnt[c - 'a']--;\n        }\n        foreach (int c in cnt) {\n    \
    \        if (c != 0) {\n                return false;\n            }\n       \
    \ }\n        return true;", "        if (s0.Length != s1.Length) {\n         \
    \   return false;\n        }\n        var c0 = s0.ToCharArray();\n        var\
    \ c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n \
    \       return new string(c0) == new string(c1);", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        int[] count = new\
    \ int[26];\n        foreach (char c in s0) {\n            count[c - 'a']++;\n\
    \        }\n        foreach (char c in s1) {\n            count[c - 'a']--;\n\
    \        }\n        foreach (int c in count) {\n            if (c != 0) {\n  \
    \              return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       int[] counts = new int[26];\n        for (int i = 0; i < s0.Length; i++)\
    \ {\n            counts[s0[i] - 'a']++;\n            counts[s1[i] - 'a']--;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (counts[i]\
    \ != 0) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        if (s0.Length != s1.Length) {\n            return false;\n\
    \        }\n        var c0 = new int[26];\n        var c1 = new int[26];\n   \
    \     foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n       \
    \ foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c\
    \ in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++)\
    \ {\n            c0[s0[i] - 'a']++;\n        }\n        for (int i = 0; i < s1.Length;\
    \ i++) {\n            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return c0.SequenceEqual(c1);", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return c0.SequenceEqual(c1);", "        int[] c0 = new int[26];\n   \
    \     int[] c1 = new int[26];\n        foreach (char c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (char c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) return false;\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        foreach (char c in s0) {\n         \
    \   c0[c - 'a']++;\n        }\n        foreach (char c in s1) {\n            c1[c\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        var c0 = s0.ToCharArray();\n        var c1 =\
    \ s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n      \
    \  return new string(c0) == new string(c1);", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        foreach (char c in s0) {\n         \
    \   c0[c - 'a']++;\n        }\n        foreach (char c in s1) {\n            c1[c\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        var c0 = s0.ToCharArray();\n        var c1 =\
    \ s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n      \
    \  return new string(c0) == new string(c1);", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++)\
    \ {\n            c0[s0[i] - 'a']++;\n        }\n        for (int i = 0; i < s1.Length;\
    \ i++) {\n            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = new int[26];\n        var c1 = new int[26];\n        for (int\
    \ i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        var c0 = s0.ToCharArray();\n        var c1 =\
    \ s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n      \
    \  return new string(c0) == new string(c1);", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return c0.SequenceEqual(c1);", "        var c0 = new int[26];\n     \
    \   var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c -\
    \ 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n\
    \            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        var c0 = new int[26];\n \
    \       var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n\
    \            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        var c0 = new int[26];\n \
    \       var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var counts0 = new int[26];\n        var counts1 = new int[26];\n     \
    \   for (int i = 0; i < s0.Length; i++) {\n            counts0[s0[i] - 'a']++;\n\
    \            counts1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (counts0[i] != counts1[i]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (s0.Length\
    \ != s1.Length) return false;\n        int[] c0 = new int[26];\n        int[]\
    \ c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n         \
    \   c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) return false;\n\
    \        }\n        return true;", "        var c0 = new int[26];\n        var\
    \ c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c - 'a']++;\n\
    \        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n    \
    \    }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        int[] cnt = new int[256];\n        foreach (char\
    \ c in s0) {\n            cnt[c]++;\n        }\n        foreach (char c in s1)\
    \ {\n            cnt[c]--;\n        }\n        foreach (int i in cnt) {\n    \
    \        if (i != 0) {\n                return false;\n            }\n       \
    \ }\n        return true;", "        if (s0.Length != s1.Length) return false;\n\
    \        var c0 = new int[26];\n        var c1 = new int[26];\n        for (int\
    \ i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) return false;\n        }\n        return true;", "        var\
    \ c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c in\
    \ s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = new int[26];\n   \
    \     var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n \
    \           c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n  \
    \      for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        for (int i = 0; i < c0.Length;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = new int[26];\n   \
    \     var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n \
    \           c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n  \
    \      for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return c0.SequenceEqual(c1);", "        if (s0.Length != s1.Length) {\n\
    \            return false;\n        }\n        var c0 = s0.ToCharArray();\n  \
    \      var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) {\n            return false;\n        }\n        int[] counts = new\
    \ int[26];\n        for (int i = 0; i < s0.Length; i++) {\n            counts[s0[i]\
    \ - 'a']++;\n            counts[s1[i] - 'a']--;\n        }\n        for (int i\
    \ = 0; i < 26; i++) {\n            if (counts[i] != 0) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        var c0 = new\
    \ int[26];\n        var c1 = new int[26];\n        foreach (var c in s0) {\n \
    \           c0[c - 'a']++;\n        }\n        foreach (var c in s1) {\n     \
    \       c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n  \
    \          if (c0[i] != c1[i]) {\n                return false;\n            }\n\
    \        }\n        return true;", "        var c0 = new int[26];\n        var\
    \ c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c - 'a']++;\n\
    \        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n    \
    \    }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c\
    \ in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        for (int i = 0; i < c0.Length; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        if (s0.Length != s1.Length) return false;\n     \
    \   var c0 = new int[26];\n        var c1 = new int[26];\n        for (int i =\
    \ 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) return false;\n        }\n        return true;", "        var\
    \ c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n\
    \        Array.Sort(c1);\n        return new string(c0) == new string(c1);", " \
    \       int[] cnt = new int[26];\n        foreach (char c in s0) {\n         \
    \   cnt[c - 'a']++;\n        }\n        foreach (char c in s1) {\n           \
    \ cnt[c - 'a']--;\n        }\n        foreach (int i in cnt) {\n            if\
    \ (i != 0) {\n                return false;\n            }\n        }\n      \
    \  return true;", "        if (s0.Length != s1.Length) return false;\n       \
    \ int[] counts = new int[26];\n        foreach (char c in s0) counts[c - 'a']++;\n\
    \        foreach (char c in s1) counts[c - 'a']--;\n        foreach (int count\
    \ in counts) if (count != 0) return false;\n        return true;", "        var\
    \ c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c in\
    \ s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++)\
    \ {\n            c0[s0[i] - 'a']++;\n        }\n        for (int i = 0; i < s1.Length;\
    \ i++) {\n            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) return false;\n        var c0 = s0.ToCharArray();\n        var c1\
    \ = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n    \
    \    return new string(c0) == new string(c1);", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var counts0 = new int[26];\n\
    \        var counts1 = new int[26];\n        foreach (var c in s0) {\n       \
    \     counts0[c - 'a']++;\n        }\n        foreach (var c in s1) {\n      \
    \      counts1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n\
    \            if (counts0[i] != counts1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       int[] counts = new int[26];\n        for (int i = 0; i < s0.Length; i++)\
    \ {\n            counts[s0[i] - 'a']++;\n            counts[s1[i] - 'a']--;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (counts[i]\
    \ != 0) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        var c0 = new int[26];\n        var c1 = new int[26];\n    \
    \    foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach\
    \ (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for (int i =\
    \ 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        var c0 = new\
    \ int[26];\n        var c1 = new int[26];\n        foreach (var c in s0) {\n \
    \           c0[c - 'a']++;\n        }\n        foreach (var c in s1) {\n     \
    \       c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n  \
    \          if (c0[i] != c1[i]) {\n                return false;\n            }\n\
    \        }\n        return true;", "        if (s0.Length != s1.Length) {\n  \
    \          return false;\n        }\n        var a0 = s0.ToCharArray();\n    \
    \    var a1 = s1.ToCharArray();\n        Array.Sort(a0);\n        Array.Sort(a1);\n\
    \        return new string(a0) == new string(a1);", "        if (s0.Length !=\
    \ s1.Length) {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ return false;\n        var c0 = new int[256];\n        var c1 = new int[256];\n\
    \        foreach (var c in s0) c0[c]++;\n        foreach (var c in s1) c1[c]++;\n\
    \        for (int i = 0; i < 256; i++) {\n            if (c0[i] != c1[i]) return\
    \ false;\n        }\n        return true;", "        var c0 = new int[26];\n \
    \       var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        for (int i = 0; i < c0.Length;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ return false;\n        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n\
    \            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) return false;\n        }\n        return\
    \ true;", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ int[] c0 = new int[26];\n        int[] c1 = new int[26];\n        foreach (char\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (char c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++)\
    \ {\n            c0[s0[i] - 'a']++;\n        }\n        for (int i = 0; i < s1.Length;\
    \ i++) {\n            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        int[] counts = new\
    \ int[26];\n        foreach (char c in s0) {\n            counts[c - 'a']++;\n\
    \        }\n        foreach (char c in s1) {\n            counts[c - 'a']--;\n\
    \        }\n        foreach (int count in counts) {\n            if (count !=\
    \ 0) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        for (int i = 0; i <\
    \ c0.Length; i++) {\n            if (c0[i] != c1[i]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (s0.Length\
    \ != s1.Length) return false;\n        var c0 = s0.ToCharArray();\n        var\
    \ c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n \
    \       for (int i = 0; i < c0.Length; i++) {\n            if (c0[i] != c1[i])\
    \ return false;\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        int[] c0 = new int[26];\n \
    \       int[] c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n\
    \            c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n \
    \       for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n  \
    \              return false;\n            }\n        }\n        return true;",
  "        int[] c0 = new int[26];\n        int[] c1 = new int[26];\n        foreach\
    \ (char c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (char\
    \ c in s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return c0.SequenceEqual(c1);", "        int[] c0 = new int[26];\n   \
    \     int[] c1 = new int[26];\n        foreach (char c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (char c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        int[] c0 = new int[26];\n        int[] c1 = new int[26];\n        foreach\
    \ (char c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (char\
    \ c in s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = new int[26];\n   \
    \     var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n \
    \           c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n  \
    \      for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) return false;\n        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n\
    \            c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n \
    \       for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) return\
    \ false;\n        }\n        return true;", "        var c0 = new int[26];\n \
    \       var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = new Dictionary<char, int>();\n        var\
    \ c1 = new Dictionary<char, int>();\n        foreach (var c in s0) {\n       \
    \     if (!c0.ContainsKey(c)) {\n                c0[c] = 0;\n            }\n \
    \           c0[c] += 1;\n        }\n        foreach (var c in s1) {\n        \
    \    if (!c1.ContainsKey(c)) {\n                c1[c] = 0;\n            }\n  \
    \          c1[c] += 1;\n        }\n        foreach (var c in c0.Keys) {\n    \
    \        if (!c1.ContainsKey(c)) {\n                return false;\n          \
    \  }\n            if (c0[c] != c1[c]) {\n                return false;\n     \
    \       }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) {\n            return false;\n        }\n        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++)\
    \ {\n            c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n\
    \        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n\
    \            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        foreach (char ch in s0) {\n        \
    \    c0[ch - 'a']++;\n        }\n        foreach (char ch in s1) {\n         \
    \   c1[ch - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n     \
    \       if (c0[i] != c1[i]) {\n                return false;\n            }\n\
    \        }\n        return true;", "        if (s0.Length != s1.Length) {\n  \
    \          return false;\n        }\n        var c0 = s0.ToCharArray();\n    \
    \    var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) {\n            return false;\n        }\n        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++)\
    \ {\n            c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n\
    \        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ if (s0.Length != s1.Length) {\n            return false;\n        }\n      \
    \  var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n\
    \        Array.Sort(c1);\n        return new string(c0) == new string(c1);", " \
    \       if (s0.Length != s1.Length) {\n            return false;\n        }\n\
    \        var c0 = new int[26];\n        var c1 = new int[26];\n        for (int\
    \ i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = new int[256];\n        var c1 = new int[256];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i]]++;\n   \
    \         c1[s1[i]]++;\n        }\n        for (int i = 0; i < 256; i++) {\n \
    \           if (c0[i] != c1[i]) {\n                return false;\n           \
    \ }\n        }\n        return true;", "        int[] c0 = new int[26];\n    \
    \    int[] c1 = new int[26];\n        foreach (char c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (char c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        var s0s = new string(c0);\n\
    \        var s1s = new string(c1);\n        return s0s == s1s;", "        if (s0.Length\
    \ != s1.Length) {\n            return false;\n        }\n        var c0 = new\
    \ int[26];\n        var c1 = new int[26];\n        for (int i = 0; i < s0.Length;\
    \ i++) {\n            c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n   \
    \     }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        for (int i = 0; i < c0.Length;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        for (int i = 0; i < c0.Length; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        foreach (char c in s0) {\n         \
    \   c0[c - 'a']++;\n        }\n        foreach (char c in s1) {\n            c1[c\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ if (s0.Length != s1.Length) {\n            return false;\n        }\n      \
    \  var c0 = new int[26];\n        var c1 = new int[26];\n        for (int i =\
    \ 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (s0.Length != s1.Length) return false;\n \
    \       var c0 = new int[26];\n        var c1 = new int[26];\n        for (int\
    \ i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) return false;\n        }\n        return true;", "        var\
    \ c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c in\
    \ s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var a0 = s0.ToCharArray();\n\
    \        var a1 = s1.ToCharArray();\n        Array.Sort(a0);\n        Array.Sort(a1);\n\
    \        for (int i = 0; i < a0.Length; i++) {\n            if (a0[i] != a1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;"]
stop_tokens:
- "\n    }\n"

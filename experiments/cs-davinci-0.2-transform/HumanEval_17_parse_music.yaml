name: HumanEval_17_parse_music
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Input to this function is a string representing musical notes\
  \ in a special ASCII format.\n    // Your task is to parse this string and return\
  \ list of integers corresponding to how many beats does each\n    // not last.\n\
  \    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'\
  \ - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //\
  \ >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new\
  \ long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,\
  \ (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string\
  \ music_string) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
  \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
  \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
  .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
  \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
  \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
  \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\"\
  )).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L,\
  \ (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        int i = 0;\n\
    \        while (i < music_string.Length) {\n            if (music_string[i] ==\
    \ 'o') {\n                if (i + 1 < music_string.Length && music_string[i +\
    \ 1] == '|') {\n                    result.Add(2);\n                    i += 2;\n\
    \                } else {\n                    result.Add(4);\n              \
    \      i += 1;\n                }\n            } else {\n                result.Add(1);\n\
    \                i += 2;\n            }\n        }\n        return result;", " \
    \       var result = new List<long>();\n        var beats = new List<long>();\n\
    \        var beat = 0L;\n        var notes = music_string.Split(new char[] { '\
    \ ' });\n        foreach (var note in notes) {\n            if (note == \"o\"\
    ) {\n                beat += 4;\n            } else if (note == \"o|\") {\n  \
    \              beat += 2;\n            } else if (note == \".|\") {\n        \
    \        beat += 1;\n            }\n            beats.Add(beat);\n        }\n\
    \        var last_beat = beats[beats.Count - 1];\n        for (var i = 0; i <\
    \ beats.Count; i++) {\n            var current_beat = beats[i];\n            if\
    \ (i == 0) {\n                result.Add(current_beat);\n            } else {\n\
    \                var previous_beat = beats[i - 1];\n                result.Add(current_beat\
    \ - previous_beat);\n            }\n        }\n        return result;", "    \
    \    List<long> result = new List<long>();\n        int i = 0;\n        while\
    \ (i < music_string.Length) {\n            if (music_string[i] == 'o') {\n   \
    \             if (i + 1 < music_string.Length && music_string[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i += 2;\n           \
    \     } else {\n                    result.Add(4);\n                    i += 1;\n\
    \                }\n            } else {\n                result.Add(1);\n   \
    \             i += 2;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var current_note = \"\";\n        foreach (var c in music_string) {\n\
    \            if (c == ' ') {\n                if (current_note == \"o\") {\n \
    \                   result.Add(4);\n                } else if (current_note ==\
    \ \"o|\") {\n                    result.Add(2);\n                } else if (current_note\
    \ == \".|\") {\n                    result.Add(1);\n                }\n      \
    \          current_note = \"\";\n            } else {\n                current_note\
    \ += c;\n            }\n        }\n        if (current_note == \"o\") {\n    \
    \        result.Add(4);\n        } else if (current_note == \"o|\") {\n      \
    \      result.Add(2);\n        } else if (current_note == \".|\") {\n        \
    \    result.Add(1);\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        // Your code goes here\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var beats = new List<long>();\n        var beat = 0L;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                beat\
    \ += 4;\n            } else if (c == '|') {\n                beats.Add(beat);\n\
    \                beat = 0;\n            } else if (c == '.') {\n             \
    \   beat += 1;\n            }\n        }\n        beats.Add(beat);\n        return\
    \ beats;", "        List<long> result = new List<long>();\n        foreach (var\
    \ note in music_string.Split(' ')) {\n            switch (note) {\n          \
    \      case \"o\":\n                    result.Add(4);\n                    break;\n\
    \                case \"o|\":\n                    result.Add(2);\n          \
    \          break;\n                case \".|\":\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (var note in music_string.Split('\
    \ ')) {\n            if (note == \"o\") {\n                result.Add(4);\n  \
    \          } else if (note == \"o|\") {\n                result.Add(2);\n    \
    \        } else if (note == \".|\") {\n                result.Add(1);\n      \
    \      }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        // TODO: Implement this function\n        return result;",
  "        // Your code goes here\n        return new List<long>();", "        List<long>\
    \ result = new List<long>();\n        long beats = 0;\n        for (int i = 0;\
    \ i < music_string.Length; i++) {\n            if (music_string[i] == 'o') {\n\
    \                if (i + 1 < music_string.Length && music_string[i + 1] == '|')\
    \ {\n                    beats = 2;\n                    i++;\n              \
    \  }\n                else {\n                    beats = 4;\n               \
    \ }\n            }\n            else if (music_string[i] == '.') {\n         \
    \       beats = 1;\n            }\n            else if (music_string[i] == '|')\
    \ {\n                continue;\n            }\n            result.Add(beats);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   beats = beats / 2L;\n            }\n            else if (music_string[i] ==\
    \ '.') {\n                result.Add(beats);\n                beats = 0L;\n  \
    \          }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        int i = 0;\n        while (i < music_string.Length)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                result.Add(4);\n            }\n            else if\
    \ (music_string[i] == '.') {\n                result.Add(1);\n            }\n\
    \            else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        var beats = new Dictionary<char, long>();\n        beats['o']\
    \ = 4;\n        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat\
    \ = 0L;\n        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                current_beat += beats[c];\n            } else {\n       \
    \         result.Add(current_beat);\n                current_beat = 0;\n     \
    \       }\n        }\n        result.Add(current_beat);\n        return result;",
  "        List<long> result = new List<long>();\n        // TODO: Implement your\
    \ solution here\n        return result;", "        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long beats = 0;\n        foreach (char c in music_string) {\n          \
    \  if (c == 'o') {\n                result.Add(4);\n                beats += 4;\n\
    \            } else if (c == '|') {\n                result.Add(beats);\n    \
    \            beats = 0;\n            }\n        }\n        return result;", " \
    \       var result = new List<long>();\n        var beats = new Dictionary<char,\
    \ long>() {\n            {'o', 4},\n            {'|', 2},\n            {'.', 1}\n\
    \        };\n        var last_char = ' ';\n        var current_beat = 0L;\n  \
    \      foreach (var c in music_string) {\n            if (c == ' ') {\n      \
    \          if (last_char != ' ') {\n                    result.Add(current_beat);\n\
    \                    current_beat = 0;\n                }\n            } else\
    \ {\n                current_beat += beats[c];\n            }\n            last_char\
    \ = c;\n        }\n        if (current_beat > 0) {\n            result.Add(current_beat);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var current_note = 0L;\n      \
    \  foreach (var c in music_string) {\n            if (c == 'o') {\n          \
    \      current_note += 4;\n            } else if (c == '|') {\n              \
    \  result.Add(current_note);\n                current_note = 0;\n            }\
    \ else if (c == '.') {\n                current_note += 1;\n            }\n  \
    \      }\n        result.Add(current_note);\n        return result;", "      \
    \  var result = new List<long>();\n        var notes = music_string.Split(' ');\n\
    \        foreach (var note in notes) {\n            switch (note) {\n        \
    \        case \"o\":\n                    result.Add(4);\n                   \
    \ break;\n                case \"o|\":\n                    result.Add(2);\n \
    \                   break;\n                case \".|\":\n                   \
    \ result.Add(1);\n                    break;\n            }\n        }\n     \
    \   return result;", "        var result = new List<long>();\n        var notes\
    \ = music_string.Split(' ');\n        foreach (var note in notes) {\n        \
    \    if (note == \"o\") {\n                result.Add(4);\n            } else\
    \ if (note == \"o|\") {\n                result.Add(2);\n            } else if\
    \ (note == \".|\") {\n                result.Add(1);\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long counter = 0;\n        foreach (char c in music_string) {\n        \
    \    if (c == 'o') {\n                result.Add(4);\n            } else if (c\
    \ == '|') {\n                result[counter] = result[counter] / 2;\n        \
    \    } else if (c == '.') {\n                counter++;\n            }\n     \
    \   }\n        return result;", "        var result = new List<long>();\n    \
    \    var beats = new List<char>();\n        foreach (var c in music_string) {\n\
    \            if (c == ' ') {\n                if (beats.Count > 0) {\n       \
    \             result.Add(beats.Count);\n                    beats.Clear();\n \
    \               }\n            } else {\n                beats.Add(c);\n     \
    \       }\n        }\n        if (beats.Count > 0) {\n            result.Add(beats.Count);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (var c in music_string) {\n            if (c == 'o') {\n       \
    \         result.Add(4);\n            } else if (c == '|') {\n               \
    \ result[result.Count - 1] /= 2;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        int i = 0;\n        while\
    \ (i < music_string.Length) {\n            if (music_string[i] == 'o') {\n   \
    \             if (i + 1 < music_string.Length && music_string[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i += 2;\n           \
    \     } else {\n                    result.Add(4);\n                    i += 1;\n\
    \                }\n            } else {\n                result.Add(1);\n   \
    \             i += 2;\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var current_note = new StringBuilder();\n\
    \        foreach (var c in music_string) {\n            if (c == ' ') {\n    \
    \            result.Add(current_note.ToString() == \"o\" ? 4 : 2);\n         \
    \       current_note.Clear();\n            } else {\n                current_note.Append(c);\n\
    \            }\n        }\n        result.Add(current_note.ToString() == \"o\"\
    \ ? 4 : 2);\n        return result;", "        List<long> ret = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    ret.Add(2);\n        \
    \            beats += 2;\n                    i++;\n                }\n      \
    \          else {\n                    ret.Add(4);\n                    beats\
    \ += 4;\n                }\n            }\n            else if (music_string[i]\
    \ == '.') {\n                ret.Add(1);\n                beats += 1;\n      \
    \      }\n            else if (music_string[i] == '|') {\n                ret.Add(0);\n\
    \            }\n        }\n        return ret;", "        var result = new List<long>();\n\
    \        foreach (var note in music_string.Split(' ')) {\n            if (note\
    \ == \"o\") {\n                result.Add(4);\n            } else if (note ==\
    \ \"o|\") {\n                result.Add(2);\n            } else if (note == \"\
    .|\") {\n                result.Add(1);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                if (i + 1 < music_string.Length && music_string[i + 1] ==\
    \ '|') {\n                    result.Add(2);\n                    i++;\n     \
    \           } else {\n                    result.Add(4);\n                }\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i++;\n                } else {\n                    result.Add(4);\n\
    \                }\n            } else if (music_string[i] == '.') {\n       \
    \         result.Add(1);\n                i++;\n            }\n        }\n   \
    \     return result;", "        var result = new List<long>();\n        var note_lengths\
    \ = new Dictionary<char, long>() {\n            {'o', 4L},\n            {'|',\
    \ 2L},\n            {'.', 1L}\n        };\n        var note_length = 0L;\n   \
    \     foreach (var c in music_string) {\n            if (c == ' ') {\n       \
    \         result.Add(note_length);\n                note_length = 0L;\n      \
    \      } else {\n                note_length += note_lengths[c];\n           \
    \ }\n        }\n        result.Add(note_length);\n        return result;", " \
    \       List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;", "        // Your code goes here.\n        return null;", "       \
    \ List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            switch (c) {\n       \
    \         case 'o':\n                    result.Add(4);\n                    break;\n\
    \                case '|':\n                    result.Add(2);\n             \
    \       break;\n                case '.':\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (char c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var note_length = new Dictionary<char, long>();\n        note_length['o']\
    \ = 4;\n        note_length['|'] = 2;\n        note_length['.'] = 1;\n       \
    \ var current_note = 0L;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (note_length.ContainsKey(music_string[i])) {\n           \
    \     current_note += note_length[music_string[i]];\n            } else {\n  \
    \              result.Add(current_note);\n                current_note = 0;\n\
    \            }\n        }\n        result.Add(current_note);\n        return result;",
  "        var result = new List<long>();\n        var music_string_array = music_string.Split('\
    \ ');\n        foreach (var note in music_string_array) {\n            if (note\
    \ == \"o\") {\n                result.Add(4);\n            } else if (note ==\
    \ \"o|\") {\n                result.Add(2);\n            } else if (note == \"\
    .|\") {\n                result.Add(1);\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        // Your code goes here\n        return null;", "        List<long> res\
    \ = new List<long>();\n        foreach (var c in music_string) {\n           \
    \ if (c == 'o') {\n                res.Add(4);\n            } else if (c == '|')\
    \ {\n                res[res.Count - 1] /= 2;\n            }\n        }\n    \
    \    return res;", "        var result = new List<long>();\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \            } else if (c == '|') {\n                result[result.Count - 1]\
    \ /= 2;\n            }\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var s = music_string.Split(' ');\n        foreach\
    \ (var c in s) {\n            switch (c) {\n                case \"o\":\n    \
    \                result.Add(4);\n                    break;\n                case\
    \ \"o|\":\n                    result.Add(2);\n                    break;\n  \
    \              case \".|\":\n                    result.Add(1);\n            \
    \        break;\n            }\n        }\n        return result;", "        var\
    \ notes = new List<long>();\n        var note_lengths = new Dictionary<char, long>();\n\
    \        note_lengths['o'] = 4;\n        note_lengths['|'] = 2;\n        note_lengths['.']\
    \ = 1;\n        var note_length = 0L;\n        for (var i = 0; i < music_string.Length;\
    \ i++) {\n            var c = music_string[i];\n            if (note_lengths.ContainsKey(c))\
    \ {\n                note_length += note_lengths[c];\n            } else {\n \
    \               notes.Add(note_length);\n                note_length = 0;\n  \
    \          }\n        }\n        notes.Add(note_length);\n        return notes;",
  "        List<long> res = new List<long>();\n        foreach (char c in music_string)\
    \ {\n            if (c == 'o') {\n                res.Add(4);\n            } else\
    \ if (c == '|') {\n                res[res.Count - 1] /= 2;\n            }\n \
    \       }\n        return res;", "        List<long> result = new List<long>();\n\
    \        string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var note_length = new Dictionary<char, long>();\n        note_length['o']\
    \ = 4;\n        note_length['|'] = 2;\n        note_length['.'] = 1;\n       \
    \ var note_length_stack = new Stack<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                continue;\n            }\n \
    \           if (c == 'o') {\n                note_length_stack.Push(note_length[c]);\n\
    \            } else {\n                var note_length_sum = 0L;\n           \
    \     while (note_length_stack.Count > 0) {\n                    note_length_sum\
    \ += note_length_stack.Pop();\n                }\n                result.Add(note_length_sum);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i++;\n                } else {\n                    result.Add(4);\n\
    \                }\n            } else if (music_string[i] == '.') {\n       \
    \         result.Add(1);\n                i++;\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            switch (note) {\n  \
    \              case \"o\":\n                    result.Add(4);\n             \
    \       break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>();\n       \
    \ string[] notes = music_string.Split(' ');\n        foreach (string note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var note = new StringBuilder();\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(GetNoteLength(note.ToString()));\n\
    \                note.Clear();\n            } else {\n                note.Append(c);\n\
    \            }\n        }\n        result.Add(GetNoteLength(note.ToString()));\n\
    \        return result;", "        var beats = new List<long>();\n        var\
    \ notes = music_string.Split(' ');\n        foreach (var note in notes) {\n  \
    \          if (note == \"o\") {\n                beats.Add(4);\n            }\
    \ else if (note == \"o|\") {\n                beats.Add(2);\n            } else\
    \ if (note == \".|\") {\n                beats.Add(1);\n            }\n      \
    \  }\n        return beats;", "        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (var c in music_string) {\n            if (c == 'o') {\n       \
    \         result.Add(4);\n            } else if (c == '|') {\n               \
    \ result[result.Count - 1] /= 2;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        int i = 0;\n        while\
    \ (i < music_string.Length) {\n            if (music_string[i] == 'o') {\n   \
    \             if (i + 1 < music_string.Length && music_string[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i += 2;\n           \
    \     } else {\n                    result.Add(4);\n                    i += 1;\n\
    \                }\n            } else {\n                result.Add(1);\n   \
    \             i += 2;\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var beats = new Dictionary<char,\
    \ long>();\n        beats['o'] = 4;\n        beats['|'] = 2;\n        beats['.']\
    \ = 1;\n        var current_beat = 0L;\n        foreach (var c in music_string)\
    \ {\n            if (beats.ContainsKey(c)) {\n                current_beat +=\
    \ beats[c];\n            } else {\n                result.Add(current_beat);\n\
    \                current_beat = 0;\n            }\n        }\n        result.Add(current_beat);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (var c in music_string) {\n            switch (c) {\n          \
    \      case 'o':\n                    result.Add(4);\n                    break;\n\
    \                case '|':\n                    result[result.Count - 1] /= 2;\n\
    \                    break;\n                case '.':\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var current_beat = 0L;\n      \
    \  foreach (var c in music_string) {\n            if (c == 'o') {\n          \
    \      result.Add(4 - current_beat);\n                current_beat = 0;\n    \
    \        } else if (c == '|') {\n                current_beat++;\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4);\n            } else if (c == '|') {\n           \
    \     result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                if (i + 1 < music_string.Length && music_string[i + 1] ==\
    \ '|') {\n                    result.Add(2);\n                    i++;\n     \
    \           } else {\n                    result.Add(4);\n                }\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            switch (note) {\n  \
    \              case \"o\":\n                    result.Add(4);\n             \
    \       break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        var result = new List<long>();\n        var notes\
    \ = music_string.Split(' ');\n        foreach (var note in notes) {\n        \
    \    if (note == \"o\") {\n                result.Add(4);\n            } else\
    \ if (note == \"o|\") {\n                result.Add(2);\n            } else if\
    \ (note == \".|\") {\n                result.Add(1);\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var beats = new List<string>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var current = 0L;\n        foreach (var c in music_string) {\n      \
    \      switch (c) {\n                case 'o':\n                    result.Add(current);\n\
    \                    current = 4L;\n                    break;\n             \
    \   case '|':\n                    current /= 2L;\n                    break;\n\
    \                case '.':\n                    break;\n                default:\n\
    \                    throw new Exception(\"Invalid character\");\n           \
    \ }\n        }\n        result.Add(current);\n        return result;", "     \
    \   var result = new List<long>();\n        var notes = music_string.Split(' ');\n\
    \        foreach (var note in notes) {\n            switch (note) {\n        \
    \        case \"o\":\n                    result.Add(4);\n                   \
    \ break;\n                case \"o|\":\n                    result.Add(2);\n \
    \                   break;\n                case \".|\":\n                   \
    \ result.Add(1);\n                    break;\n            }\n        }\n     \
    \   return result;", "        List<long> result = new List<long>();\n        for\
    \ (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var current_note = 0L;\n        for (var i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                current_note\
    \ += 4;\n            } else if (music_string[i] == '|') {\n                result.Add(current_note);\n\
    \                current_note = 0;\n            }\n        }\n        result.Add(current_note);\n\
    \        return result;", "        // TODO: implement this function\n        return\
    \ new List<long>();", "        var result = new List<long>();\n        var note_lengths\
    \ = new Dictionary<char, long>();\n        note_lengths['o'] = 4;\n        note_lengths['|']\
    \ = 2;\n        note_lengths['.'] = 1;\n        var note_length = 0L;\n      \
    \  foreach (var c in music_string) {\n            if (note_lengths.ContainsKey(c))\
    \ {\n                note_length += note_lengths[c];\n            } else {\n \
    \               result.Add(note_length);\n                note_length = 0;\n \
    \           }\n        }\n        result.Add(note_length);\n        return result;",
  "        var beats = new List<long>();\n        var chars = music_string.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] ==\
    \ 'o') {\n                if (i + 1 < chars.Length && chars[i + 1] == '|') {\n\
    \                    beats.Add(2);\n                    i++;\n               \
    \ } else {\n                    beats.Add(4);\n                }\n           \
    \ } else if (chars[i] == '.') {\n                beats.Add(1);\n             \
    \   i++;\n            }\n        }\n        return beats;", "        List<long>\
    \ result = new List<long>();\n        // Your code goes here\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        var notes = new List<long>();\n\
    \        var note_length = 0L;\n        foreach (var c in music_string) {\n  \
    \          switch (c) {\n                case 'o':\n                    note_length\
    \ = 4L;\n                    break;\n                case '|':\n             \
    \       notes.Add(note_length);\n                    note_length = 0L;\n     \
    \               break;\n                case '.':\n                    note_length\
    \ /= 2L;\n                    break;\n            }\n        }\n        return\
    \ notes;", "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        var beats = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;", "        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;", "        var beats = new List<long>();\n        foreach (var note\
    \ in music_string.Split(' ')) {\n            switch (note) {\n               \
    \ case \"o\":\n                    beats.Add(4);\n                    break;\n\
    \                case \"o|\":\n                    beats.Add(2);\n           \
    \         break;\n                case \".|\":\n                    beats.Add(1);\n\
    \                    break;\n            }\n        }\n        return beats;",
  "        List<long> result = new List<long>();\n        int i = 0;\n        while\
    \ (i < music_string.Length) {\n            if (music_string[i] == 'o') {\n   \
    \             if (i + 1 < music_string.Length && music_string[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i += 2;\n           \
    \     } else {\n                    result.Add(4);\n                    i += 1;\n\
    \                }\n            } else {\n                result.Add(1);\n   \
    \             i += 2;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        var res = new List<long>();\n\
    \        var s = music_string.Split(' ');\n        foreach (var note in s) {\n\
    \            if (note == \"o\") {\n                res.Add(4);\n            }\
    \ else if (note == \"o|\") {\n                res.Add(2);\n            } else\
    \ if (note == \".|\") {\n                res.Add(1);\n            }\n        }\n\
    \        return res;", "        var result = new List<long>();\n        var notes\
    \ = music_string.Split(' ');\n        foreach (var note in notes) {\n        \
    \    switch (note) {\n                case \"o\":\n                    result.Add(4);\n\
    \                    break;\n                case \"o|\":\n                  \
    \  result.Add(2);\n                    break;\n                case \".|\":\n\
    \                    result.Add(1);\n                    break;\n            }\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    beats = 2L;\n        \
    \            i++;\n                }\n                else {\n               \
    \     beats = 4L;\n                }\n            }\n            else if (music_string[i]\
    \ == '.') {\n                beats = 1L;\n            }\n            else {\n\
    \                beats = 0L;\n            }\n            result.Add(beats);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4);\n            } else if (c == '|') {\n           \
    \     result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;", "        var notes = new List<long>();\n        var note_lengths =\
    \ new Dictionary<char, long>();\n        note_lengths['o'] = 4;\n        note_lengths['|']\
    \ = 2;\n        note_lengths['.'] = 1;\n        var note_length = 0L;\n      \
    \  foreach (var c in music_string) {\n            if (note_lengths.ContainsKey(c))\
    \ {\n                note_length += note_lengths[c];\n            } else {\n \
    \               notes.Add(note_length);\n                note_length = 0;\n  \
    \          }\n        }\n        notes.Add(note_length);\n        return notes;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     // TODO: Implement your solution here\n        return result;", "      \
    \  List<long> result = new List<long>();\n        long beats = 0;\n        for\
    \ (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                beats = 4L;\n            }\n            else if (music_string[i]\
    \ == '|') {\n                beats = beats / 2L;\n            }\n            else\
    \ if (music_string[i] == '.') {\n                result.Add(beats);\n        \
    \        beats = 0L;\n            }\n        }\n        return result;", "   \
    \     List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long beats = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                beats = 4L;\n    \
    \        }\n            else if (music_string[i] == '|') {\n                beats\
    \ = 2L;\n            }\n            else if (music_string[i] == '.') {\n     \
    \           beats = 1L;\n            }\n            else {\n                continue;\n\
    \            }\n            result.Add(beats);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            switch (c) {\n                case 'o':\n                   \
    \ result.Add(4);\n                    break;\n                case '|':\n    \
    \                result[result.Count - 1] /= 2;\n                    break;\n\
    \                case '.':\n                    result.Add(1);\n             \
    \       break;\n            }\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var note = new List<char>();\n        foreach\
    \ (var ch in music_string) {\n            if (ch == ' ') {\n                if\
    \ (note.Count == 0) {\n                    continue;\n                }\n    \
    \            if (note[0] == 'o') {\n                    result.Add(4);\n     \
    \           } else if (note[0] == '.') {\n                    result.Add(1);\n\
    \                } else {\n                    throw new Exception(\"Invalid note\"\
    );\n                }\n                note.Clear();\n            } else if (ch\
    \ == '|') {\n                if (note.Count == 0) {\n                    throw\
    \ new Exception(\"Invalid note\");\n                }\n                if (note[0]\
    \ == 'o') {\n                    result.Add(2);\n                } else if (note[0]\
    \ == '.') {\n                    result.Add(1);\n                } else {\n  \
    \                  throw new Exception(\"Invalid note\");\n                }\n\
    \                note.Clear();\n            } else {\n                note.Add(ch);\n\
    \            }\n        }\n        return result;", "        var beats = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;", "        var notes = new List<long>();\n \
    \       var note = 0L;\n        foreach (var c in music_string) {\n          \
    \  if (c == 'o') {\n                note += 4;\n            } else if (c == '|')\
    \ {\n                notes.Add(note);\n                note = 0;\n           \
    \ } else if (c == '.') {\n                note += 1;\n            }\n        }\n\
    \        notes.Add(note);\n        return notes;", "        List<long> result\
    \ = new List<long>();\n        foreach (var c in music_string) {\n           \
    \ if (c == 'o') {\n                result.Add(4);\n            } else if (c ==\
    \ '|') {\n                result[result.Count - 1] /= 2;\n            }\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \            } else if (c == '|') {\n                result[result.Count - 1]\
    \ /= 2;\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        foreach (var c in music_string) {\n    \
    \        if (c == 'o') {\n                result.Add(4);\n            } else if\
    \ (c == '|') {\n                result[result.Count - 1] /= 2;\n            }\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4);\n            } else if (c == '|') {\n           \
    \     result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;", "        List<long> res = new List<long>();\n        for (int i =\
    \ 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                res.Add(4);\n            }\n            else if (music_string[i]\
    \ == '.') {\n                res.Add(1);\n            }\n            else if (music_string[i]\
    \ == '|') {\n                res.Add(2);\n            }\n        }\n        return\
    \ res;", "        List<long> result = new List<long>();\n        for (int i =\
    \ 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                result.Add(4);\n            }\n            else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n            }\n            else if\
    \ (music_string[i] == '|') {\n                result.Add(2);\n            }\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      // Your code goes here.\n        return null;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i++;\n                } else {\n                    result.Add(4);\n\
    \                }\n            } else if (music_string[i] == '.') {\n       \
    \         result.Add(1);\n                i++;\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  long beats = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                beats = 4L;\n    \
    \        }\n            else if (music_string[i] == '|') {\n                beats\
    \ = 2L;\n            }\n            else if (music_string[i] == '.') {\n     \
    \           beats = 1L;\n            }\n            else {\n                beats\
    \ = 0L;\n            }\n            result.Add(beats);\n        }\n        return\
    \ result;", "        // TODO: Implement this function\n        var result = new\
    \ List<long>();\n        var notes = music_string.Split(' ');\n        foreach\
    \ (var note in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                current_beat += beats[c];\n            } else {\n       \
    \         result.Add(current_beat);\n                current_beat = 0;\n     \
    \       }\n        }\n        result.Add(current_beat);\n        return result;",
  "        var result = new List<long>();\n        var music = music_string.Split('\
    \ ');\n        foreach (var note in music) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        string[] notes = music_string.Split('\
    \ ');\n        foreach (string note in notes) {\n            if (note == \"o\"\
    ) {\n                result.Add(4);\n            } else if (note == \"o|\") {\n\
    \                result.Add(2);\n            } else if (note == \".|\") {\n  \
    \              result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long beats = 0;\n      \
    \  for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                beats = 4L;\n            }\n            else if (music_string[i]\
    \ == '|') {\n                beats = 2L;\n            }\n            else if (music_string[i]\
    \ == '.') {\n                beats = 1L;\n            }\n            else {\n\
    \                continue;\n            }\n            result.Add(beats);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   beats = 2L;\n            }\n            else if (music_string[i] == '.') {\n\
    \                beats = 1L;\n            }\n            else {\n            \
    \    beats = 0L;\n            }\n            result.Add(beats);\n        }\n \
    \       return result;", "        var result = new List<long>();\n        var\
    \ notes = music_string.Split(' ');\n        foreach (var note in notes) {\n  \
    \          if (note == \"o\") {\n                result.Add(4);\n            }\
    \ else if (note == \"o|\") {\n                result.Add(2);\n            } else\
    \ if (note == \".|\") {\n                result.Add(1);\n            }\n     \
    \   }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   beats = 2L;\n            }\n            else if (music_string[i] == '.') {\n\
    \                beats = 1L;\n            }\n            else {\n            \
    \    continue;\n            }\n            result.Add(beats);\n        }\n   \
    \     return result;", "        var notes = music_string.Split(' ');\n       \
    \ var beats = new List<long>();\n        foreach (var note in notes) {\n     \
    \       if (note == \"o\") {\n                beats.Add(4);\n            } else\
    \ if (note == \"o|\") {\n                beats.Add(2);\n            } else if\
    \ (note == \".|\") {\n                beats.Add(1);\n            }\n        }\n\
    \        return beats;", "        List<long> res = new List<long>();\n       \
    \ int count = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n  \
    \          if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    res.Add(2);\n        \
    \            i++;\n                }\n                else {\n               \
    \     res.Add(4);\n                }\n            }\n            else if (music_string[i]\
    \ == '.') {\n                res.Add(1);\n                i++;\n            }\n\
    \        }\n        return res;", "        var result = new List<long>();\n  \
    \      var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        var beats = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                beats.Add(4);\n            } else if (note == \"o|\") {\n   \
    \             beats.Add(2);\n            } else if (note == \".|\") {\n      \
    \          beats.Add(1);\n            }\n        }\n        return beats;", " \
    \       List<long> result = new List<long>();\n        string[] notes = music_string.Split('\
    \ ');\n        foreach (string note in notes) {\n            if (note == \"o\"\
    ) {\n                result.Add(4);\n            } else if (note == \"o|\") {\n\
    \                result.Add(2);\n            } else if (note == \".|\") {\n  \
    \              result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        int i = 0;\n        while\
    \ (i < music_string.Length) {\n            if (music_string[i] == 'o') {\n   \
    \             if (i + 1 < music_string.Length && music_string[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i += 2;\n           \
    \     } else {\n                    result.Add(4);\n                    i += 1;\n\
    \                }\n            } else {\n                result.Add(1);\n   \
    \             i += 2;\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var beats = new Dictionary<char,\
    \ long>() {\n            {'o', 4},\n            {'|', 2},\n            {'.', 1}\n\
    \        };\n        var current_beat = 0L;\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(current_beat);\n\
    \                current_beat = 0;\n            } else {\n                current_beat\
    \ += beats[c];\n            }\n        }\n        result.Add(current_beat);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;", "        // Your code goes here\n\
    \        return null;", "        var result = new List<long>();\n        var notes\
    \ = music_string.Split(' ');\n        foreach (var note in notes) {\n        \
    \    switch (note) {\n                case \"o\":\n                    result.Add(4);\n\
    \                    break;\n                case \"o|\":\n                  \
    \  result.Add(2);\n                    break;\n                case \".|\":\n\
    \                    result.Add(1);\n                    break;\n            }\n\
    \        }\n        return result;", "        List<long> beats = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    beats.Add(2);\n                    i++;\n\
    \                } else {\n                    beats.Add(4);\n               \
    \ }\n            } else if (music_string[i] == '.') {\n                beats.Add(1);\n\
    \                i++;\n            }\n        }\n        return beats;", "   \
    \     List<long> result = new List<long>();\n        // your code here\n     \
    \   return result;", "        var result = new List<long>();\n        var beats\
    \ = new Dictionary<char, long>() {\n            {'o', 4},\n            {'|', 2},\n\
    \            {'.', 1}\n        };\n        var note = new StringBuilder();\n \
    \       foreach (var c in music_string) {\n            if (c == ' ') {\n     \
    \           result.Add(beats[note[0]]);\n                note.Clear();\n     \
    \       } else {\n                note.Append(c);\n            }\n        }\n\
    \        result.Add(beats[note[0]]);\n        return result;", "        List<long>\
    \ result = new List<long>();\n        foreach (char c in music_string) {\n   \
    \         if (c == 'o') {\n                result.Add(4);\n            } else\
    \ if (c == '|') {\n                result[result.Count - 1] /= 2;\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long count = 0;\n        foreach (char c in music_string) {\n       \
    \     if (c == 'o') {\n                count++;\n            } else if (c == '|')\
    \ {\n                result.Add(count);\n                count = 0;\n        \
    \    }\n        }\n        result.Add(count);\n        return result;", "    \
    \    List<long> result = new List<long>();\n        char[] chars = music_string.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] ==\
    \ 'o') {\n                if (i + 1 < chars.Length && chars[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i++;\n              \
    \  } else {\n                    result.Add(4);\n                }\n         \
    \   } else if (chars[i] == '.') {\n                result.Add(1);\n          \
    \      i++;\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            }\n            else if (music_string[i] == '.') {\n             \
    \   result.Add(1);\n            }\n            else if (music_string[i] == '|')\
    \ {\n                result.Add(2);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                if (i + 1 < music_string.Length && music_string[i + 1] ==\
    \ '|') {\n                    result.Add(2);\n                    i++;\n     \
    \           } else {\n                    result.Add(4);\n                }\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        string[] notes = music_string.Split('\
    \ ');\n        foreach (string note in notes) {\n            switch (note) {\n\
    \                case \"o\":\n                    result.Add(4);\n           \
    \         break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>();\n       \
    \ // TODO: Implement your solution here\n        return result;", "        var\
    \ result = new List<long>();\n        foreach (var c in music_string) {\n    \
    \        if (c == 'o') {\n                result.Add(4);\n            } else if\
    \ (c == '|') {\n                result[result.Count - 1] /= 2;\n            }\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var note_length = new Dictionary<char, long>();\n        note_length['o']\
    \ = 4;\n        note_length['|'] = 2;\n        note_length['.'] = 1;\n       \
    \ var current_note = 0L;\n        foreach (var c in music_string) {\n        \
    \    if (c == ' ') {\n                result.Add(current_note);\n            \
    \    current_note = 0;\n            } else {\n                current_note +=\
    \ note_length[c];\n            }\n        }\n        result.Add(current_note);\n\
    \        return result;", "        var res = new List<long>();\n        var s\
    \ = music_string.Split(' ');\n        foreach (var note in s) {\n            if\
    \ (note == \"o\") {\n                res.Add(4);\n            } else if (note\
    \ == \"o|\") {\n                res.Add(2);\n            } else if (note == \"\
    .|\") {\n                res.Add(1);\n            }\n        }\n        return\
    \ res;", "        List<long> result = new List<long>();\n        for (int i =\
    \ 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                if (i + 1 < music_string.Length && music_string[i + 1] ==\
    \ '|') {\n                    result.Add(2);\n                    i++;\n     \
    \           } else {\n                    result.Add(4);\n                }\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        char[] chars = music_string.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] ==\
    \ 'o') {\n                if (i + 1 < chars.Length && chars[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i++;\n              \
    \  } else {\n                    result.Add(4);\n                }\n         \
    \   } else if (chars[i] == '.') {\n                if (i + 1 < chars.Length &&\
    \ chars[i + 1] == '|') {\n                    result.Add(1);\n               \
    \     i++;\n                } else {\n                    throw new Exception(\"\
    Invalid character\");\n                }\n            } else {\n             \
    \   throw new Exception(\"Invalid character\");\n            }\n        }\n  \
    \      return result;", "        List<long> result = new List<long>();\n     \
    \   long beats = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    beats = 2L;\n        \
    \            i++;\n                }\n                else {\n               \
    \     beats = 4L;\n                }\n            }\n            else if (music_string[i]\
    \ == '.') {\n                beats = 1L;\n            }\n            else {\n\
    \                beats = 0L;\n            }\n            result.Add(beats);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                current_beat += beats[c];\n            } else {\n       \
    \         result.Add(current_beat);\n                current_beat = 0;\n     \
    \       }\n        }\n        result.Add(current_beat);\n        return result;",
  "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        int i = 0;\n        while\
    \ (i < music_string.Length) {\n            if (music_string[i] == 'o') {\n   \
    \             if (i + 1 < music_string.Length && music_string[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i += 2;\n           \
    \     } else {\n                    result.Add(4);\n                    i += 1;\n\
    \                }\n            } else {\n                result.Add(1);\n   \
    \             i += 2;\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var current_beat = 0L;\n      \
    \  var current_note = \"\";\n        foreach (var c in music_string) {\n     \
    \       if (c == ' ') {\n                if (current_note == \"o\") {\n      \
    \              result.Add(4L);\n                } else if (current_note == \"\
    o|\") {\n                    result.Add(2L);\n                } else if (current_note\
    \ == \".|\") {\n                    result.Add(1L);\n                }\n     \
    \           current_note = \"\";\n            } else {\n                current_note\
    \ += c;\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        foreach (var c in music_string) {\n    \
    \        if (c == 'o') {\n                result.Add(4);\n            } else if\
    \ (c == '|') {\n                result[result.Count - 1] /= 2;\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        var beats = new Dictionary<char,\
    \ long>();\n        beats['o'] = 4;\n        beats['|'] = 2;\n        beats['.']\
    \ = 1;\n        var current_beat = 0L;\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(current_beat);\n\
    \                current_beat = 0;\n            } else {\n                current_beat\
    \ += beats[c];\n            }\n        }\n        result.Add(current_beat);\n\
    \        return result;", "        var result = new List<long>();\n        var\
    \ beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n        beats['|']\
    \ = 2;\n        beats['.'] = 1;\n        var currentBeat = 0L;\n        foreach\
    \ (var c in music_string) {\n            if (beats.ContainsKey(c)) {\n       \
    \         currentBeat += beats[c];\n            } else {\n                result.Add(currentBeat);\n\
    \                currentBeat = 0;\n            }\n        }\n        result.Add(currentBeat);\n\
    \        return result;", "        var result = new List<long>();\n        var\
    \ beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n        beats['|']\
    \ = 2;\n        beats['.'] = 1;\n        var current = 0L;\n        foreach (var\
    \ c in music_string) {\n            if (c == ' ') {\n                result.Add(current);\n\
    \                current = 0;\n            } else {\n                current +=\
    \ beats[c];\n            }\n        }\n        result.Add(current);\n        return\
    \ result;", "        var result = new List<long>();\n        var beats = new List<long>();\n\
    \        var notes = new List<char>();\n        var beat = 0L;\n        var note\
    \ = ' ';\n        var i = 0L;\n        while (i < music_string.Length) {\n   \
    \         if (music_string[(int)i] == 'o') {\n                beat = 4L;\n   \
    \             note = 'o';\n            } else if (music_string[(int)i] == '.')\
    \ {\n                beat = 1L;\n                note = '.';\n            } else\
    \ if (music_string[(int)i] == '|') {\n                beat = 2L;\n           \
    \     note = '|';\n            } else {\n                beat = 0L;\n        \
    \        note = ' ';\n            }\n            if (note == 'o') {\n        \
    \        beats.Add(beat);\n                notes.Add(note);\n            } else\
    \ if (note == '.') {\n                beats.Add(beat);\n                notes.Add(note);\n\
    \            } else if (note == '|') {\n                if (notes[(int)(notes.Count\
    \ - 1L)] == 'o') {\n                    beats[(int)(beats.Count - 1L)] = beats[(int)(beats.Count\
    \ - 1L)] + beat;\n                } else {\n                    beats.Add(beat);\n\
    \                    notes.Add(note);\n                }\n            } else {\n\
    \                beats.Add(beat);\n                notes.Add(note);\n        \
    \    }\n            i = i + 1L;\n        }\n        return beats;", "        var\
    \ result = new List<long>();\n        var current_note = new StringBuilder();\n\
    \        foreach (var c in music_string) {\n            if (c == ' ') {\n    \
    \            result.Add(ParseNote(current_note.ToString()));\n               \
    \ current_note.Clear();\n            } else {\n                current_note.Append(c);\n\
    \            }\n        }\n        result.Add(ParseNote(current_note.ToString()));\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     // Your code goes here\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (var c in music_string) {\n           \
    \ if (c == 'o') {\n                result.Add(4);\n            } else if (c ==\
    \ '|') {\n                result[result.Count - 1] /= 2;\n            }\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (var note in music_string.Split(' ')) {\n            switch (note)\
    \ {\n                case \"o\":\n                    result.Add(4);\n       \
    \             break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        var result = new List<long>();\n        var beats\
    \ = new Dictionary<char, long> {\n            {'o', 4},\n            {'|', 2},\n\
    \            {'.', 1}\n        };\n        var current = 0L;\n        foreach\
    \ (var c in music_string) {\n            if (c == ' ') {\n                result.Add(current);\n\
    \                current = 0;\n            } else {\n                current +=\
    \ beats[c];\n            }\n        }\n        result.Add(current);\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \            } else if (c == '|') {\n                result[result.Count - 1]\
    \ /= 2;\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        foreach (var c in music_string) {\n    \
    \        if (c == 'o') {\n                result.Add(4);\n            } else if\
    \ (c == '|') {\n                result[result.Count - 1] /= 2;\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            switch (c) {\n       \
    \         case 'o':\n                    result.Add(4);\n                    break;\n\
    \                case '|':\n                    result[result.Count - 1] /= 2;\n\
    \                    break;\n                case '.':\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        int i = 0;\n        while\
    \ (i < music_string.Length) {\n            if (music_string[i] == 'o') {\n   \
    \             if (i + 1 < music_string.Length && music_string[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i += 2;\n           \
    \     } else {\n                    result.Add(4);\n                    i += 1;\n\
    \                }\n            } else {\n                result.Add(1);\n   \
    \             i += 2;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        int i = 0;\n        while\
    \ (i < music_string.Length) {\n            if (music_string[i] == 'o') {\n   \
    \             if (i + 1 < music_string.Length && music_string[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i += 2;\n           \
    \     } else {\n                    result.Add(4);\n                    i += 1;\n\
    \                }\n            } else {\n                result.Add(1);\n   \
    \             i += 2;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            switch (music_string[i]) {\n                case 'o':\n\
    \                    result.Add(4);\n                    break;\n            \
    \    case '|':\n                    result.Add(2);\n                    break;\n\
    \                case '.':\n                    result.Add(1);\n             \
    \       break;\n            }\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var beats = new Dictionary<char, long>();\n\
    \        beats['o'] = 4;\n        beats['|'] = 2;\n        beats['.'] = 1;\n \
    \       var current_beat = 0L;\n        var current_note = 0L;\n        foreach\
    \ (var c in music_string) {\n            if (c == ' ') {\n                result.Add(current_note);\n\
    \                current_note = 0;\n            } else {\n                current_note\
    \ += beats[c];\n            }\n        }\n        result.Add(current_note);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long beats = 0;\n        foreach (char c in music_string) {\n          \
    \  if (c == 'o') {\n                beats += 4;\n            } else if (c == '|')\
    \ {\n                result.Add(beats);\n                beats = 0;\n        \
    \    }\n        }\n        result.Add(beats);\n        return result;", "    \
    \    var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            switch (note) {\n  \
    \              case \"o\":\n                    result.Add(4);\n             \
    \       break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>();\n       \
    \ int i = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i +=\
    \ 2;\n                } else {\n                    result.Add(4);\n         \
    \           i += 1;\n                }\n            } else {\n               \
    \ result.Add(1);\n                i += 2;\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var beats = new Dictionary<char,\
    \ long>() {\n            {'o', 4},\n            {'|', 2},\n            {'.', 1}\n\
    \        };\n        var current_beat = 0L;\n        foreach (var c in music_string)\
    \ {\n            if (beats.ContainsKey(c)) {\n                result.Add(beats[c]\
    \ - current_beat);\n                current_beat = beats[c];\n            } else\
    \ {\n                current_beat = 0;\n            }\n        }\n        return\
    \ result;", "        List<long> res = new List<long>();\n        foreach (var\
    \ c in music_string) {\n            switch (c) {\n                case 'o':\n\
    \                    res.Add(4);\n                    break;\n               \
    \ case '|':\n                    res[res.Count - 1] /= 2;\n                  \
    \  break;\n                case '.':\n                    res.Add(1);\n      \
    \              break;\n            }\n        }\n        return res;", "     \
    \   List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var i = 0;\n        while (i < music_string.Length) {\n            var\
    \ c = music_string[i];\n            if (c == 'o') {\n                result.Add(4);\n\
    \                i++;\n            } else if (c == '.') {\n                result.Add(1);\n\
    \                i += 2;\n            } else {\n                throw new Exception(\"\
    Invalid character\");\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var s = music_string.Split(' ');\n\
    \        foreach (var x in s) {\n            switch (x) {\n                case\
    \ \"o\":\n                    result.Add(4);\n                    break;\n   \
    \             case \"o|\":\n                    result.Add(2);\n             \
    \       break;\n                case \".|\":\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;",
  "        var beats = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                beats.Add(4);\n            } else if (note == \"o|\") {\n   \
    \             beats.Add(2);\n            } else if (note == \".|\") {\n      \
    \          beats.Add(1);\n            }\n        }\n        return beats;", " \
    \       var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            switch (note) {\n  \
    \              case \"o\":\n                    result.Add(4);\n             \
    \       break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        var res = new List<long>();\n        var notes\
    \ = music_string.Split(' ');\n        foreach (var note in notes) {\n        \
    \    if (note == \"o\") {\n                res.Add(4);\n            } else if\
    \ (note == \"o|\") {\n                res.Add(2);\n            } else if (note\
    \ == \".|\") {\n                res.Add(1);\n            }\n        }\n      \
    \  return res;", "        // Your code goes here\n        return null;", "   \
    \     var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        // Your code here\n    \
    \    return result;", "        List<long> result = new List<long>();\n       \
    \ foreach (var ch in music_string) {\n            if (ch == 'o') {\n         \
    \       result.Add(4);\n            } else if (ch == '|') {\n                result[result.Count\
    \ - 1] /= 2;\n            }\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        foreach (var c in music_string) {\n    \
    \        if (c == 'o') {\n                result.Add(4);\n            } else if\
    \ (c == '|') {\n                result[result.Count - 1] /= 2;\n            }\n\
    \        }\n        return result;"]
stop_tokens:
- "\n    }\n"

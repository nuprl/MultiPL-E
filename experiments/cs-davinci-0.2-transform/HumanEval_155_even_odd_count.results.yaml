language: cs
name: HumanEval_155_even_odd_count
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            long digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num /= 10;\n\
    \        }\n        return Tuple.Create(even, odd);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf5b8f081fc444e9023bf62650413f8>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // TODO: Implement\n        return Tuple.Create(0L, 0L);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07da9c04872c4f08a00756be877ca0aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07da9c04872c4f08a00756be877ca0aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ var even = 0L;\n        var odd = 0L;\n        while (num != 0) {\n        \
    \    var digit = num % 10;\n            if (digit % 2 == 0) {\n              \
    \  even++;\n            } else {\n                odd++;\n            }\n    \
    \        num /= 10;\n        }\n        return Tuple.Create(even, odd);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06f479ee742e4f739671f036446342ef>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long evenCount = 0;\n        long oddCount = 0;\n        while (num != 0) {\n\
    \            if (num % 2 == 0) {\n                evenCount++;\n            }\
    \ else {\n                oddCount++;\n            }\n            num /= 10;\n\
    \        }\n        return Tuple.Create(evenCount, oddCount);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <864d679e8e54480ab9df4285bca6393e>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        foreach (char c in num.ToString())\
    \ {\n            if (c % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e48f0cfd736044d8b2004d39c32d20da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e48f0cfd736044d8b2004d39c32d20da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // TODO: Implement this function.\n        long even = 0;\n        long odd\
    \ = 0;\n        if (num < 0) {\n            num = num * -1;\n        }\n     \
    \   while (num > 0) {\n            long digit = num % 10;\n            if (digit\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num = num / 10;\n        }\n        return\
    \ Tuple.Create(even, odd);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n  \
    \  Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d071c0aef764cd29bc8cde3b68e6bdc>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // TODO: Implement this function.\n        long even = 0;\n        long odd\
    \ = 0;\n        while (num != 0) {\n            if (num % 2 == 0) {\n        \
    \        even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 10;\n        }\n        return Tuple.Create(even, odd);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <225246c478184379947b54ec2fffd463>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even += 1;\n            } else {\n                odd += 1;\n            }\n\
    \            num /= 10;\n        }\n        return Tuple.Create(even, odd);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8d7a178c3840b98f3f806ba0ac27be>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // Your code goes here.\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00011] in <ace97d4cd61c430cae4b3c092e7bc346>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00011] in <ace97d4cd61c430cae4b3c092e7bc346>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even += 1;\n            } else {\n \
    \               odd += 1;\n            }\n            num /= 10;\n        }\n\
    \        return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d261b45dda44d14bc2b1512f85247d5>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // Your code goes here\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00011] in <73dd50218e9047b1b1a0e037ff027f6b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00011] in <73dd50218e9047b1b1a0e037ff027f6b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even += 1;\n            } else {\n                odd += 1;\n            }\n\
    \            num /= 10;\n        }\n        return Tuple.Create(even, odd);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8d7a178c3840b98f3f806ba0ac27be>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even += 1;\n            } else {\n                odd += 1;\n            }\n\
    \            num /= 10;\n        }\n        return Tuple.Create(even, odd);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8d7a178c3840b98f3f806ba0ac27be>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            long digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num /= 10;\n\
    \        }\n        return Tuple.Create(even, odd);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf5b8f081fc444e9023bf62650413f8>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            long digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num /= 10;\n\
    \        }\n        return Tuple.Create(even, odd);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf5b8f081fc444e9023bf62650413f8>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even += 1;\n            } else {\n                odd += 1;\n            }\n\
    \            num /= 10;\n        }\n        return Tuple.Create(even, odd);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8d7a178c3840b98f3f806ba0ac27be>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // Fill in your code here.\n        return null;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00011] in <af4dcfda5b4a4760bf3515fbeb73de8b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00011] in <af4dcfda5b4a4760bf3515fbeb73de8b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even += 1;\n            } else {\n                odd += 1;\n            }\n\
    \            num /= 10;\n        }\n        return Tuple.Create(even, odd);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8d7a178c3840b98f3f806ba0ac27be>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // TODO: Implement this function.\n        long even = 0;\n        long odd\
    \ = 0;\n        if (num < 0) {\n            num = num * -1;\n        }\n     \
    \   while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ = num / 10;\n        }\n        return Tuple.Create(even, odd);\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9617c21dacdf4b8eada965282b698d53>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long evenCount = 0;\n        long oddCount = 0;\n        long absNum = Math.Abs(num);\n\
    \        while (absNum > 0) {\n            long digit = absNum % 10;\n       \
    \     if (digit % 2 == 0) {\n                evenCount++;\n            } else\
    \ {\n                oddCount++;\n            }\n            absNum /= 10;\n \
    \       }\n        return Tuple.Create(evenCount, oddCount);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f25ff1ee366b4da0a40565f6574836ee>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even += 1;\n            } else {\n \
    \               odd += 1;\n            }\n            num /= 10;\n        }\n\
    \        return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d261b45dda44d14bc2b1512f85247d5>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            long digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even += 1;\n     \
    \       } else {\n                odd += 1;\n            }\n            num /=\
    \ 10;\n        }\n        return Tuple.Create(even, odd);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <734e8df0471f40d39c10e64c197097ce>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ var even = 0L;\n        var odd = 0L;\n        var absNum = Math.Abs(num);\n\
    \        while (absNum > 0) {\n            var digit = absNum % 10;\n        \
    \    if (digit % 2 == 0) {\n                even += 1;\n            } else {\n\
    \                odd += 1;\n            }\n            absNum /= 10;\n       \
    \ }\n        return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b37d8c3a0c6a430fa3d0dbc5a6fed965>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // Your code goes here.\n        return Tuple.Create(0L, 0L);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2158642897f9430487231be7a691cd98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2158642897f9430487231be7a691cd98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            long digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num /= 10;\n\
    \        }\n        return Tuple.Create(even, odd);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf5b8f081fc444e9023bf62650413f8>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even += 1;\n            } else {\n \
    \               odd += 1;\n            }\n            num /= 10;\n        }\n\
    \        return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d261b45dda44d14bc2b1512f85247d5>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ var evenCount = 0L;\n        var oddCount = 0L;\n        var absNum = Math.Abs(num);\n\
    \        while (absNum > 0) {\n            var digit = absNum % 10;\n        \
    \    if (digit % 2 == 0) {\n                evenCount++;\n            } else {\n\
    \                oddCount++;\n            }\n            absNum /= 10;\n     \
    \   }\n        return Tuple.Create(evenCount, oddCount);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b3bffa5fa1e4628a5713343ca24b309>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        foreach (var c in num.ToString())\
    \ {\n            if (c % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a45b63c5739c40a18c04c6c62397a987>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a45b63c5739c40a18c04c6c62397a987>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        foreach (char c in num.ToString())\
    \ {\n            if (c % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e48f0cfd736044d8b2004d39c32d20da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e48f0cfd736044d8b2004d39c32d20da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) num = -num;\n  \
    \      while (num > 0) {\n            if ((num % 10) % 2 == 0) even++;\n     \
    \       else odd++;\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acee74b849554881a93d3acdc620306f>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        long n = Math.Abs(num);\n   \
    \     while (n > 0) {\n            if (n % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            n /=\
    \ 10;\n        }\n        return Tuple.Create(even, odd);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4a98601c5c549da93447f8a2e772ad7>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ var even = 0L;\n        var odd = 0L;\n        var n = Math.Abs(num);\n    \
    \    while (n > 0) {\n            var d = n % 10;\n            if (d % 2 == 0)\
    \ {\n                even += 1;\n            } else {\n                odd +=\
    \ 1;\n            }\n            n /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00c30c2da6d74590936e3b1cfa3bd1d3>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even += 1;\n            } else {\n \
    \               odd += 1;\n            }\n            num /= 10;\n        }\n\
    \        return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d261b45dda44d14bc2b1512f85247d5>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ var even = 0L;\n        var odd = 0L;\n        var n = Math.Abs(num);\n    \
    \    while (n > 0) {\n            var digit = n % 10;\n            if (digit %\
    \ 2 == 0) {\n                even += 1;\n            } else {\n              \
    \  odd += 1;\n            }\n            n /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <43b8db8d41b74af8be9ff10951f51726>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even += 1;\n            } else {\n                odd += 1;\n            }\n\
    \            num /= 10;\n        }\n        return Tuple.Create(even, odd);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8d7a178c3840b98f3f806ba0ac27be>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ var even = 0L;\n        var odd = 0L;\n        var n = Math.Abs(num);\n    \
    \    while (n > 0) {\n            var d = n % 10;\n            if (d % 2 == 0)\
    \ {\n                even += 1;\n            } else {\n                odd +=\
    \ 1;\n            }\n            n /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <00c30c2da6d74590936e3b1cfa3bd1d3>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ var even = 0L;\n        var odd = 0L;\n        foreach (var digit in num.ToString())\
    \ {\n            if (digit % 2 == 0) {\n                even++;\n            }\
    \ else {\n                odd++;\n            }\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9e6a7b5b4134110adf56e0ec3b95715>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9e6a7b5b4134110adf56e0ec3b95715>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even += 1;\n            } else {\n                odd +=\
    \ 1;\n            }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <965995c7f0644834ae331ab6aba74fb8>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            long digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num /= 10;\n\
    \        }\n        return Tuple.Create(even, odd);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf5b8f081fc444e9023bf62650413f8>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        foreach (char c in num.ToString())\
    \ {\n            if (c % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e48f0cfd736044d8b2004d39c32d20da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e48f0cfd736044d8b2004d39c32d20da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        foreach (char c in num.ToString())\
    \ {\n            if (c % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e48f0cfd736044d8b2004d39c32d20da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e48f0cfd736044d8b2004d39c32d20da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even += 1;\n            } else {\n \
    \               odd += 1;\n            }\n            num /= 10;\n        }\n\
    \        return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d261b45dda44d14bc2b1512f85247d5>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0, odd = 0;\n        while (num != 0) {\n            if ((num %\
    \ 10) % 2 == 0) {\n                even++;\n            } else {\n           \
    \     odd++;\n            }\n            num /= 10;\n        }\n        return\
    \ Tuple.Create(even, odd);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n  \
    \  Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6de21ffd7c4e4964ab43f523a0d95cd4>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even += 1;\n            } else {\n                odd += 1;\n            }\n\
    \            num /= 10;\n        }\n        return Tuple.Create(even, odd);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8d7a178c3840b98f3f806ba0ac27be>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // Your code goes here.\n        // You can add more classes/methods/fields\
    \ if you like.\n        long even = 0;\n        long odd = 0;\n        while (num\
    \ != 0) {\n            long digit = num % 10;\n            if (digit % 2 == 0)\
    \ {\n                even += 1;\n            } else {\n                odd +=\
    \ 1;\n            }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <432cf201a9864d5a9c048d31b67c536a>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // TODO: Implement me\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00011] in <98e7cf92f89d4a0f8837e7178fb105ab>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00011] in <98e7cf92f89d4a0f8837e7178fb105ab>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            long digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even += 1;\n     \
    \       } else {\n                odd += 1;\n            }\n            num /=\
    \ 10;\n        }\n        return Tuple.Create(even, odd);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <734e8df0471f40d39c10e64c197097ce>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // Your code goes here.\n        var even = 0;\n        var odd = 0;\n     \
    \   while (num != 0) {\n            var digit = num % 10;\n            if (digit\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplu916t7p.cs(28,16): error CS0029: Cannot implicitly convert type ''System.Tuple<int,
    int>'' to ''System.Tuple<long, long>''

    '
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        foreach (char c in num.ToString())\
    \ {\n            if (c % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e48f0cfd736044d8b2004d39c32d20da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e48f0cfd736044d8b2004d39c32d20da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            long digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num /= 10;\n\
    \        }\n        return Tuple.Create(even, odd);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf5b8f081fc444e9023bf62650413f8>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            long digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num /= 10;\n\
    \        }\n        return Tuple.Create(even, odd);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf5b8f081fc444e9023bf62650413f8>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        long n = Math.Abs(num);\n   \
    \     while (n > 0) {\n            long digit = n % 10;\n            if (digit\
    \ % 2 == 0) {\n                even += 1;\n            } else {\n            \
    \    odd += 1;\n            }\n            n /= 10;\n        }\n        return\
    \ Tuple.Create(even, odd);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n  \
    \  Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9e5dd23d6f0e4d83aab4202c4f3eb9f2>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long evenCount = 0;\n        long oddCount = 0;\n        long numAbs = Math.Abs(num);\n\
    \        while (numAbs > 0) {\n            long digit = numAbs % 10;\n       \
    \     if (digit % 2 == 0) {\n                evenCount++;\n            } else\
    \ {\n                oddCount++;\n            }\n            numAbs /= 10;\n \
    \       }\n        return Tuple.Create(evenCount, oddCount);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eed2205392684af1bf5461e4ae1d79b8>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ var even = 0L;\n        var odd = 0L;\n        while (num != 0) {\n        \
    \    var digit = num % 10;\n            if (digit % 2 == 0) {\n              \
    \  even++;\n            } else {\n                odd++;\n            }\n    \
    \        num /= 10;\n        }\n        return Tuple.Create(even, odd);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06f479ee742e4f739671f036446342ef>:0 \n"
  stdout: ''
  timestamp: 1659798405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even += 1;\n            } else {\n                odd += 1;\n            }\n\
    \            num /= 10;\n        }\n        return Tuple.Create(even, odd);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8d7a178c3840b98f3f806ba0ac27be>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even += 1;\n            } else {\n                odd += 1;\n            }\n\
    \            num /= 10;\n        }\n        return Tuple.Create(even, odd);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8d7a178c3840b98f3f806ba0ac27be>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    if (num % 2 == 0) {\n                even++;\n            } else {\n    \
    \            odd++;\n            }\n            num /= 10;\n        }\n      \
    \  return Tuple.Create(even, odd);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L,\
    \ 2L))));\n    Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L, 3L))));\n\
    \    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ea6f4b4c46346d9a3275ff9d33076fc>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num /= 10;\n        }\n        return Tuple.Create(even, odd);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2d4d246d0ac4a6199f81a43b2144b67>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ long even = 0;\n        long odd = 0;\n        if (num < 0) {\n            num\
    \ = -num;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n            num /= 10;\n        }\n        return Tuple.Create(even,\
    \ odd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad138c65a4a41b88be572744c89dadd>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // >>> EvenOddCount((-12L))\n\
    \    // (Tuple.Create(1L, 1L))\n    // >>> EvenOddCount((123L))\n    // (Tuple.Create(1L,\
    \ 2L))\n    public static Tuple<long, long> EvenOddCount(long num) {\n       \
    \ // TODO: Implement this function.\n        long even = 0;\n        long odd\
    \ = 0;\n        if (num < 0) {\n            num = num * -1;\n        }\n     \
    \   while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ = num / 10;\n        }\n        return Tuple.Create(even, odd);\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(EvenOddCount((7L)).Equals((Tuple.Create(0L,\
    \ 1L))));\n    Debug.Assert(EvenOddCount((-78L)).Equals((Tuple.Create(1L, 1L))));\n\
    \    Debug.Assert(EvenOddCount((3452L)).Equals((Tuple.Create(2L, 2L))));\n   \
    \ Debug.Assert(EvenOddCount((346211L)).Equals((Tuple.Create(3L, 3L))));\n    Debug.Assert(EvenOddCount((-345821L)).Equals((Tuple.Create(3L,\
    \ 3L))));\n    Debug.Assert(EvenOddCount((-2L)).Equals((Tuple.Create(1L, 0L))));\n\
    \    Debug.Assert(EvenOddCount((-45347L)).Equals((Tuple.Create(2L, 3L))));\n \
    \   Debug.Assert(EvenOddCount((0L)).Equals((Tuple.Create(1L, 0L))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9617c21dacdf4b8eada965282b698d53>:0 \n"
  stdout: ''
  timestamp: 1659798276

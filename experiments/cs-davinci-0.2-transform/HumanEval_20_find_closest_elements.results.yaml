language: cs
name: HumanEval_20_find_closest_elements
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429ab32407154885b3c9fc46251fbe6d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    first = numbers[i];\n
    \                   second = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(first, second);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51431659497f459c849fbf142fb43b0f>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    0;\n        float minDiff2 = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiff1 = numbers[i];\n
    \                   minDiff2 = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiff1, minDiff2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4024a84e44f7495d9cc05c1224dea293>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    0;\n        float closest2 = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest1 = numbers[i];\n
    \                   closest2 = numbers[j];\n                }\n            }\n
    \       }\n        if (closest1 > closest2) {\n            float tmp = closest1;\n
    \           closest1 = closest2;\n            closest2 = tmp;\n        }\n        return
    Tuple.Create(closest1, closest2);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    float.MaxValue;\n        float minDiff2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiff1
    = numbers[i];\n                    minDiff2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiff1, minDiff2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35616410527b4bbe93bfca2927aad3c8>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    a = numbers[i];\n                float b = numbers[j];\n                float
    diff = Math.Abs(a - b);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closest_a = a;\n                    closest_b = b;\n
    \               }\n            }\n        }\n        return Tuple.Create(closest_a,
    closest_b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a5ed00242e8040f1be2be4f891005e75>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffSmaller
    = 0;\n        float minDiffLarger = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffSmaller = numbers[i];\n
    \                   minDiffLarger = numbers[j];\n                }\n            }\n
    \       }\n        if (minDiffSmaller > minDiffLarger) {\n            float temp
    = minDiffSmaller;\n            minDiffSmaller = minDiffLarger;\n            minDiffLarger
    = temp;\n        }\n        return Tuple.Create(minDiffSmaller, minDiffLarger);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // TODO: Implement this function.\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <640522e8d2ea4f0db5509755ea209088>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <640522e8d2ea4f0db5509755ea209088>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minSmaller
    = 0;\n        float minLarger = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minSmaller = Math.Min(numbers[i],
    numbers[j]);\n                    minLarger = Math.Max(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return Tuple.Create(minSmaller,
    minLarger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d02477d253e448a5995ca388f82f4c35>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        Tuple<float,
    float> closestElements = null;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    difference = Math.Abs(numbers[i] - numbers[j]);\n                if (difference
    < smallestDifference) {\n                    smallestDifference = difference;\n
    \                   closestElements = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestElements;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <afc5801e43bc4b8e9cf9cca986071702>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float min1 = 0;\n        float
    min2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < min) {\n                    min = diff;\n
    \                   min1 = numbers[i];\n                    min2 = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6421d8152ad44a17be0579fd3350eec5>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    0;\n        float closest2 = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest1 = numbers[i];\n
    \                   closest2 = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest1, closest2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25b35d4815d645ffbe4c096f6975cf46>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float min1 = 0;\n
    \       float min2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    min1 = numbers[i];\n                    min2 = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e765f2031de14f93b0226f68d322d86d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    0;\n        float minDiff2 = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiff1 = numbers[i];\n
    \                   minDiff2 = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiff1, minDiff2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4024a84e44f7495d9cc05c1224dea293>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        float minA =
    float.MaxValue;\n        float minB = float.MaxValue;\n        for (int i = 0;
    i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float distance = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (distance < minDistance) {\n                    minDistance
    = distance;\n                    minA = numbers[i];\n                    minB
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0d276c22814145f9a8e4c03775df4241>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429ab32407154885b3c9fc46251fbe6d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        float
    firstNumber = 0;\n        float secondNumber = 0;\n        for (int i = 0; i <
    numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count; j++)
    {\n                float difference = Math.Abs(numbers[i] - numbers[j]);\n                if
    (difference < smallestDifference) {\n                    smallestDifference =
    difference;\n                    firstNumber = numbers[i];\n                    secondNumber
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(firstNumber,
    secondNumber);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba99a97945454f85ac6e464ac9d462da>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = float.MaxValue;\n
    \       float minB = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minA = numbers[i];\n
    \                   minB = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(minA, minB);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f609ccf27eca43b99ea4c5f2d998cf3f>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // >>> FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n        //
    (Tuple.Create(2.0f, 2.2f))\n        // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \       // (Tuple.Create(2.0f, 2.0f))\n        float minDiff = float.MaxValue;\n
    \       float minDiff1 = float.MaxValue;\n        float minDiff2 = float.MaxValue;\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minDiff1 = numbers[i];\n                    minDiff2
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(minDiff1,
    minDiff2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7af13a976f2647be82a399e53ce32bf3>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = numbers[i] - numbers[j];\n                if (diff < 0) {\n                    diff
    = -diff;\n                }\n                if (diff < closest) {\n                    closest
    = diff;\n                    first = numbers[i];\n                    second =
    numbers[j];\n                }\n            }\n        }\n        if (first >
    second) {\n            float temp = first;\n            first = second;\n            second
    = temp;\n        }\n        return Tuple.Create(first, second);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    first = numbers[i];\n
    \                   second = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(first, second);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51431659497f459c849fbf142fb43b0f>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429ab32407154885b3c9fc46251fbe6d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        Tuple<float, float>
    closestPair = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closestPair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dcd6489ee9154fc0b39d3758a24f417e>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0.0f;\n        float minDiffSecond = 0.0f;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <123bb65185ff4493b966baf5449a2acf>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new ArgumentException(\"numbers
    must have at least two elements\");\n        }\n        float closest = float.MaxValue;\n
    \       float closestA = float.MaxValue;\n        float closestB = float.MaxValue;\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closestA = numbers[i];\n                    closestB
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(closestA,
    closestB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f47bea72d42147a8b32c65521ad04d3b>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    0.0f;\n        float closest2 = 0.0f;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest1 = numbers[i];\n
    \                   closest2 = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest1, closest2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43d2dc671a234a3e9ca0d5a20a503061>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        float minDistanceFirst
    = 0;\n        float minDistanceSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    minDistance) {\n                    minDistance = distance;\n                    minDistanceFirst
    = numbers[i];\n                    minDistanceSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDistanceFirst, minDistanceSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6003ad9f9adb402eb2bda70e944ee3ef>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    a = numbers[i];\n                float b = numbers[j];\n                float
    distance = Math.Abs(a - b);\n                if (distance < closest) {\n                    closest
    = distance;\n                    closest_a = a;\n                    closest_b
    = b;\n                }\n            }\n        }\n        return Tuple.Create(closest_a,
    closest_b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fcc4cfb8a43f4c2c8a4ca379abee2702>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    closest_a
    = numbers[i];\n                    closest_b = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest_a, closest_b);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df4891f15c3749af89ed2a94033542aa>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0.0f;\n        float closest_b = 0.0f;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e52426f3e3824248ab3eaaf84b45c20d>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429ab32407154885b3c9fc46251fbe6d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39ec7bff29ec4f9988376c1bd9a5698a>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39ec7bff29ec4f9988376c1bd9a5698a>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closestA =
    0;\n        float closestB = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closestA = numbers[i];\n
    \                   closestB = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closestA, closestB);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <303cdfc42a4544cb97f6a0a68f8bcd5f>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    closest_a
    = numbers[i];\n                    closest_b = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest_a, closest_b);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df4891f15c3749af89ed2a94033542aa>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    first
    = numbers[i];\n                    second = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(first, second);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3317234ddaab4ac3a37468b92b6ce832>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3adfd5a467f417daf0e6ba1074cd5b3>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffA =
    0;\n        float minDiffB = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffA = numbers[i];\n
    \                   minDiffB = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffA, minDiffB);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c69605a0b88c471a93697c971668b27d>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    float.MaxValue;\n        float minDiff2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiff1
    = numbers[i];\n                    minDiff2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiff1, minDiff2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35616410527b4bbe93bfca2927aad3c8>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39ec7bff29ec4f9988376c1bd9a5698a>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        float
    firstNumber = 0;\n        float secondNumber = 0;\n        for (int i = 0; i <
    numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count; j++)
    {\n                float difference = Math.Abs(numbers[i] - numbers[j]);\n                if
    (difference < smallestDifference) {\n                    smallestDifference =
    difference;\n                    firstNumber = numbers[i];\n                    secondNumber
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(firstNumber,
    secondNumber);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba99a97945454f85ac6e464ac9d462da>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        Tuple<float, float>
    closestPair = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closestPair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dcd6489ee9154fc0b39d3758a24f417e>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Your code goes here\n        return Tuple.Create(0.0f,
    0.0f);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5994886c86ce45afa9dea5eeccb207cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5994886c86ce45afa9dea5eeccb207cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = float.MaxValue;\n
    \       float minB = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minA = numbers[i];\n
    \                   minB = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(minA, minB);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f609ccf27eca43b99ea4c5f2d998cf3f>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    first = numbers[i];\n
    \                   second = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(first, second);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51431659497f459c849fbf142fb43b0f>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float min1 = 0;\n
    \       float min2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    min1 = numbers[i];\n                    min2 = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e765f2031de14f93b0226f68d322d86d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    float.MaxValue;\n        float minDiff2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiff1
    = numbers[i];\n                    minDiff2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiff1, minDiff2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35616410527b4bbe93bfca2927aad3c8>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float min1 = 0;\n        float
    min2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < min) {\n                    min = diff;\n
    \                   min1 = numbers[i];\n                    min2 = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6421d8152ad44a17be0579fd3350eec5>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            float diff = numbers[i + 1] - numbers[i];\n            if
    (diff < minDiff) {\n                minDiff = diff;\n                minDiffFirst
    = numbers[i];\n                minDiffSecond = numbers[i + 1];\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a9e8ed9923441cca91bff3c866bf43f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a9e8ed9923441cca91bff3c866bf43f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minSmaller
    = 0;\n        float minLarger = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minSmaller = Math.Min(numbers[i],
    numbers[j]);\n                    minLarger = Math.Max(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return Tuple.Create(minSmaller,
    minLarger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    a = numbers[i];\n                float b = numbers[j];\n                float
    distance = Math.Abs(a - b);\n                if (distance < closest) {\n                    closest
    = distance;\n                    closest_a = a;\n                    closest_b
    = b;\n                }\n            }\n        }\n        return Tuple.Create(closest_a,
    closest_b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fcc4cfb8a43f4c2c8a4ca379abee2702>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float first = 0.0f;\n
    \       float second = 0.0f;\n        for (int i = 0; i < numbers.Count - 1; i++)
    {\n            float diff = numbers[i + 1] - numbers[i];\n            if (diff
    < minDiff) {\n                minDiff = diff;\n                first = numbers[i];\n
    \               second = numbers[i + 1];\n            }\n        }\n        return
    Tuple.Create(first, second);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36f291ae9dfa4cb7b771124bc8fbc055>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36f291ae9dfa4cb7b771124bc8fbc055>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minFirst =
    float.MaxValue;\n        float minSecond = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minFirst
    = numbers[i];\n                    minSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minFirst, minSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <db925440bcf44a338a0a03be123b16c6>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    float.MaxValue;\n        float minDiff2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiff1
    = numbers[i];\n                    minDiff2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiff1, minDiff2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35616410527b4bbe93bfca2927aad3c8>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    first = numbers[i];\n
    \                   second = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(first, second);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51431659497f459c849fbf142fb43b0f>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        float minDistanceFirst
    = 0;\n        float minDistanceSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    minDistance) {\n                    minDistance = distance;\n                    minDistanceFirst
    = numbers[i];\n                    minDistanceSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDistanceFirst, minDistanceSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6003ad9f9adb402eb2bda70e944ee3ef>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closestElements = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closestElements = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestElements;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d7de0489b44f497493f49fa84f599db0>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // >>> FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n        //
    (Tuple.Create(2.0f, 2.2f))\n        // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \       // (Tuple.Create(2.0f, 2.0f))\n        float closest = float.MaxValue;\n
    \       float closest_a = 0;\n        float closest_b = 0;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float a = numbers[i];\n                float b = numbers[j];\n
    \               float distance = Math.Abs(a - b);\n                if (distance
    < closest) {\n                    closest = distance;\n                    closest_a
    = a;\n                    closest_b = b;\n                }\n            }\n        }\n
    \       return Tuple.Create(closest_a, closest_b);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2427a19afd524299944f5c5ce22844d8>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minSmall =
    float.MaxValue;\n        float minLarge = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minSmall
    = Math.Min(numbers[i], numbers[j]);\n                    minLarge = Math.Max(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return Tuple.Create(minSmall,
    minLarge);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    float.MaxValue;\n        float minDiff2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiff1
    = numbers[i];\n                    minDiff2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiff1, minDiff2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35616410527b4bbe93bfca2927aad3c8>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count -
    1; i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    a = numbers[i];\n                float b = numbers[j];\n                float
    distance = Math.Abs(a - b);\n                if (distance < closest) {\n                    closest
    = distance;\n                    closest_a = a;\n                    closest_b
    = b;\n                }\n            }\n        }\n        return Tuple.Create(closest_a,
    closest_b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e645df44083b4c30bc93492a8b2a455b>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minSmaller
    = float.MaxValue;\n        float minLarger = float.MaxValue;\n        for (int
    i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minSmaller
    = Math.Min(numbers[i], numbers[j]);\n                    minLarger = Math.Max(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return Tuple.Create(minSmaller,
    minLarger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float min1 = 0;\n        float
    min2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < min) {\n                    min = diff;\n
    \                   min1 = numbers[i];\n                    min2 = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6421d8152ad44a17be0579fd3350eec5>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        Tuple<float, float>
    closestPair = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closestPair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dcd6489ee9154fc0b39d3758a24f417e>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffA =
    0;\n        float minDiffB = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffA = numbers[i];\n
    \                   minDiffB = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffA, minDiffB);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c69605a0b88c471a93697c971668b27d>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float min1 = 0;\n
    \       float min2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    min1 = numbers[i];\n                    min2 = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e765f2031de14f93b0226f68d322d86d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float min1 = 0;\n
    \       float min2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    min1 = numbers[i];\n                    min2 = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e765f2031de14f93b0226f68d322d86d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float a = 0;\n        float
    b = 0;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float distance = Math.Abs(numbers[i]
    - numbers[j]);\n                if (distance < closest) {\n                    closest
    = distance;\n                    a = numbers[i];\n                    b = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(a, b);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48e83195988841899a93b33d64b04a68>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDist = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float dist = Math.Abs(numbers[i]
    - numbers[j]);\n                if (dist < minDist) {\n                    minDist
    = dist;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0d83c08e432c48fa8a37d74e5fc0190c>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    first
    = numbers[i];\n                    second = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(first, second);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3317234ddaab4ac3a37468b92b6ce832>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minSmaller
    = 0;\n        float minLarger = 0;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minSmaller = Math.Min(numbers[i],
    numbers[j]);\n                    minLarger = Math.Max(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return Tuple.Create(minSmaller,
    minLarger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        float minDistanceFirst
    = 0;\n        float minDistanceSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    minDistance) {\n                    minDistance = distance;\n                    minDistanceFirst
    = numbers[i];\n                    minDistanceSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDistanceFirst, minDistanceSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6003ad9f9adb402eb2bda70e944ee3ef>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float min1 = 0;\n        float
    min2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < min) {\n                    min = diff;\n
    \                   min1 = numbers[i];\n                    min2 = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6421d8152ad44a17be0579fd3350eec5>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new Exception(\"List
    must contain at least two elements\");\n        }\n        float closest = float.MaxValue;\n
    \       float closest_a = 0;\n        float closest_b = 0;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float distance = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (distance < closest) {\n                    closest = distance;\n
    \                   closest_a = numbers[i];\n                    closest_b = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(closest_a,
    closest_b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34f3486d73c94956b25fd847c59b7655>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        Tuple<float,
    float> closestElements = null;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    minDistance) {\n                    minDistance = distance;\n                    closestElements
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return closestElements;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd2e23d8d9d345d6b11320f3c0ef9b2b>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    closest_a
    = numbers[i];\n                    closest_b = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest_a, closest_b);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df4891f15c3749af89ed2a94033542aa>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429ab32407154885b3c9fc46251fbe6d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    first
    = numbers[i];\n                    second = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(first, second);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3317234ddaab4ac3a37468b92b6ce832>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    a = numbers[i];\n                float b = numbers[j];\n                float
    diff = Math.Abs(a - b);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closest_a = a;\n                    closest_b = b;\n
    \               }\n            }\n        }\n        return Tuple.Create(closest_a,
    closest_b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a5ed00242e8040f1be2be4f891005e75>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = float.MaxValue;\n        float minDiffSecond = float.MaxValue;\n        for
    (int i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiffFirst
    = numbers[i];\n                    minDiffSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6afb261978f8451ea4b8dfdc2b59e4ff>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        if (numbers.Count < 2) {\n            throw new ArgumentException(\"numbers
    must have at least two elements\");\n        }\n        float closest = float.MaxValue;\n
    \       float closest1 = float.MaxValue;\n        float closest2 = float.MaxValue;\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            for (int j = i
    + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closest1 = numbers[i];\n                    closest2
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(closest1,
    closest2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <365ee9c877394cc788423253e554ec73>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minFirst =
    0;\n        float minSecond = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minFirst = numbers[i];\n
    \                   minSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minFirst, minSecond);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8feea2d30714b04b302230d5fb6be97>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // TODO: Implement this function\n        return null;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <a77b3b65040d41d388fe506f26905724>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <a77b3b65040d41d388fe506f26905724>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    first = numbers[i];\n
    \                   second = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(first, second);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51431659497f459c849fbf142fb43b0f>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39ec7bff29ec4f9988376c1bd9a5698a>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // TODO: Implement this function.\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <640522e8d2ea4f0db5509755ea209088>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <640522e8d2ea4f0db5509755ea209088>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    first
    = numbers[i];\n                    second = numbers[j];\n                }\n            }\n
    \       }\n        if (first > second) {\n            float temp = first;\n            first
    = second;\n            second = temp;\n        }\n        return Tuple.Create(first,
    second);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float min1 = 0;\n
    \       float min2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    min1 = numbers[i];\n                    min2 = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e765f2031de14f93b0226f68d322d86d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float min1 = float.MaxValue;\n
    \       float min2 = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < min) {\n
    \                   min = diff;\n                    min1 = numbers[i];\n                    min2
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(min1,
    min2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9818bd2cce14da38752fea9bbb85ddd>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Your code goes here\n        return null;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <9b97395c726a498282236d123eb12d19>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <9b97395c726a498282236d123eb12d19>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minSmaller
    = float.MaxValue;\n        float minLarger = float.MaxValue;\n        for (int
    i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minSmaller
    = Math.Min(numbers[i], numbers[j]);\n                    minLarger = Math.Max(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return Tuple.Create(minSmaller,
    minLarger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429ab32407154885b3c9fc46251fbe6d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    float.MaxValue;\n        float minDiff2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiff1
    = numbers[i];\n                    minDiff2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiff1, minDiff2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35616410527b4bbe93bfca2927aad3c8>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffSmaller
    = 0;\n        float minDiffLarger = 0;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            float diff = numbers[i + 1] - numbers[i];\n            if
    (diff < minDiff) {\n                minDiff = diff;\n                minDiffSmaller
    = numbers[i];\n                minDiffLarger = numbers[i + 1];\n            }\n
    \       }\n        return Tuple.Create(minDiffSmaller, minDiffLarger);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acdd7099458d409c84ae358ebde82915>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acdd7099458d409c84ae358ebde82915>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = float.MaxValue;\n        float minDiffSecond = float.MaxValue;\n        for
    (int i = 0; i < numbers.Count - 1; i++) {\n            for (int j = i + 1; j <
    numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (diff < minDiff) {\n                    minDiff = diff;\n                    minDiffFirst
    = numbers[i];\n                    minDiffSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4abc8809f7384ae889da61946583f591>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        Tuple<float, float>
    closestPair = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closestPair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dcd6489ee9154fc0b39d3758a24f417e>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        Tuple<float,
    float> closestElements = null;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    difference = Math.Abs(numbers[i] - numbers[j]);\n                if (difference
    < smallestDifference) {\n                    smallestDifference = difference;\n
    \                   closestElements = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestElements;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <afc5801e43bc4b8e9cf9cca986071702>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    float.MaxValue;\n        float closest_b = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < closest) {\n                    closest = diff;\n                    closest_a
    = numbers[i];\n                    closest_b = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest_a, closest_b);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f4cf1842e538429bbf5f4f49f3e4ef9e>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffSmaller
    = float.MaxValue;\n        float minDiffLarger = float.MaxValue;\n        float
    minDiffSmallerElement = float.MaxValue;\n        float minDiffLargerElement =
    float.MaxValue;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minDiffSmaller = numbers[i];\n                    minDiffLarger
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(minDiffSmaller,
    minDiffLarger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cff815fbc7a44646a73e07454d4764b6>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // TODO: Implement this function\n        return null;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <a77b3b65040d41d388fe506f26905724>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <a77b3b65040d41d388fe506f26905724>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        float minDistanceFirst
    = 0;\n        float minDistanceSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    minDistance) {\n                    minDistance = distance;\n                    minDistanceFirst
    = numbers[i];\n                    minDistanceSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDistanceFirst, minDistanceSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6003ad9f9adb402eb2bda70e944ee3ef>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429ab32407154885b3c9fc46251fbe6d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    0;\n        float closest2 = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest1 = numbers[i];\n
    \                   closest2 = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest1, closest2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25b35d4815d645ffbe4c096f6975cf46>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    result = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    result = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d087343bfdf46c0b4836020de2e735d>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minSmaller
    = float.MaxValue;\n        float minLarger = float.MaxValue;\n        for (int
    i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minSmaller
    = Math.Min(numbers[i], numbers[j]);\n                    minLarger = Math.Max(numbers[i],
    numbers[j]);\n                }\n            }\n        }\n        return Tuple.Create(minSmaller,
    minLarger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798942
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Your code goes here.\n        return null;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <3c52fe969003440a908a4de8fcb85c81>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <3c52fe969003440a908a4de8fcb85c81>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39ec7bff29ec4f9988376c1bd9a5698a>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        float minDistanceFirst
    = 0;\n        float minDistanceSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    minDistance) {\n                    minDistance = distance;\n                    minDistanceFirst
    = numbers[i];\n                    minDistanceSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDistanceFirst, minDistanceSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6003ad9f9adb402eb2bda70e944ee3ef>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float min1 = 0;\n
    \       float min2 = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    min1 = numbers[i];\n                    min2 = numbers[j];\n
    \               }\n            }\n        }\n        if (min1 > min2) {\n            float
    temp = min1;\n            min1 = min2;\n            min2 = temp;\n        }\n
    \       return Tuple.Create(min1, min2);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // >>> FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n        //
    (Tuple.Create(2.0f, 2.2f))\n        // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \       // (Tuple.Create(2.0f, 2.0f))\n        float closest = float.MaxValue;\n
    \       float closest_a = 0;\n        float closest_b = 0;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float a = numbers[i];\n                float b = numbers[j];\n
    \               float diff = Math.Abs(a - b);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = a;\n                    closest_b
    = b;\n                }\n            }\n        }\n        return Tuple.Create(closest_a,
    closest_b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <49ca5a65b5fd460181e77e530d1f592c>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffA =
    0;\n        float minDiffB = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffA = numbers[i];\n
    \                   minDiffB = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffA, minDiffB);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c69605a0b88c471a93697c971668b27d>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    float.MaxValue;\n        float minDiff2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiff1
    = numbers[i];\n                    minDiff2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiff1, minDiff2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35616410527b4bbe93bfca2927aad3c8>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    closest_a
    = numbers[i];\n                    closest_b = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest_a, closest_b);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df4891f15c3749af89ed2a94033542aa>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count -
    1; i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6246a5e9215641a0a5d4f88bc637ead2>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float a = 0;\n        float
    b = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for (int
    j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < min) {\n                    min = diff;\n
    \                   a = numbers[i];\n                    b = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(a, b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <885d573d8b6d455eb5b2a70cd31b014e>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            float diff = numbers[i + 1] - numbers[i];\n            if
    (diff < minDiff) {\n                minDiff = diff;\n                minDiffFirst
    = numbers[i];\n                minDiffSecond = numbers[i + 1];\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a9e8ed9923441cca91bff3c866bf43f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a9e8ed9923441cca91bff3c866bf43f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float first = 0;\n        float
    second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < min) {\n                    min = diff;\n
    \                   first = numbers[i];\n                    second = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(first,
    second);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c4e55acd9954cb085ac0194cffb7cbc>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = float.MaxValue;\n
    \       float minB = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minA = numbers[i];\n
    \                   minB = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(minA, minB);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f609ccf27eca43b99ea4c5f2d998cf3f>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39ec7bff29ec4f9988376c1bd9a5698a>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float a = 0;\n        float
    b = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for (int
    j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < min) {\n                    min = diff;\n
    \                   a = numbers[i];\n                    b = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(a, b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <885d573d8b6d455eb5b2a70cd31b014e>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    closest_a
    = numbers[i];\n                    closest_b = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest_a, closest_b);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df4891f15c3749af89ed2a94033542aa>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float a = numbers[i];\n
    \               float b = numbers[j];\n                float diff = Math.Abs(a
    - b);\n                if (diff < minDiff) {\n                    minDiff = diff;\n
    \                   minA = a;\n                    minB = b;\n                }\n
    \           }\n        }\n        return Tuple.Create(minA, minB);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ea35de3f8d04d46a4a927e317833aac>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiff1 =
    float.MaxValue;\n        float minDiff2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiff1
    = numbers[i];\n                    minDiff2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiff1, minDiff2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35616410527b4bbe93bfca2927aad3c8>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    float.MaxValue;\n        float closest2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < closest) {\n                    closest = diff;\n                    closest1
    = numbers[i];\n                    closest2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest1, closest2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d607439be9934f288434f653a38c35dc>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    first = numbers[i];\n
    \                   second = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(first, second);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51431659497f459c849fbf142fb43b0f>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minFirst =
    0;\n        float minSecond = 0;\n        for (int i = 0; i < numbers.Count -
    1; i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minFirst = numbers[i];\n
    \                   minSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minFirst, minSecond);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f1b793befc094c8ca1e6bab08e8deb81>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39ec7bff29ec4f9988376c1bd9a5698a>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        Tuple<float, float>
    closestPair = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closestPair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dcd6489ee9154fc0b39d3758a24f417e>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float min = float.MaxValue;\n        float a = 0;\n        float
    b = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for (int
    j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < min) {\n                    min = diff;\n
    \                   a = numbers[i];\n                    b = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(a, b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <885d573d8b6d455eb5b2a70cd31b014e>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDistance = float.MaxValue;\n        float minDistanceFirst
    = 0;\n        float minDistanceSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    minDistance) {\n                    minDistance = distance;\n                    minDistanceFirst
    = numbers[i];\n                    minDistanceSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDistanceFirst, minDistanceSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6003ad9f9adb402eb2bda70e944ee3ef>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            float diff = Math.Abs(numbers[i] - numbers[i + 1]);\n
    \           if (diff < minDiff) {\n                minDiff = diff;\n                minDiffFirst
    = numbers[i];\n                minDiffSecond = numbers[i + 1];\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <38cacb3ec7e642dc961927823fc8031b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <38cacb3ec7e642dc961927823fc8031b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798942
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // TODO: Implement this function.\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <640522e8d2ea4f0db5509755ea209088>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <640522e8d2ea4f0db5509755ea209088>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = float.MaxValue;\n        float minDiffSecond = float.MaxValue;\n        for
    (int i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiffFirst
    = numbers[i];\n                    minDiffSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6afb261978f8451ea4b8dfdc2b59e4ff>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d02477d253e448a5995ca388f82f4c35>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffA =
    0;\n        float minDiffB = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffA = numbers[i];\n
    \                   minDiffB = numbers[j];\n                }\n            }\n
    \       }\n        if (minDiffA > minDiffB) {\n            float temp = minDiffA;\n
    \           minDiffA = minDiffB;\n            minDiffB = temp;\n        }\n        return
    Tuple.Create(minDiffA, minDiffB);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a1e370cae094ee8a9d546539a22404a>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        float
    firstNumber = 0;\n        float secondNumber = 0;\n        for (int i = 0; i <
    numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count; j++)
    {\n                float difference = Math.Abs(numbers[i] - numbers[j]);\n                if
    (difference < smallestDifference) {\n                    smallestDifference =
    difference;\n                    firstNumber = numbers[i];\n                    secondNumber
    = numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(firstNumber,
    secondNumber);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba99a97945454f85ac6e464ac9d462da>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    0;\n        float closest2 = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest1 = numbers[i];\n
    \                   closest2 = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest1, closest2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25b35d4815d645ffbe4c096f6975cf46>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minSmaller
    = 0;\n        float minLarger = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minSmaller = Math.Min(numbers[i],
    numbers[j]);\n                    minLarger = Math.Max(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return Tuple.Create(minSmaller,
    minLarger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        float
    smallestNumber = 0;\n        float largestNumber = 0;\n        for (int i = 0;
    i < numbers.Count - 1; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float difference = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (difference < smallestDifference) {\n                    smallestDifference
    = difference;\n                    smallestNumber = Math.Min(numbers[i], numbers[j]);\n
    \                   largestNumber = Math.Max(numbers[i], numbers[j]);\n                }\n
    \           }\n        }\n        return Tuple.Create(smallestNumber, largestNumber);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minSmaller
    = 0;\n        float minLarger = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minSmaller = Math.Min(numbers[i],
    numbers[j]);\n                    minLarger = Math.Max(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return Tuple.Create(minSmaller,
    minLarger);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // We'll use a simple algorithm that compares each number
    to each other number and keeps track of the smallest\n        // difference.\n
    \       float smallestDifference = float.MaxValue;\n        float smallestDifferenceFirstNumber
    = 0;\n        float smallestDifferenceSecondNumber = 0;\n        for (int i =
    0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float difference = Math.Abs(numbers[i] - numbers[j]);\n
    \               if (difference < smallestDifference) {\n                    smallestDifference
    = difference;\n                    smallestDifferenceFirstNumber = numbers[i];\n
    \                   smallestDifferenceSecondNumber = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(smallestDifferenceFirstNumber,
    smallestDifferenceSecondNumber);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bc7df24734f5404ca71e9ce83b73c49a>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        Tuple<float, float>
    closest = null;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    closest = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closest;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d02477d253e448a5995ca388f82f4c35>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    a = numbers[i];\n                float b = numbers[j];\n                float
    diff = Math.Abs(a - b);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closest_a = a;\n                    closest_b = b;\n
    \               }\n            }\n        }\n        return Tuple.Create(closest_a,
    closest_b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a5ed00242e8040f1be2be4f891005e75>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    float.MaxValue;\n        float closest2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < closest) {\n                    closest = diff;\n                    closest1
    = numbers[i];\n                    closest2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest1, closest2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d607439be9934f288434f653a38c35dc>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    first = numbers[i];\n
    \                   second = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(first, second);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51431659497f459c849fbf142fb43b0f>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        Tuple<float, float>
    closestPair = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float distance = Math.Abs(numbers[i]
    - numbers[j]);\n                if (distance < closest) {\n                    closest
    = distance;\n                    closestPair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <92f7942252ed43c4b6bcad748a442487>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429ab32407154885b3c9fc46251fbe6d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429ab32407154885b3c9fc46251fbe6d>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    float.MaxValue;\n        float closest2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < closest) {\n                    closest = diff;\n                    closest1
    = numbers[i];\n                    closest2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest1, closest2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d607439be9934f288434f653a38c35dc>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minNum1 = float.MaxValue;\n
    \       float minNum2 = float.MaxValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minNum1 = numbers[i];\n
    \                   minNum2 = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minNum1, minNum2);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22da11e10f8f4b4f8d0ff18513bae1bd>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minA = 0;\n
    \       float minB = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < minDiff) {\n                    minDiff
    = diff;\n                    minA = numbers[i];\n                    minB = numbers[j];\n
    \               }\n            }\n        }\n        return Tuple.Create(minA,
    minB);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e32ba7035f0e4c158bf815cba8a88e9c>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        Tuple<float, float>
    closestPair = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float diff = Math.Abs(numbers[i]
    - numbers[j]);\n                if (diff < closest) {\n                    closest
    = diff;\n                    closestPair = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestPair;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dcd6489ee9154fc0b39d3758a24f417e>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        Tuple<float, float>
    closestPair = null;\n        for (int i = 0; i < numbers.Count; i++) {\n            for
    (int j = i + 1; j < numbers.Count; j++) {\n                float difference =
    Math.Abs(numbers[i] - numbers[j]);\n                if (difference < closest)
    {\n                    closest = difference;\n                    closestPair
    = Tuple.Create(numbers[i], numbers[j]);\n                }\n            }\n        }\n
    \       return closestPair;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7883e4b950c45bd8aa5b3f360615ead>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    a = numbers[i];\n                float b = numbers[j];\n                float
    distance = Math.Abs(a - b);\n                if (distance < closest) {\n                    closest
    = distance;\n                    closest_a = a;\n                    closest_b
    = b;\n                }\n            }\n        }\n        return Tuple.Create(closest_a,
    closest_b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fcc4cfb8a43f4c2c8a4ca379abee2702>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count - 1; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    first
    = numbers[i];\n                    second = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(first, second);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e250ee7726344e49ab5cdf38b021315>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // >>> FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n        //
    (Tuple.Create(2.0f, 2.2f))\n        // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \       // (Tuple.Create(2.0f, 2.0f))\n        float min_diff = float.MaxValue;\n
    \       float min_a = 0;\n        float min_b = 0;\n        for (int i = 0; i
    < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count; j++)
    {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < min_diff) {\n                    min_diff = diff;\n                    min_a
    = numbers[i];\n                    min_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(min_a, min_b);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7c360bbf3253465ba4c8b866655b0472>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffSmaller
    = 0;\n        float minDiffLarger = 0;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffSmaller = numbers[i];\n
    \                   minDiffLarger = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffSmaller, minDiffLarger);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17d7e1ee392d4af5b30f1d4c4ca9717c>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffA =
    0;\n        float minDiffB = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffA = numbers[i];\n
    \                   minDiffB = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffA, minDiffB);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c69605a0b88c471a93697c971668b27d>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffSmaller
    = float.MaxValue;\n        float minDiffLarger = float.MaxValue;\n        float
    minDiffSmallerNumber = float.MaxValue;\n        float minDiffLargerNumber = float.MaxValue;\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            float number =
    numbers[i];\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    otherNumber = numbers[j];\n                float diff = Math.Abs(number - otherNumber);\n
    \               if (diff < minDiff) {\n                    minDiff = diff;\n                    minDiffSmaller
    = number;\n                    minDiffLarger = otherNumber;\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiffSmaller, minDiffLarger);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <204b72a6fe9a43e4bd8f3a3b2f69f1f0>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count - 1; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = numbers[j] - numbers[i];\n                if (diff < closest) {\n                    closest
    = diff;\n                    first = numbers[i];\n                    second =
    numbers[j];\n                }\n            }\n        }\n        return Tuple.Create(first,
    second);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d94e51dd9f6d4519bf18663cc4b23815>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d94e51dd9f6d4519bf18663cc4b23815>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    first = numbers[i];\n
    \                   second = numbers[j];\n                }\n            }\n        }\n
    \       return Tuple.Create(first, second);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51431659497f459c849fbf142fb43b0f>:0
    \n"
  stdout: ''
  timestamp: 1659798940
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minFirst =
    0;\n        float minSecond = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minFirst = numbers[i];\n
    \                   minSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minFirst, minSecond);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8feea2d30714b04b302230d5fb6be97>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    0.0f;\n        float closest2 = 0.0f;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest1 = numbers[i];\n
    \                   closest2 = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest1, closest2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a336f9a7ef4d454e9f9e276bbb899a56>:0
    \n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // Sort the numbers\n        numbers.Sort();\n        // Find
    the closest pair of numbers\n        float closest = float.MaxValue;\n        float
    closest_a = 0.0f;\n        float closest_b = 0.0f;\n        for (int i = 0; i
    < numbers.Count - 1; i++) {\n            float a = numbers[i];\n            float
    b = numbers[i + 1];\n            float distance = Math.Abs(a - b);\n            if
    (distance < closest) {\n                closest = distance;\n                closest_a
    = a;\n                closest_b = b;\n            }\n        }\n        return
    Tuple.Create(closest_a, closest_b);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        float
    firstNumber = 0;\n        float secondNumber = 0;\n        for (int i = 0; i <
    numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count; j++)
    {\n                float difference = Math.Abs(numbers[i] - numbers[j]);\n                if
    (difference < smallestDifference) {\n                    smallestDifference =
    difference;\n                    firstNumber = numbers[i];\n                    secondNumber
    = numbers[j];\n                }\n            }\n        }\n        if (firstNumber
    > secondNumber) {\n            float temp = firstNumber;\n            firstNumber
    = secondNumber;\n            secondNumber = temp;\n        }\n        return Tuple.Create(firstNumber,
    secondNumber);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float smallestDifference = float.MaxValue;\n        Tuple<float,
    float> closestElements = null;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    difference = Math.Abs(numbers[i] - numbers[j]);\n                if (difference
    < smallestDifference) {\n                    smallestDifference = difference;\n
    \                   closestElements = Tuple.Create(numbers[i], numbers[j]);\n
    \               }\n            }\n        }\n        return closestElements;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <afc5801e43bc4b8e9cf9cca986071702>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = 0;\n        float minDiffSecond = 0;\n        for (int i = 0; i < numbers.Count
    - 1; i++) {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < minDiff)
    {\n                    minDiff = diff;\n                    minDiffFirst = numbers[i];\n
    \                   minDiffSecond = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3adfd5a467f417daf0e6ba1074cd5b3>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    a = numbers[i];\n                float b = numbers[j];\n                float
    distance = Math.Abs(a - b);\n                if (distance < closest) {\n                    closest
    = distance;\n                    closest_a = a;\n                    closest_b
    = b;\n                }\n            }\n        }\n        return Tuple.Create(closest_a,
    closest_b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fcc4cfb8a43f4c2c8a4ca379abee2702>:0
    \n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    float.MaxValue;\n        float closest2 = float.MaxValue;\n        for (int i
    = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < closest) {\n                    closest = diff;\n                    closest1
    = numbers[i];\n                    closest2 = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(closest1, closest2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d607439be9934f288434f653a38c35dc>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest_a =
    0;\n        float closest_b = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    dist = Math.Abs(numbers[i] - numbers[j]);\n                if (dist < closest)
    {\n                    closest = dist;\n                    closest_a = numbers[i];\n
    \                   closest_b = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest_a, closest_b);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17a841a1089e405dace4d8557563627a>:0
    \n"
  stdout: ''
  timestamp: 1659799070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float minDiff = float.MaxValue;\n        float minDiffFirst
    = float.MaxValue;\n        float minDiffSecond = float.MaxValue;\n        for
    (int i = 0; i < numbers.Count; i++) {\n            for (int j = i + 1; j < numbers.Count;
    j++) {\n                float diff = Math.Abs(numbers[i] - numbers[j]);\n                if
    (diff < minDiff) {\n                    minDiff = diff;\n                    minDiffFirst
    = numbers[i];\n                    minDiffSecond = numbers[j];\n                }\n
    \           }\n        }\n        return Tuple.Create(minDiffFirst, minDiffSecond);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6afb261978f8451ea4b8dfdc2b59e4ff>:0
    \n"
  stdout: ''
  timestamp: 1659798941
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        // TODO: Implement this function.\n        return Tuple.Create(0.0f,
    0.0f);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,
    (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new
    List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d891a22df284172bc3b0645b80171ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d891a22df284172bc3b0645b80171ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float first = 0;\n
    \       float second = 0;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           for (int j = i + 1; j < numbers.Count; j++) {\n                float
    distance = Math.Abs(numbers[i] - numbers[j]);\n                if (distance <
    closest) {\n                    closest = distance;\n                    first
    = numbers[i];\n                    second = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(first, second);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3317234ddaab4ac3a37468b92b6ce832>:0
    \n"
  stdout: ''
  timestamp: 1659798942
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a supplied list of numbers (of length at least two) select
    and return two that are the closest to each\n    // other and return them in order
    (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n
    \   // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n
    \   // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>
    numbers) {\n        float closest = float.MaxValue;\n        float closest1 =
    0;\n        float closest2 = 0;\n        for (int i = 0; i < numbers.Count; i++)
    {\n            for (int j = i + 1; j < numbers.Count; j++) {\n                float
    diff = Math.Abs(numbers[i] - numbers[j]);\n                if (diff < closest)
    {\n                    closest = diff;\n                    closest1 = numbers[i];\n
    \                   closest2 = numbers[j];\n                }\n            }\n
    \       }\n        return Tuple.Create(closest1, closest2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new List<float>(new
    float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(3.9f,
    4.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,
    5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,
    2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,
    (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,
    2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,
    (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,
    3.1f))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25b35d4815d645ffbe4c096f6975cf46>:0
    \n"
  stdout: ''
  timestamp: 1659798940

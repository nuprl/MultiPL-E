language: cs
name: HumanEval_91_is_bored
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        bool isBored = false;\n        for (int i = 0; i < S.Length; i++) {\n\
    \            if (S[i] == 'I') {\n                isBored = true;\n           \
    \ }\n            if (S[i] == '.' || S[i] == '?' || S[i] == '!') {\n          \
    \      if (isBored) {\n                    count++;\n                }\n     \
    \           isBored = false;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8aec00265aac49a7b2c78426cdbae5ad>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(new char[] { ' ' });\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                boredoms++;\n            }\n        }\n       \
    \ return boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9668117a5c04593bf6784181ee4ef27>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        var c = 0L;\n\
    \        var words = S.Split(' ', '.', '?', '!');\n        foreach (var word in\
    \ words) {\n            if (word == \"I\") {\n                c++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e38350a21e274e86a5e56e5e4d5af6aa>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0aafa3d8514159afcfe6d0d508f42b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0aafa3d8514159afcfe6d0d508f42b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e19233462506405d96216b793de33dfc>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e19233462506405d96216b793de33dfc>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        int count = 0;\n\
    \        string[] words = S.Split('.', '?', '!');\n        foreach (string word\
    \ in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n            \
    \    count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <854e0e0eb2e14c81a0f1e02c03e241b5>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        var boredoms =\
    \ 0L;\n        var words = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (var word in words) {\n            if (word.StartsWith(\"I\")) {\n         \
    \       boredoms++;\n            }\n        }\n        return boredoms;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0cc03ce285a45c787118df71acc1982>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0cc03ce285a45c787118df71acc1982>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                boredoms++;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1612bd3cd13469a89af7893ba247446>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here.\n\
    \        return 0L;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b67ea8d1018419197bba1b4c29c499a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b67ea8d1018419197bba1b4c29c499a>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        var boredoms =\
    \ 0L;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n      \
    \  foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <03b6ccc025714784b048da69120226fd>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        var boredoms =\
    \ 0L;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n      \
    \  foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <03b6ccc025714784b048da69120226fd>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e19233462506405d96216b793de33dfc>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here.\n\
    \        return 0L;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b67ea8d1018419197bba1b4c29c499a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b67ea8d1018419197bba1b4c29c499a>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // TODO: Implement\
    \ this function.\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce0b51b33cfb41489fd1f18dd4302bd3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce0b51b33cfb41489fd1f18dd4302bd3>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                boredoms++;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1612bd3cd13469a89af7893ba247446>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        for (int i = 0; i < S.Length; i++) {\n            if (S[i] == 'I') {\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79bb3b73c1f34588884568f3169509ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79bb3b73c1f34588884568f3169509ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        int boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be26082713454658a0baea187b001618>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.StartsWith(\"I\"));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6478edc006624914aa9d93dd8ac4fd38>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6478edc006624914aa9d93dd8ac4fd38>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // TODO: Implement\
    \ this function.\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce0b51b33cfb41489fd1f18dd4302bd3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce0b51b33cfb41489fd1f18dd4302bd3>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Where(s => s.Trim().StartsWith(\"I\")).Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f6df199a28444cdd9a8f90aac15d7198>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // TODO: Implement\
    \ this function.\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce0b51b33cfb41489fd1f18dd4302bd3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce0b51b33cfb41489fd1f18dd4302bd3>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e19233462506405d96216b793de33dfc>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] words = S.Split('.', '?', '!');\n        foreach (string word\
    \ in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n            \
    \    count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d03d085d21a48628f7475820a479109>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Where(s => s.Trim().StartsWith(\"I\")).Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f6df199a28444cdd9a8f90aac15d7198>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        var boredoms =\
    \ 0L;\n        var words = S.Split(' ', '.', '?', '!');\n        foreach (var\
    \ word in words) {\n            if (word == \"I\") {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4afe4ea6d3194577ba0c6c9a53e9ddd1>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here.\n\
    \        return 0L;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b67ea8d1018419197bba1b4c29c499a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b67ea8d1018419197bba1b4c29c499a>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long result =\
    \ 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                result++;\n            }\n            while (i <\
    \ S.Length && S[i] != '.' && S[i] != '?' && S[i] != '!') {\n                i++;\n\
    \            }\n            i++;\n        }\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4112bca9717d4aff98c342c0539313ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4112bca9717d4aff98c342c0539313ed>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] words = S.Split('.', '?', '!');\n        for (int i = 0; i <\
    \ words.Length; i++) {\n            if (words[i].StartsWith(\"I\")) {\n      \
    \          count++;\n            }\n        }\n        return count;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e4c6ea5fb65d4a70b720cc0b4acbe725>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e4c6ea5fb65d4a70b720cc0b4acbe725>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // TODO: Implement\
    \ this function.\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce0b51b33cfb41489fd1f18dd4302bd3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce0b51b33cfb41489fd1f18dd4302bd3>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries).Count(x =>\
    \ x.Trim().StartsWith(\"I\"));\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d3c218465514182820bdc0d90580a66>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e60a7fb1a418464986d9e58693bf44c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e60a7fb1a418464986d9e58693bf44c1>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] words = S.Split('.', '?', '!');\n        foreach (string word\
    \ in words) {\n            if (word.StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d19f71da5584abfa4e5f63331892edf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d19f71da5584abfa4e5f63331892edf>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e19233462506405d96216b793de33dfc>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Where(s => s.Trim().StartsWith(\"I\")).Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f6df199a28444cdd9a8f90aac15d7198>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries).Count(s =>\
    \ s.Trim().StartsWith(\"I\"));\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07c190e169f54237bc4b97256034146f>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e19233462506405d96216b793de33dfc>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\"))\n                count++;\n        }\n        return count;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6ed79d50a8946439cc399bdb9848dac>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        bool isBored = false;\n        for (int i = 0; i < S.Length; i++)\
    \ {\n            if (S[i] == 'I') {\n                isBored = true;\n       \
    \     }\n            if (S[i] == '.' || S[i] == '?' || S[i] == '!') {\n      \
    \          if (isBored) {\n                    boredoms++;\n                }\n\
    \                isBored = false;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <95ca71cba6ea4a56bd231fef549dded4>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            string[] words\
    \ = sentence.Split(' ');\n            if (words.Length > 0 && words[0] == \"I\"\
    ) {\n                boredoms++;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1612bd3cd13469a89af7893ba247446>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here.\n\
    \        return 0L;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b67ea8d1018419197bba1b4c29c499a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b67ea8d1018419197bba1b4c29c499a>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e19233462506405d96216b793de33dfc>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        bool isBored = false;\n        foreach (char c in S) {\n     \
    \       if (c == '.' || c == '?' || c == '!') {\n                isBored = false;\n\
    \            } else if (c == 'I') {\n                isBored = true;\n       \
    \     } else if (isBored) {\n                boredoms++;\n            }\n    \
    \    }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3212071cdc214bda9a71e1b60481e144>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3212071cdc214bda9a71e1b60481e144>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        int count = 0;\n\
    \        string[] words = S.Split('.', '?', '!');\n        foreach (string word\
    \ in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n            \
    \    count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <854e0e0eb2e14c81a0f1e02c03e241b5>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] words = S.Split('.', '?', '!');\n        foreach (string word\
    \ in words) {\n            if (word.StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d19f71da5584abfa4e5f63331892edf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d19f71da5584abfa4e5f63331892edf>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        var boredoms =\
    \ 0L;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n      \
    \  foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <03b6ccc025714784b048da69120226fd>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here.\n        return 0L;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844a0eb019024085a894f3fa283e70fb>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e19233462506405d96216b793de33dfc>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries).Count(x =>\
    \ x.Trim().StartsWith(\"I\"));\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d3c218465514182820bdc0d90580a66>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] words = S.Split('.', '?', '!');\n        foreach (string word\
    \ in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n            \
    \    count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2d03d085d21a48628f7475820a479109>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code goes\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <961b4a970ef94c9eaa9b9e0695b727ee>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Select(x => x.Trim()).Count(x => x.StartsWith(\"I\"\
    ));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <183f39e5816c46e19dbc54c521ee63f6>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        int count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <24a2e67d83524a029ebd2aadf129e88b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here.\n\
    \        return 0L;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b67ea8d1018419197bba1b4c29c499a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b67ea8d1018419197bba1b4c29c499a>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47418228b9554328963ed4b0cd559518>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1f66fa8d50ed451eaae29bce8dc2c705>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1f66fa8d50ed451eaae29bce8dc2c705>:0 \n"
  stdout: ''
  timestamp: 1659793132
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60baa57a63ef4fcaafe1f149928778e9>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        // Write your\
    \ code here\n        return 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8a83305c0d8421e948b73ee6be688cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8a83305c0d8421e948b73ee6be688cd>:0 \n"
  stdout: ''
  timestamp: 1659793269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1b4c8fd6e4834bb128bde098f0e3b>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efbdbd08a8614e58a5ad9a963bb5b4b8>:0 \n"
  stdout: ''
  timestamp: 1659793131
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"I\"));\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello\
    \ world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e19233462506405d96216b793de33dfc>:0 \n"
  stdout: ''
  timestamp: 1659793131

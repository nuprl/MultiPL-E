name: HumanEval_63_fibfib
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==\
  \ 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  \    // Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n\
  \    // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long\
  \ n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
  \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
  \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
  \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
  \ == (927L));\n    }\n\n}\n"
completions: ["        if (n == 0) return 0;\n        if (n == 1) return 0;\n    \
    \    if (n == 2) return 1;\n        long a = 0;\n        long b = 0;\n       \
    \ long c = 1;\n        for (long i = 3; i <= n; i++) {\n            long d = a\
    \ + b + c;\n            a = b;\n            b = c;\n            c = d;\n     \
    \   }\n        return c;", "        if (n == 0) return 0;\n        if (n == 1)\
    \ return 0;\n        if (n == 2) return 1;\n        long a = 0;\n        long\
    \ b = 0;\n        long c = 1;\n        for (long i = 3; i <= n; i++) {\n     \
    \       long d = a + b + c;\n            a = b;\n            b = c;\n        \
    \    c = d;\n        }\n        return c;", "        if (n == 0) return 0;\n \
    \       if (n == 1) return 0;\n        if (n == 2) return 1;\n        return Fibfib(n\
    \ - 1) + Fibfib(n - 2) + Fibfib(n - 3);", "        // Your code goes here.\n \
    \       return 0;", "        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n - 1) + Fibfib(n -\
    \ 2) + Fibfib(n - 3);", "        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n - 1) + Fibfib(n -\
    \ 2) + Fibfib(n - 3);", "        if (n < 3) {\n            return n - 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        long c = 1;\n     \
    \   for (long i = 3; i <= n; i++) {\n            long d = a + b + c;\n       \
    \     a = b;\n            b = c;\n            c = d;\n        }\n        return\
    \ c;", "        if (n == 0) {\n            return 0;\n        }\n        if (n\
    \ == 1) {\n            return 0;\n        }\n        if (n == 2) {\n         \
    \   return 1;\n        }\n        return Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);", "        long a = 0;\n        long b = 0;\n        long c = 1;\n   \
    \     long d = 0;\n        while (n > 0) {\n            if ((n & 1) != 0) {\n\
    \                d = a + b + c;\n                a = b;\n                b = c;\n\
    \                c = d;\n            }\n            d = a + b;\n            a\
    \ = b;\n            b = d;\n            n >>= 1;\n        }\n        return a;",
  "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
    \ 2) return 1;\n        long a = 0;\n        long b = 0;\n        long c = 1;\n\
    \        for (long i = 3; i <= n; i++) {\n            long d = a + b + c;\n  \
    \          a = b;\n            b = c;\n            c = d;\n        }\n       \
    \ return c;", "        if (n == 0) return 0;\n        if (n == 1) return 0;\n\
    \        if (n == 2) return 1;\n        return Fibfib(n - 1) + Fibfib(n - 2) +\
    \ Fibfib(n - 3);", "        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        long a = 0;\n        long b = 0;\n\
    \        long c = 1;\n        for (long i = 3; i <= n; i++) {\n            long\
    \ d = a + b + c;\n            a = b;\n            b = c;\n            c = d;\n\
    \        }\n        return c;", "        // Your code goes here.\n        return\
    \ 0;", "        if (n == 0) return 0;\n        if (n == 1) return 0;\n       \
    \ if (n == 2) return 1;\n        long a = 0;\n        long b = 0;\n        long\
    \ c = 1;\n        for (long i = 3; i <= n; i++) {\n            long d = a + b\
    \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
    \        return c;", "        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        long a = 0;\n        long b = 0;\n\
    \        long c = 1;\n        for (long i = 3; i <= n; i++) {\n            long\
    \ d = a + b + c;\n            a = b;\n            b = c;\n            c = d;\n\
    \        }\n        return c;", "        if (n == 0) return 0;\n        if (n\
    \ == 1) return 0;\n        if (n == 2) return 1;\n        long a = 0;\n      \
    \  long b = 0;\n        long c = 1;\n        for (long i = 3; i <= n; i++) {\n\
    \            long d = a + b + c;\n            a = b;\n            b = c;\n   \
    \         c = d;\n        }\n        return c;", "        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 1;\n        return\
    \ Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);", "        if (n == 0) {\n  \
    \          return 0;\n        }\n        if (n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);", "        long a = 0;\n    \
    \    long b = 0;\n        long c = 1;\n        for (int i = 0; i < n; i++) {\n\
    \            long d = a + b + c;\n            a = b;\n            b = c;\n   \
    \         c = d;\n        }\n        return a;", "        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 1;\n        long a\
    \ = 0;\n        long b = 0;\n        long c = 1;\n        long d = 0;\n      \
    \  for (long i = 3; i <= n; i++) {\n            d = a + b + c;\n            a\
    \ = b;\n            b = c;\n            c = d;\n        }\n        return d;"]
stop_tokens:
- "\n    }\n"

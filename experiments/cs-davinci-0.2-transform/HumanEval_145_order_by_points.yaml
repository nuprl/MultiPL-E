name: HumanEval_145_order_by_points
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function which sorts the given list of integers\n  \
  \  // in ascending order according to the sum of their digits.\n    // Note: if\
  \ there are several items with similar sum of their digits,\n    // order them based\
  \ on their index in original list.\n    // For example:\n    // >>> OrderByPoints((new\
  \ List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n\
  \    // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,\
  \ (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n\
  \    public static List<long> OrderByPoints(List<long> nums) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new\
  \ List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new\
  \ List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n\
  \    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,\
  \ (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,\
  \ (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new\
  \ List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,\
  \ (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,\
  \ (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new\
  \ List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,\
  \ (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new\
  \ List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,\
  \ (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,\
  \ (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,\
  \ (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,\
  \ (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,\
  \ (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new\
  \ List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,\
  \ (long)6L}))));\n    }\n\n}\n"
completions: ['        return nums.Select((x, i) => new { x, i }).OrderBy(x => x.x.ToString().Select(y
    => (int)y - 48).Sum()).ThenBy(x => x.i).Select(x => x.x).ToList();', "       \
    \ var sorted = nums.Select((x, i) => new { x, i }).OrderBy(x => SumDigits(x.x)).ThenBy(x\
    \ => x.i).Select(x => x.x).ToList();\n        return sorted;", "        // Your\
    \ code goes here\n        return nums;", '        return nums.OrderBy(x => x.ToString().Select(y
    => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x => nums.IndexOf(x)).ToList();',
  '        return nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();', '        return nums.OrderBy(x => x.ToString().Select(y
    => int.Parse(y.ToString())).Sum()).ThenBy(x => nums.IndexOf(x)).ToList();', " \
    \       // Your code goes here\n        return nums;", '        return nums.OrderBy(x
    => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x => nums.IndexOf(x)).ToList();',
  '        return nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();', "        // TODO: Implement this function\n  \
    \      return nums;", "        // Your code here\n        return nums;", "   \
    \     // Write your code here\n        return nums;", "        // Write your code\
    \ here\n        return nums;", '        return nums.OrderBy(x => x.ToString().Select(y
    => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x => nums.IndexOf(x)).ToList();',
  "        // TODO: Implement this function\n        return null;", "        // TODO:\
    \ Implement this function\n        return null;", '        return nums.OrderBy(x
    => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x => nums.IndexOf(x)).ToList();',
  "        // TODO: Implement this function\n        return null;", "        List<long>\
    \ result = new List<long>();\n        List<long> temp = new List<long>();\n  \
    \      List<long> temp2 = new List<long>();\n        List<long> temp3 = new List<long>();\n\
    \        List<long> temp4 = new List<long>();\n        List<long> temp5 = new\
    \ List<long>();\n        List<long> temp6 = new List<long>();\n        List<long>\
    \ temp7 = new List<long>();\n        List<long> temp8 = new List<long>();\n  \
    \      List<long> temp9 = new List<long>();\n        List<long> temp10 = new List<long>();\n\
    \        List<long> temp11 = new List<long>();\n        List<long> temp12 = new\
    \ List<long>();\n        List<long> temp13 = new List<long>();\n        List<long>\
    \ temp14 = new List<long>();\n        List<long> temp15 = new List<long>();\n\
    \        List<long> temp16 = new List<long>();\n        List<long> temp17 = new\
    \ List<long>();\n        List<long> temp18 = new List<long>();\n        List<long>\
    \ temp19 = new List<long>();\n        List<long> temp20 = new List<long>();\n\
    \        List<long> temp21 = new List<long>();\n        List<long> temp22 = new\
    \ List<long>();\n        List<long> temp23 = new List<long>();\n        List<long>\
    \ temp24 = new List<long>();\n        List<long> temp25 = new List<long>();\n\
    \        List<long> temp26 = new List<long>();\n        List<long> temp27 = new\
    \ List<long>();\n        List<long> temp28 = new List<long>();\n        List<long>\
    \ temp29 = new List<long>();\n        List<long> temp30 = new List<long>();\n\
    \        List<long> temp31 = new List<long>();\n        List<long> temp32 = new\
    \ List<long>();\n        List<long> temp33 = new List<long>();\n        List<",
  "        return nums.OrderBy(n => n.ToString().Select(c => c - '0').Sum()).ThenBy(n\
    \ => nums.IndexOf(n)).ToList();"]
stop_tokens:
- "\n    }\n"

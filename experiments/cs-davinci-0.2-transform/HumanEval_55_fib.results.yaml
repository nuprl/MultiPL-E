language: cs
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        long c = 1;\n     \
    \   for (long i = 2; i <= n; i++) {\n            c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return c;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        for (long i = 0L; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 1; i\
    \ < n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long a = 0;\n        long b = 1;\n       \
    \ for (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long a = 0;\n        long b = 1;\n       \
    \ for (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (int i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        for (long i = 0L; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        long a = 0;\n        long b = 1;\n       \
    \ for (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long a = 0;\n        long b = 1;\n       \
    \ for (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        long a = 0;\n        long b = 1;\n   \
    \     for (long i = 2; i <= n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long a = 0;\n        long b = 1;\n       \
    \ for (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long a = 0;\n        long b = 1;\n       \
    \ for (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        var a = BigInteger.Zero;\n        var b = BigInteger.One;\n \
    \       for (var i = 2; i <= n; i++) {\n            var c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return (long)b;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return 1;\n        }\n        long a = 1;\n        long b = 1;\n        for\
    \ (long i = 2; i < n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return 1;\n        }\n        long a = 1;\n        long b = 1;\n        for\
    \ (long i = 2; i < n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        long a = 0;\n        long b = 1;\n   \
    \     for (long i = 2; i <= n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (int i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        for (long i = 0L; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        for (long i = 0L; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        for (long i = 0L; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        long a = 0;\n        long b = 1;\n   \
    \     for (long i = 2; i <= n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0L;\n        long\
    \ b = 1L;\n        while (n > 0L) {\n            long tmp = a;\n            a\
    \ = b;\n            b = tmp + b;\n            n -= 1L;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 0; i < n - 1; i++) {\n            long c = a + b;\n            a =\
    \ b;\n            b = c;\n        }\n        return b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return 1;\n        }\n        long a = 1;\n        long b = 1;\n        for\
    \ (long i = 2; i < n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long a = 0;\n        long b = 1;\n       \
    \ for (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return b;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793216

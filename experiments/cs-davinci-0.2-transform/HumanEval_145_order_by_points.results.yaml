language: cs
name: HumanEval_145_order_by_points
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.Select((x, i) => new { x, i }).OrderBy(x => x.x.ToString().Select(y => (int)y
    - 48).Sum()).ThenBy(x => x.i).Select(x => x.x).ToList();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e530c6076aa4bb18455bced768cac27>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e530c6076aa4bb18455bced768cac27>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var sorted
    = nums.Select((x, i) => new { x, i }).OrderBy(x => SumDigits(x.x)).ThenBy(x =>
    x.i).Select(x => x.x).ToList();\n        return sorted;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7_niqtem.cs(19,71): error CS0103: The name ''SumDigits'' does not exist
    in the current context

    '
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Your
    code goes here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Your
    code goes here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Your
    code here\n        return nums;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5ca3112ce56d4d16b6c8a6af7f828cc6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5ca3112ce56d4d16b6c8a6af7f828cc6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        List<long>
    result = new List<long>();\n        List<long> temp = new List<long>();\n        List<long>
    temp2 = new List<long>();\n        List<long> temp3 = new List<long>();\n        List<long>
    temp4 = new List<long>();\n        List<long> temp5 = new List<long>();\n        List<long>
    temp6 = new List<long>();\n        List<long> temp7 = new List<long>();\n        List<long>
    temp8 = new List<long>();\n        List<long> temp9 = new List<long>();\n        List<long>
    temp10 = new List<long>();\n        List<long> temp11 = new List<long>();\n        List<long>
    temp12 = new List<long>();\n        List<long> temp13 = new List<long>();\n        List<long>
    temp14 = new List<long>();\n        List<long> temp15 = new List<long>();\n        List<long>
    temp16 = new List<long>();\n        List<long> temp17 = new List<long>();\n        List<long>
    temp18 = new List<long>();\n        List<long> temp19 = new List<long>();\n        List<long>
    temp20 = new List<long>();\n        List<long> temp21 = new List<long>();\n        List<long>
    temp22 = new List<long>();\n        List<long> temp23 = new List<long>();\n        List<long>
    temp24 = new List<long>();\n        List<long> temp25 = new List<long>();\n        List<long>
    temp26 = new List<long>();\n        List<long> temp27 = new List<long>();\n        List<long>
    temp28 = new List<long>();\n        List<long> temp29 = new List<long>();\n        List<long>
    temp30 = new List<long>();\n        List<long> temp31 = new List<long>();\n        List<long>
    temp32 = new List<long>();\n        List<long> temp33 = new List<long>();\n        List<\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5kxb6jb0.cs(53,14): error CS1525: Invalid expression term ''}''

    /tmp/tmp5kxb6jb0.cs(53,14): error CS1002: ; expected

    '
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(n => n.ToString().Select(c => c - '0').Sum()).ThenBy(n => nums.IndexOf(n)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89cabdbe54db48bea8d057846c38282e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89cabdbe54db48bea8d057846c38282e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var dict = new Dictionary<long, long>();\n        for
    (int i = 0; i < nums.Count; i++) {\n            var sum = 0L;\n            var
    num = nums[i];\n            while (num != 0) {\n                sum += num % 10;\n
    \               num /= 10;\n            }\n            dict[sum] = nums[i];\n
    \       }\n        var sorted = dict.Keys.ToList();\n        sorted.Sort();\n
    \       foreach (var key in sorted) {\n            result.Add(dict[key]);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a094500e392b4049ba95ee8772757835>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a094500e392b4049ba95ee8772757835>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var dict = new Dictionary<long, List<long>>();\n
    \       for (int i = 0; i < nums.Count; i++) {\n            var sum = SumDigits(nums[i]);\n
    \           if (!dict.ContainsKey(sum)) {\n                dict[sum] = new List<long>();\n
    \           }\n            dict[sum].Add(nums[i]);\n        }\n        var keys
    = dict.Keys.ToList();\n        keys.Sort();\n        foreach (var key in keys)
    {\n            dict[key].Sort();\n            result.AddRange(dict[key]);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsy94tkst.cs(22,23): error CS0103: The name ''SumDigits'' does not exist
    in the current context

    '
  timestamp: 1659797843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement\n        return null;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <d59e2f0166e24a1c9c3bfb39c34f7738>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <d59e2f0166e24a1c9c3bfb39c34f7738>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var dict = new Dictionary<long, List<long>>();\n
    \       foreach (var num in nums) {\n            var sum = 0L;\n            var
    n = num;\n            while (n != 0) {\n                sum += n % 10;\n                n
    /= 10;\n            }\n            if (!dict.ContainsKey(sum)) {\n                dict[sum]
    = new List<long>();\n            }\n            dict[sum].Add(num);\n        }\n
    \       var keys = dict.Keys.ToList();\n        keys.Sort();\n        foreach
    (var key in keys) {\n            result.AddRange(dict[key]);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3125927492b847a896177867c80ff9e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3125927492b847a896177867c80ff9e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var dict = new Dictionary<long, List<long>>();\n
    \       for (int i = 0; i < nums.Count; i++) {\n            var sum = GetSumOfDigits(nums[i]);\n
    \           if (!dict.ContainsKey(sum)) {\n                dict[sum] = new List<long>();\n
    \           }\n            dict[sum].Add(nums[i]);\n        }\n        var keys
    = dict.Keys.ToList();\n        keys.Sort();\n        foreach (var key in keys)
    {\n            var list = dict[key];\n            list.Sort();\n            result.AddRange(list);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6k31tdsd.cs(22,23): error CS0103: The name ''GetSumOfDigits'' does not
    exist in the current context

    '
  timestamp: 1659797843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (long)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <774a49ac062d4085a9544c7d13628f57>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <774a49ac062d4085a9544c7d13628f57>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement the function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2be8df4bead7459c9f4048bc8b6d303d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2be8df4bead7459c9f4048bc8b6d303d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => y - '0').Sum()).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Your
    code goes here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Your
    code goes here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(n => n.ToString().Select(c => c - '0').Sum()).ThenBy(n => nums.IndexOf(n)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89cabdbe54db48bea8d057846c38282e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89cabdbe54db48bea8d057846c38282e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // your
    code here\n        return null;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <67f68fd057634e89873de459c1e0b5f3>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <67f68fd057634e89873de459c1e0b5f3>:0
    \n"
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement me\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <bed7374d70f6406b95f47f54fb1fb90c>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <bed7374d70f6406b95f47f54fb1fb90c>:0
    \n"
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var sorted = nums.Select((x, i) => new { Index =
    i, Value = x })\n                         .OrderBy(x => x.Value)\n                         .ToList();\n
    \       var sums = new List<long>();\n        foreach (var item in sorted) {\n
    \           var sum = 0L;\n            var num = item.Value;\n            while
    (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n
    \           sums.Add(sum);\n        }\n        var sortedSums = sums.Select((x,
    i) => new { Index = i, Value = x })\n                             .OrderBy(x =>
    x.Value)\n                             .ToList();\n        foreach (var item in
    sortedSums) {\n            result.Add(sorted[item.Index].Value);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5a81e1a38d65450faddcbbcd521606d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5a81e1a38d65450faddcbbcd521606d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var dict = new Dictionary<long, List<long>>();\n
    \       var dict2 = new Dictionary<long, long>();\n        foreach (var num in
    nums) {\n            var sum = 0L;\n            var num2 = num;\n            while
    (num2 != 0) {\n                sum += num2 % 10;\n                num2 /= 10;\n
    \           }\n            if (!dict.ContainsKey(sum)) {\n                dict[sum]
    = new List<long>();\n            }\n            dict[sum].Add(num);\n            dict2[num]
    = sum;\n        }\n        var keys = dict.Keys.ToList();\n        keys.Sort();\n
    \       foreach (var key in keys) {\n            dict[key].Sort();\n            foreach
    (var num in dict[key]) {\n                result.Add(num);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf0e329afcc04eb6a035e1d422e2ac2d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf0e329afcc04eb6a035e1d422e2ac2d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement OrderByPoints\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2d632b288994abc938aca10ae0c41d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2d632b288994abc938aca10ae0c41d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Your
    code goes here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement your solution here\n        return null;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <c6382c549c724807a3a5164496538942>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <c6382c549c724807a3a5164496538942>:0
    \n"
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var dict = new Dictionary<long, List<long>>();\n
    \       foreach (var num in nums) {\n            var sum = 0L;\n            var
    n = num;\n            while (n != 0) {\n                sum += n % 10;\n                n
    /= 10;\n            }\n            if (!dict.ContainsKey(sum)) {\n                dict[sum]
    = new List<long>();\n            }\n            dict[sum].Add(num);\n        }\n
    \       foreach (var key in dict.Keys.OrderBy(k => k)) {\n            foreach
    (var num in dict[key]) {\n                result.Add(num);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4343a94dcb6f40db8f43f96e1faa5a9f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4343a94dcb6f40db8f43f96e1faa5a9f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <59ad0ece71ff4a098c842ba399383c10>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <59ad0ece71ff4a098c842ba399383c10>:0
    \n"
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement me\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96c461949ac64ff0af8e6408440b6fe6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96c461949ac64ff0af8e6408440b6fe6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => y - '0').Sum()).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.Select((x, i) => new { x, i })\n            .OrderBy(x => x.x.ToString().Sum(y
    => y - '0'))\n            .ThenBy(x => x.i)\n            .Select(x => x.x)\n            .ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <581f5738037c46958886771be9fd221c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <581f5738037c46958886771be9fd221c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => int.Parse(y.ToString()))).ThenBy(x =>
    nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <ec6df0e7bb894bc8b12516e71537909d>:0
    \n  at System.Linq.Enumerable.Sum[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source, System.Func`2[T,TResult] selector) [0x0002e] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x00007] in <ec6df0e7bb894bc8b12516e71537909d>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <ec6df0e7bb894bc8b12516e71537909d>:0
    \n  at Problem.Main (System.String[] args) [0x00017] in <ec6df0e7bb894bc8b12516e71537909d>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Fo"
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // your
    code here\n        return nums;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dceda5f622c147acbd81bcc546c4a49a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dceda5f622c147acbd81bcc546c4a49a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => y - '0').Sum()).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => y - '0').Sum()).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        List<long>
    result = new List<long>();\n        int[] sums = new int[nums.Count];\n        for
    (int i = 0; i < nums.Count; i++) {\n            sums[i] = SumDigits(nums[i]);\n
    \       }\n        int[] sorted = new int[nums.Count];\n        Array.Copy(sums,
    sorted, nums.Count);\n        Array.Sort(sorted);\n        for (int i = 0; i <
    nums.Count; i++) {\n            int j = Array.IndexOf(sums, sorted[i]);\n            result.Add(nums[j]);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuo0sw8h4.cs(22,23): error CS0103: The name ''SumDigits'' does not exist
    in the current context

    '
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => y - '0').Sum()).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(c => c - '0').Sum()).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cc3412943c94200bbd160fd8f861bef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cc3412943c94200bbd160fd8f861bef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <5290c3d3b94548248788350eae9c66a6>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Your
    code goes here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var points = new List<long>();\n        for (int
    i = 0; i < nums.Count; i++) {\n            points.Add(GetPoints(nums[i]));\n        }\n
    \       var sortedPoints = points.OrderBy(x => x).ToList();\n        for (int
    i = 0; i < sortedPoints.Count; i++) {\n            for (int j = 0; j < points.Count;
    j++) {\n                if (sortedPoints[i] == points[j]) {\n                    result.Add(nums[j]);\n
    \                   points[j] = -1;\n                    break;\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnx0kwehj.cs(22,24): error CS0103: The name ''GetPoints'' does not exist
    in the current context

    '
  timestamp: 1659797843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var dict = new Dictionary<long, List<long>>();\n
    \       foreach (var num in nums) {\n            var sum = 0L;\n            var
    n = num;\n            while (n != 0) {\n                sum += n % 10;\n                n
    /= 10;\n            }\n            if (!dict.ContainsKey(sum)) {\n                dict[sum]
    = new List<long>();\n            }\n            dict[sum].Add(num);\n        }\n
    \       foreach (var key in dict.Keys.OrderBy(x => x)) {\n            foreach
    (var num in dict[key]) {\n                result.Add(num);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28c23a841a39477da09ce6e4f0a1fd43>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28c23a841a39477da09ce6e4f0a1fd43>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Your
    code goes here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4815969e293d4d0e964bade7f0f704d5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4815969e293d4d0e964bade7f0f704d5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // your
    code goes here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a8608fad21d74e31a3755fd1eb44da07>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a8608fad21d74e31a3755fd1eb44da07>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797674
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Your
    code goes here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => y - '0').Sum()).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(n => n.ToString().Select(c => c - '0').Sum()).ThenBy(n => nums.IndexOf(n)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89cabdbe54db48bea8d057846c38282e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89cabdbe54db48bea8d057846c38282e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var sum = new List<long>();\n        for (int i =
    0; i < nums.Count; i++) {\n            sum.Add(SumDigits(nums[i]));\n        }\n
    \       for (int i = 0; i < nums.Count; i++) {\n            var min = sum.Min();\n
    \           var index = sum.IndexOf(min);\n            result.Add(nums[index]);\n
    \           sum.RemoveAt(index);\n            nums.RemoveAt(index);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwcex1lme.cs(22,21): error CS0103: The name ''SumDigits'' does not exist
    in the current context

    '
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        List<long>
    result = new List<long>();\n        List<long> temp = new List<long>();\n        List<long>
    temp2 = new List<long>();\n        List<long> temp3 = new List<long>();\n        List<long>
    temp4 = new List<long>();\n        List<long> temp5 = new List<long>();\n        List<long>
    temp6 = new List<long>();\n        List<long> temp7 = new List<long>();\n        List<long>
    temp8 = new List<long>();\n        List<long> temp9 = new List<long>();\n        List<long>
    temp10 = new List<long>();\n        List<long> temp11 = new List<long>();\n        List<long>
    temp12 = new List<long>();\n        List<long> temp13 = new List<long>();\n        List<long>
    temp14 = new List<long>();\n        List<long> temp15 = new List<long>();\n        List<long>
    temp16 = new List<long>();\n        List<long> temp17 = new List<long>();\n        List<long>
    temp18 = new List<long>();\n        List<long> temp19 = new List<long>();\n        List<long>
    temp20 = new List<long>();\n        List<long> temp21 = new List<long>();\n        List<long>
    temp22 = new List<long>();\n        List<long> temp23 = new List<long>();\n        List<long>
    temp24 = new List<long>();\n        List<long> temp25 = new List<long>();\n        List<long>
    temp26 = new List<long>();\n        List<long> temp27 = new List<long>();\n        List<long>
    temp28 = new List<long>();\n        List<long> temp29 = new List<long>();\n        List<long>
    temp30 = new List<long>();\n        List<long> temp31 = new List<long>();\n        List<long>
    temp32 = new List<long>();\n        List<long> temp33 = new List<long>();\n        List<\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5kxb6jb0.cs(53,14): error CS1525: Invalid expression term ''}''

    /tmp/tmp5kxb6jb0.cs(53,14): error CS1002: ; expected

    '
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement\n        return nums;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71519984ae294487bb6df0481e7b9430>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71519984ae294487bb6df0481e7b9430>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement\n        return nums;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71519984ae294487bb6df0481e7b9430>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71519984ae294487bb6df0481e7b9430>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        List<long>
    result = new List<long>();\n        List<long> temp = new List<long>();\n        List<long>
    temp2 = new List<long>();\n        List<long> temp3 = new List<long>();\n        int
    i = 0;\n        int j = 0;\n        int k = 0;\n        int l = 0;\n        int
    m = 0;\n        int n = 0;\n        int o = 0;\n        int p = 0;\n        int
    q = 0;\n        int r = 0;\n        int s = 0;\n        int t = 0;\n        int
    u = 0;\n        int v = 0;\n        int w = 0;\n        int x = 0;\n        int
    y = 0;\n        int z = 0;\n        int aa = 0;\n        int ab = 0;\n        int
    ac = 0;\n        int ad = 0;\n        int ae = 0;\n        int af = 0;\n        int
    ag = 0;\n        int ah = 0;\n        int ai = 0;\n        int aj = 0;\n        int
    ak = 0;\n        int al = 0;\n        int am = 0;\n        int an = 0;\n        int
    ao = 0;\n        int ap = 0;\n        int aq = 0;\n        int ar = 0;\n        int
    as1 = 0;\n        int at = 0;\n        int au = 0;\n        int av = 0;\n        int
    aw = 0;\n        int ax = 0;\n        int ay = 0;\n        int az = 0;\n        int
    ba = 0;\n        int bb = 0;\n        int bc = 0;\n        int bd = 0;\n        int
    be = 0;\n        int bf = 0;\n        int bg = 0;\n        int bh = 0;\n        int
    bi = 0;\n        int bj = 0;\n        int bk = 0;\n        int bl = 0;\n        int
    bm = 0;\n        int bn = 0;\n        int bo = 0;\n        int bp = 0;\n        int
    bq = 0;\n        int br = 0;\n       \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxfqxepgm.cs(23,13): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(24,13): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(25,13): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(26,13): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(27,13): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(28,13): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(29,13): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(30,13): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(31,13): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(32,13): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(33,13): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(34,13): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(35,13): warning CS0219: The variable ''u'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(36,13): warning CS0219: The variable ''v'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(37,13): warning CS0219: The variable ''w'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(38,13): warning CS0219: The variable ''x'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(39,13): warning CS0219: The variable ''y'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(40,13): warning CS0219: The variable ''z'' is assigned but
    its value is never used

    /tmp/tmpxfqxepgm.cs(41,13): warning CS0219: The variable ''aa'' is assigned but
    its value is never used

    /'
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(n => n.ToString().Select(c => c - '0').Sum()).ThenBy(n => nums.IndexOf(n)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89cabdbe54db48bea8d057846c38282e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89cabdbe54db48bea8d057846c38282e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var sorted
    = nums.Select((x, i) => new { x, i }).OrderBy(x => x.x.ToString().Sum(c => c -
    '0')).ThenBy(x => x.i).Select(x => x.x).ToList();\n        return sorted;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7de2caf972046a7b78619b0f3ddf39e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7de2caf972046a7b78619b0f3ddf39e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(c => c - '0').Sum()).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cc3412943c94200bbd160fd8f861bef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cc3412943c94200bbd160fd8f861bef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Your
    code goes here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <51ac5db4a5f3454cbd31d885ba0c9627>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement\n        return null;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <d59e2f0166e24a1c9c3bfb39c34f7738>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <d59e2f0166e24a1c9c3bfb39c34f7738>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ca486e029ea47c69ad89f57c6b4ef05>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ca486e029ea47c69ad89f57c6b4ef05>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(c => c - '0').Sum()).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cc3412943c94200bbd160fd8f861bef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cc3412943c94200bbd160fd8f861bef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var dict = new Dictionary<long, long>();\n        foreach
    (var num in nums) {\n            var sum = 0L;\n            var n = num;\n            while
    (n != 0) {\n                sum += n % 10;\n                n /= 10;\n            }\n
    \           dict[num] = sum;\n        }\n        var sorted = dict.OrderBy(x =>
    x.Value).ThenBy(x => x.Key);\n        foreach (var item in sorted) {\n            result.Add(item.Key);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34609a4eda564cfb95443b1bdd409406>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34609a4eda564cfb95443b1bdd409406>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement me\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <bed7374d70f6406b95f47f54fb1fb90c>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <bed7374d70f6406b95f47f54fb1fb90c>:0
    \n"
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var dict
    = new Dictionary<long, List<long>>();\n        for (int i = 0; i < nums.Count;
    i++) {\n            long sum = 0;\n            foreach (var digit in nums[i].ToString())
    {\n                sum += int.Parse(digit.ToString());\n            }\n            if
    (!dict.ContainsKey(sum)) {\n                dict[sum] = new List<long>();\n            }\n
    \           dict[sum].Add(nums[i]);\n        }\n        var result = new List<long>();\n
    \       foreach (var key in dict.Keys.OrderBy(x => x)) {\n            result.AddRange(dict[key]);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.OrderByPoints (System.Collections.Generic.List`1[T] nums) [0x0003e]
    in <c0b9a271bdcd459a8228a9833226f9be>:0 \n  at Problem.Main (System.String[] args)
    [0x00017] in <c0b9a271bdcd459a8228a9833226f9be>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.FormatException: Input string was not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException
    (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.OrderByPoints (System.Collections.Generic.List`1[T] nums) [0x0003e]
    in <c0b9a271bdcd459a8228a9833226f9be>:0 \n  at Problem.Main (System.String[] args)
    [0x00017] in <c0b9a271bdcd459a8228a9833226f9be>:0 \n"
  stdout: ''
  timestamp: 1659797843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <280394f4cf094747b60ea6f675fec309>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <280394f4cf094747b60ea6f675fec309>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.Select((num, index) => new { num, index })\n            .OrderBy(x => x.num.ToString().Sum(c
    => c - '0'))\n            .ThenBy(x => x.index)\n            .Select(x => x.num)\n
    \           .ToList();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5c7b84c654e41269a22c8a1004f458b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5c7b84c654e41269a22c8a1004f458b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var result
    = new List<long>();\n        var dict = new Dictionary<long, long>();\n        foreach
    (var num in nums) {\n            var sum = 0L;\n            var n = num;\n            while
    (n != 0) {\n                sum += n % 10;\n                n /= 10;\n            }\n
    \           if (!dict.ContainsKey(sum)) {\n                dict[sum] = num;\n
    \           } else {\n                dict[sum] = Math.Min(dict[sum], num);\n
    \           }\n        }\n        var keys = dict.Keys.ToList();\n        keys.Sort();\n
    \       foreach (var key in keys) {\n            result.Add(dict[key]);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <84199cda6c194b0994390bdc24b546cd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <84199cda6c194b0994390bdc24b546cd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797844
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        var dict
    = new Dictionary<long, List<long>>();\n        for (int i = 0; i < nums.Count;
    i++) {\n            var sum = nums[i].ToString().Select(x => long.Parse(x.ToString())).Sum();\n
    \           if (!dict.ContainsKey(sum)) {\n                dict[sum] = new List<long>();\n
    \           }\n            dict[sum].Add(nums[i]);\n        }\n        var result
    = new List<long>();\n        foreach (var item in dict.OrderBy(x => x.Key)) {\n
    \           result.AddRange(item.Value.OrderBy(x => x));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Char x) [0x00007] in <b81ac9e518314382b789512043be1190>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00025] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.OrderByPoints (System.Collections.Generic.List`1[T] nums) [0x00040]
    in <b81ac9e518314382b789512043be1190>:0 \n  at Problem.Main (System.String[] args)
    [0x00017] in <b81ac9e518314382b789512043be1190>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.FormatException: Input string was not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException
    (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int64.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Char x) [0x00007] in <b81ac9e518314382b789512043be1190>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00025] in <e540098dd111461e91"
  stdout: ''
  timestamp: 1659797844
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (long)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <774a49ac062d4085a9544c7d13628f57>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <774a49ac062d4085a9544c7d13628f57>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00032] in <3125c3021e634188bcc3c9019ba77877>:0
    \n"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => int.Parse(y.ToString())).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_2 (System.Char y) [0x00007] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.Sum
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00024] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem+<>c.<OrderByPoints>b__0_0 (System.Int64 x) [0x0002b] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1[TElement].ToList () [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.OrderByPoints
    (System.Collections.Generic.List`1[T] nums) [0x00049] in <9d9d7ac8cd4c42d2bbcad210dd92006e>:0
    \n  at Problem.Main (System.String[] args) [0x0"
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // your
    code here\n        return nums;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dceda5f622c147acbd81bcc546c4a49a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dceda5f622c147acbd81bcc546c4a49a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(y => y - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a093f2e94304cd492c0a35f6c27ecf1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0649986493b54a26b18a76042226e626>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => y - '0').Sum()).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ec574b3daeb4405a531b2f03a5203bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797673
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Select(y => (int)Char.GetNumericValue(y)).Sum()).ThenBy(x
    => nums.IndexOf(x)).ToList();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aad7428ba2472499dac6e5ed4adae7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        return
    nums.OrderBy(x => x.ToString().Sum(c => c - '0')).ThenBy(x => nums.IndexOf(x)).ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new
    List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L,
    (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L,
    (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new
    List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L,
    (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L,
    (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L,
    (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new
    List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L,
    (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L,
    (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L,
    (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L,
    (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L,
    (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new
    List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L,
    (long)6L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94cbfd91d57c496992e4e7f5ab854242>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // Write
    your code here\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e2b007515fa44779eab3982cd60b727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function which sorts the given list of integers\n    //
    in ascending order according to the sum of their digits.\n    // Note: if there
    are several items with similar sum of their digits,\n    // order them based on
    their index in original list.\n    // For example:\n    // >>> OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n
    \   // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L,
    (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n
    \   public static List<long> OrderByPoints(List<long> nums) {\n        // TODO:
    Implement this function\n        return nums;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L,
    (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L,
    (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L,
    (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L,
    (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L,
    (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L,
    (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new
    List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L,
    (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L,
    (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L,
    (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L,
    (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n
    \   Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L,
    (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d011fb48a24f6d9541a5f72cd2f697>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659797672

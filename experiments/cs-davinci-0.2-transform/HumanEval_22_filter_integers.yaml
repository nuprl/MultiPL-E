name: HumanEval_22_filter_integers
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Filter given list of any python values only for integers\n \
  \   // >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,\
  \ (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new\
  \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
  \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static\
  \ List<long> FilterIntegers(List<object> values) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new\
  \ List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new\
  \ List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new\
  \ List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new\
  \ List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new\
  \ long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ v in values) {\n            if (v is long) {\n                result.Add((long)v);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        foreach (var value\
    \ in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

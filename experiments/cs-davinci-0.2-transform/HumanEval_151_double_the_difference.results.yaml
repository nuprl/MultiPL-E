language: cs
name: HumanEval_151_double_the_difference
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)f * (long)f;\n            }\n        }\n\
    \        return sum * 2;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a2d7dc829e614f969902326a23c3e817>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a2d7dc829e614f969902326a23c3e817>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && (int)item == item)\
    \ {\n                sum += (long)item * (long)item;\n            }\n        }\n\
    \        return sum * 2;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f6c202b2d7b64c9c9091ec7670bb2405>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f6c202b2d7b64c9c9091ec7670bb2405>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1 && num > 0) {\n \
    \               sum += (long)Math.Pow(num, 2);\n            }\n        }\n   \
    \     return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x % 2 == 1) {\n                sum\
    \ += (long)x * (long)x;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x % 2 == 1) {\n                sum\
    \ += (long)x * (long)x;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x % 2 == 1) {\n                sum\
    \ += (long)x * (long)x;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float item in lst) {\n            if (item > 0 && item % 1 == 0 &&\
    \ item % 2 == 1) {\n                sum += (long)item * (long)item;\n        \
    \    }\n        }\n        return 2 * sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6af9b40fa54144bd8f48078d1ed16c38>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6af9b40fa54144bd8f48078d1ed16c38>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1 && num > 0) {\n \
    \               sum += (long)num * (long)num;\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && (long)f == f) {\n     \
    \           long i = (long)f;\n                if (i % 2 == 1) {\n           \
    \         sum += i * i;\n                }\n            }\n        }\n       \
    \ return sum * 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7a389565f5b471d9a5d8e209904c160>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7a389565f5b471d9a5d8e209904c160>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(num, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ for (int i = 0; i < lst.Count; i++) {\n            if (lst[i] % 2 == 1) {\n\
    \                sum += (long)lst[i] * (long)lst[i];\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1 && num > 0) {\n \
    \               sum += (long)num * (long)num;\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x % 2 == 1) {\n                sum\
    \ += (long)Math.Pow(x, 2);\n            }\n        }\n        return sum;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1 && item > 0) {\n\
    \                sum += (long)item * (long)item;\n            }\n        }\n \
    \       return sum;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)f * (long)f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f == Math.Floor(f)) {\n\
    \                if (f % 2 == 1) {\n                    sum += (long)Math.Pow(f,\
    \ 2);\n                }\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)0L;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd240dc8ed9548febab85e5f15cf862f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd240dc8ed9548febab85e5f15cf862f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Insert your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a94ae86df605439290022e872bffe54e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a94ae86df605439290022e872bffe54e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)item * (long)item;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && (long)item == item)\
    \ {\n                if (item % 2 == 1) {\n                    sum += (long)item\
    \ * (long)item;\n                }\n            }\n        }\n        return sum\
    \ * 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65c107d475384b929e94f58b65b66414>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65c107d475384b929e94f58b65b66414>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(num, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(item, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)f * (long)f;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)item * (long)item;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f == (long)f) {\n     \
    \           long l = (long)f;\n                if (l % 2 == 1) {\n           \
    \         sum += l * l;\n                }\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float n in lst) {\n            if (n % 2 == 1) {\n                sum\
    \ += (long)n * (long)n;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float i in lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += (long)i * (long)i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)0L;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd240dc8ed9548febab85e5f15cf862f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd240dc8ed9548febab85e5f15cf862f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f == (long)f) {\n     \
    \           long l = (long)f;\n                if (l % 2 == 1) {\n           \
    \         sum += l * l;\n                }\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // your code here\n   \
    \     return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4796934873f942f1937a36dfa6a91cc5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4796934873f942f1937a36dfa6a91cc5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)f * (long)f;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)f * (long)f;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)0L;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd240dc8ed9548febab85e5f15cf862f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd240dc8ed9548febab85e5f15cf862f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)Math.Pow(item, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)item * (long)item;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 != 0) {\n            \
    \    sum += (long)Math.Pow(item, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4faebd02bc8647239626191382b79b94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4faebd02bc8647239626191382b79b94>:0 \n"
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f < 0) {\n                continue;\n\
    \            }\n            if (f != (long)f) {\n                continue;\n \
    \           }\n            if (((long)f) % 2 == 0) {\n                continue;\n\
    \            }\n            sum += (long)f * (long)f;\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Write your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4174ed9f09a04cb0b33b3444d70c440a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4174ed9f09a04cb0b33b3444d70c440a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float i in lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += (long)i * (long)i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x % 2 == 1) {\n                sum\
    \ += (long)x * (long)x;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2\
    \ == 1) {\n                result += (long)f * (long)f;\n            }\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)Math.Pow(f, 2);\n            }\n        }\n        return sum;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Where(x => x\
    \ % 2 == 1 && x >= 0).Sum(x => (long)x * (long)x);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)Math.Pow(f, 2);\n            }\n        }\n        return sum;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)f * (long)f;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1 && item > 0) {\n\
    \                sum += (long)item * (long)item;\n            }\n        }\n \
    \       return sum;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (long)num * (long)num;\n            }\n\
    \        }\n        return sum * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <992b29bcf8b24dc1830c6abfa4013b0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <992b29bcf8b24dc1830c6abfa4013b0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)item * (long)item;\n            }\n\
    \        }\n        return sum * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0cc8343903a43c1b78c08f4e4cc57c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0cc8343903a43c1b78c08f4e4cc57c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float i in lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += (long)i * (long)i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)Math.Pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x == Math.Floor(x)) {\n\
    \                if (x % 2 == 1) {\n                    sum += (long)x * (long)x;\n\
    \                }\n            }\n        }\n        return 2 * sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <73d925fc619449ad9f9d7d1b774eeb60>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <73d925fc619449ad9f9d7d1b774eeb60>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)item * (long)item;\n            }\n\
    \        }\n        return sum * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0cc8343903a43c1b78c08f4e4cc57c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0cc8343903a43c1b78c08f4e4cc57c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float i in lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += (long)i * (long)i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)f * (long)f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0) {\n                if\
    \ (num % 2 == 1) {\n                    sum += (long)num * (long)num;\n      \
    \          }\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x % 2 == 1) {\n                sum\
    \ += (long)x * (long)x;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (float item in lst) {\n            if (item > 0 && item % 2 == 1)\
    \ {\n                result += (long)Math.Pow(item, 2);\n            }\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)Math.Pow(item, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)f * (long)f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float i in lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += (long)i * (long)i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float n in lst) {\n            if (n % 2 == 1 && n > 0) {\n       \
    \         sum += (long)n * (long)n;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)f * (long)f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(item, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Your code goes here.\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <de9d981f52b347f2add53f7cf80723bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <de9d981f52b347f2add53f7cf80723bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1 && item > 0) {\n\
    \                sum += (long)Math.Pow(item, 2);\n            }\n        }\n \
    \       return sum;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float item in lst) {\n            if (item > 0 && item % 1 == 0 &&\
    \ item % 2 == 1) {\n                sum += (long)Math.Pow(item, 2);\n        \
    \    }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)Math.Pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)Math.Pow(item, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && (long)x == x) {\n     \
    \           if (x % 2 == 1) {\n                    sum += (long)x * (long)x;\n\
    \                }\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)item * (long)item;\n            }\n\
    \        }\n        return sum * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0cc8343903a43c1b78c08f4e4cc57c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0cc8343903a43c1b78c08f4e4cc57c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)Math.Pow(x, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float item in lst) {\n            if (item > 0 && item % 1 == 0 &&\
    \ item % 2 == 1) {\n                sum += (long)Math.Pow(item, 2);\n        \
    \    }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float i in lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += (long)i * (long)i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Insert your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a94ae86df605439290022e872bffe54e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a94ae86df605439290022e872bffe54e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Your code goes here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b27a73dcb7134b1980e355319315651f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b27a73dcb7134b1980e355319315651f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item < 0) {\n                continue;\n\
    \            }\n            if (item % 1 != 0) {\n                continue;\n\
    \            }\n            if (item % 2 == 0) {\n                continue;\n\
    \            }\n            sum += (long)Math.Pow(item, 2);\n        }\n     \
    \   return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)f * (long)f;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (long)num * (long)num;\n            }\n\
    \        }\n        return sum * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <992b29bcf8b24dc1830c6abfa4013b0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <992b29bcf8b24dc1830c6abfa4013b0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)f * (long)f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(item, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float i in lst) {\n            if (i % 2 == 1 && i > 0) {\n       \
    \         sum += (long)i * (long)i;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <905e0154608a4ecea5966ac3f82fce8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)0L;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd240dc8ed9548febab85e5f15cf862f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd240dc8ed9548febab85e5f15cf862f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(item, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)Math.Pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)Math.Pow(num, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(num, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)lst.Where(x\
    \ => x % 2 == 1).Select(x => x * x).Sum();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Where(x => x\
    \ % 2 == 1).Select(x => x * x).Sum();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq8ymu9mb.cs(21,16): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(item, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)lst.Where(x\
    \ => x > 0 && x % 1 == 0 && x % 2 == 1).Select(x => x * x).Sum();\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float i in lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += (long)i * (long)i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (long)num * (long)num;\n            }\n\
    \        }\n        return sum * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <992b29bcf8b24dc1830c6abfa4013b0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <992b29bcf8b24dc1830c6abfa4013b0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 != 0 && num > 0) {\n \
    \               sum += (long)Math.Pow(num, 2);\n            }\n        }\n   \
    \     return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return lst.Where(x => x\
    \ > 0 && x % 1 == 0 && x % 2 == 1).Sum(x => (long)Math.Pow(x, 2));\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)f * (long)f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1 && item > 0) {\n\
    \                sum += (long)item * (long)item;\n            }\n        }\n \
    \       return sum;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1 && item > 0) {\n\
    \                sum += (long)item * (long)item;\n            }\n        }\n \
    \       return sum;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1 && num > 0) {\n \
    \               sum += (long)num * (long)num;\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)f * (long)f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if ((x % 2) == 1) {\n              \
    \  sum += (long)(x * x);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)f * (long)f;\n            }\n        }\n\
    \        return sum * 2;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a2d7dc829e614f969902326a23c3e817>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a2d7dc829e614f969902326a23c3e817>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float i in lst) {\n            if (i > 0 && i % 1 == 0 && i % 2 ==\
    \ 1) {\n                sum += (long)Math.Pow(i, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long total = 0;\n     \
    \   foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                total += (long)Math.Pow(num, 2);\n            }\n\
    \        }\n        return total;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x % 2 == 1) {\n                sum\
    \ += (long)x * (long)x;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)Math.Pow(x, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)item * (long)item;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float item in lst) {\n            if (item % 2 == 1) {\n          \
    \      sum += (long)Math.Pow(item, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)lst.Where(x\
    \ => x > 0 && x % 1 == 0).Where(x => x % 2 == 1).Select(x => x * x).Sum();\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Your code goes here\n\
    \        long sum = 0;\n        foreach (float num in lst) {\n            if (num\
    \ % 2 == 1 && num > 0) {\n                sum += (long)Math.Pow(num, 2);\n   \
    \         }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)Math.Pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 &&\
    \ item % 2 == 1) {\n                result += (long)item * (long)item;\n     \
    \       }\n        }\n        return result * 2;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16466b4df05d42e986147ed037c3e4ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16466b4df05d42e986147ed037c3e4ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float item in lst) {\n            if (item > 0 && (int)item == item)\
    \ {\n                if (item % 2 == 1) {\n                    sum += (long)item\
    \ * (long)item;\n                }\n            }\n        }\n        return sum\
    \ * 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <240b5295d7574e5497763e3e84874e00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <240b5295d7574e5497763e3e84874e00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)item * (long)item;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)f * (long)f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            long n = (long)f;\n            if (n\
    \ > 0 && n % 2 == 1) {\n                sum += n * n;\n            }\n       \
    \ }\n        return sum;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        return (long)lst.Where(x\
    \ => x % 2 == 1 && x >= 0).Select(x => x * x).Sum();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new List<float>()))\
    \ == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1 && num >= 0) {\n\
    \                sum += (long)Math.Pow(num, 2);\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1 && num > 0) {\n \
    \               sum += (long)num * (long)num;\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(num, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(item, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float i in lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += (long)i * (long)i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum * 2;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <923b9105041045f3993f037ed194b2a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <923b9105041045f3993f037ed194b2a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(num, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long total = 0;\n     \
    \   foreach (float num in lst) {\n            if (num % 2 == 1 && num >= 0) {\n\
    \                total += (long)Math.Pow(num, 2);\n            }\n        }\n\
    \        return total;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)item * (long)item;\n            }\n\
    \        }\n        return sum * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0cc8343903a43c1b78c08f4e4cc57c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0cc8343903a43c1b78c08f4e4cc57c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793021
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Your code goes here\n\
    \        long sum = 0;\n        foreach (float item in lst)\n        {\n     \
    \       if (item > 0 && item % 2 == 1)\n            {\n                sum +=\
    \ (long)Math.Pow(item, 2);\n            }\n        }\n        return sum * 2;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bb719be931c42a782134cd5b249c64a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bb719be931c42a782134cd5b249c64a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 2 == 1) {\n\
    \                sum += (long)Math.Pow(item, 2);\n            }\n        }\n \
    \       return sum;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x % 2 == 1) {\n                sum\
    \ += (long)x * (long)x;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)Math.Pow(num, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f == (long)f) {\n     \
    \           if (f % 2 == 1) {\n                    sum += (long)f * (long)f;\n\
    \                }\n            }\n        }\n        return sum * 2;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b604ba742dfa431897e0962352bae7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b604ba742dfa431897e0962352bae7b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)item * (long)item;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ for (int i = 0; i < lst.Count; i++) {\n            if (lst[i] % 2 == 1) {\n\
    \                sum += (long)lst[i] * (long)lst[i];\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)Math.Pow(item, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793120
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long result = 0;\n    \
    \    foreach (float x in lst) {\n            if (x > 0) {\n                if\
    \ (x % 2 == 1) {\n                    result += (long)x * (long)x;\n         \
    \       }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var i in lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += (long)i * (long)i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(item, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 2 == 1) {\n\
    \                sum += (long)item * (long)item;\n            }\n        }\n \
    \       return sum;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        // Your code goes here\n\
    \        long sum = 0;\n        foreach (float num in lst) {\n            if (num\
    \ % 2 == 1) {\n                sum += (long)num * (long)num;\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 2 == 1) {\n\
    \                sum += (long)Math.Pow(item, 2);\n            }\n        }\n \
    \       return sum;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item % 1 == 0 && item\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(item, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float v in lst) {\n            if (v > 0 && v % 1 == 0 && v % 2 ==\
    \ 1) {\n                sum += (long)v * (long)v;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += (long)f * (long)f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0) {\n                if\
    \ (item % 2 == 1) {\n                    sum += (long)Math.Pow(item, 2);\n   \
    \             }\n            }\n        }\n        return sum * 2;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9616f317cf2f49f284b69c4620d1baba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9616f317cf2f49f284b69c4620d1baba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793121
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 1) {\n            \
    \    sum += (long)item * (long)item;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (long)Math.Pow(num, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n   \
    \ Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f, (float)4.0f})))\
    \ == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.1f,\
    \ (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float num in lst) {\n            if (num > 0 && num % 1 == 0 && num\
    \ % 2 == 1) {\n                sum += (long)num * (long)num;\n            }\n\
    \        }\n        return sum * 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)5.0f,\
    \ (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-10.0f, (float)-20.0f, (float)-30.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-1.0f,\
    \ (float)-2.0f, (float)8.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.2f, (float)3.0f, (float)5.0f}))) == (34L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f}))) == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <992b29bcf8b24dc1830c6abfa4013b0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <992b29bcf8b24dc1830c6abfa4013b0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793019
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float x in lst) {\n            if (x > 0 && x % 1 == 0 && x % 2 ==\
    \ 1) {\n                sum += (long)x * (long)x;\n            }\n        }\n\
    \        return sum * 2;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <923b9105041045f3993f037ed194b2a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <923b9105041045f3993f037ed194b2a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (float f in lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += (long)f * (long)f;\n            }\n        }\n\
    \        return sum * 2;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a2d7dc829e614f969902326a23c3e817>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a2d7dc829e614f969902326a23c3e817>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793020
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L,\
    \ (long)3L, (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new\
    \ List<float>(new long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n   \
    \ // >>> DoubleTheDifference((new List<float>(new long[]{(long)9L, (long)-2L})))\n\
    \    // (81L)\n    // >>> DoubleTheDifference((new List<float>(new long[]{(long)0L})))\n\
    \    // (0L)\n    // If the input list is empty, return 0.\n    public static\
    \ long DoubleTheDifference(List<float> lst) {\n        long sum = 0;\n       \
    \ foreach (var num in lst) {\n            if (num % 2 == 1) {\n              \
    \  sum += (long)num * (long)num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
    \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
    \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
    \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
    \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
    \ == (165L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793121

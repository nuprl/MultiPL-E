language: cs
name: HumanEval_17_parse_music
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new List<long>();\n        var beat = 0L;\n        var notes\
    \ = music_string.Split(new char[] { ' ' });\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beat += 4;\n          \
    \  } else if (note == \"o|\") {\n                beat += 2;\n            } else\
    \ if (note == \".|\") {\n                beat += 1;\n            }\n         \
    \   beats.Add(beat);\n        }\n        var last_beat = beats[beats.Count - 1];\n\
    \        for (var i = 0; i < beats.Count; i++) {\n            var current_beat\
    \ = beats[i];\n            if (i == 0) {\n                result.Add(current_beat);\n\
    \            } else {\n                var previous_beat = beats[i - 1];\n   \
    \             result.Add(current_beat - previous_beat);\n            }\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cf00ef466a7d4f1f9006817225d59d68>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cf00ef466a7d4f1f9006817225d59d68>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var current_note = \"\";\n        foreach (var c in music_string) {\n\
    \            if (c == ' ') {\n                if (current_note == \"o\") {\n \
    \                   result.Add(4);\n                } else if (current_note ==\
    \ \"o|\") {\n                    result.Add(2);\n                } else if (current_note\
    \ == \".|\") {\n                    result.Add(1);\n                }\n      \
    \          current_note = \"\";\n            } else {\n                current_note\
    \ += c;\n            }\n        }\n        if (current_note == \"o\") {\n    \
    \        result.Add(4);\n        } else if (current_note == \"o|\") {\n      \
    \      result.Add(2);\n        } else if (current_note == \".|\") {\n        \
    \    result.Add(1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e1ec55859943459ebee0fedb51fe3729>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e1ec55859943459ebee0fedb51fe3729>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        // Your code goes here\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new List<long>();\n        var beat = 0L;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                beat\
    \ += 4;\n            } else if (c == '|') {\n                beats.Add(beat);\n\
    \                beat = 0;\n            } else if (c == '.') {\n             \
    \   beat += 1;\n            }\n        }\n        beats.Add(beat);\n        return\
    \ beats;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7094bf6822da4a5b8bb39e0cc52e11ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7094bf6822da4a5b8bb39e0cc52e11ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var note in music_string.Split(' ')) {\n            switch (note)\
    \ {\n                case \"o\":\n                    result.Add(4);\n       \
    \             break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5be5e1d109a44872ae65816bc9fe8c1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5be5e1d109a44872ae65816bc9fe8c1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <753ab733a30c4cc4b195f8c424f71d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <753ab733a30c4cc4b195f8c424f71d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var note in music_string.Split(' ')) {\n            if (note\
    \ == \"o\") {\n                result.Add(4);\n            } else if (note ==\
    \ \"o|\") {\n                result.Add(2);\n            } else if (note == \"\
    .|\") {\n                result.Add(1);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <918440cfb4b64213b099c4df379de4be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <918440cfb4b64213b099c4df379de4be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        // TODO: Implement this function\n        return result;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\"\
    )).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1dc8ff47eb04d468dab39e3a6dd9c34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1dc8ff47eb04d468dab39e3a6dd9c34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        // Your code goes here\n        return\
    \ new List<long>();\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <417a16b7b6aa405f83260ec89cb53c08>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <417a16b7b6aa405f83260ec89cb53c08>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    beats = 2;\n         \
    \           i++;\n                }\n                else {\n                \
    \    beats = 4;\n                }\n            }\n            else if (music_string[i]\
    \ == '.') {\n                beats = 1;\n            }\n            else if (music_string[i]\
    \ == '|') {\n                continue;\n            }\n            result.Add(beats);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e215829ae7bf40f0a3f55100ffa757c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e215829ae7bf40f0a3f55100ffa757c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   beats = beats / 2L;\n            }\n            else if (music_string[i] ==\
    \ '.') {\n                result.Add(beats);\n                beats = 0L;\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c95b24a46fd494689635668f8a22c0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c95b24a46fd494689635668f8a22c0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                result.Add(4);\n            }\n            else if\
    \ (music_string[i] == '.') {\n                result.Add(1);\n            }\n\
    \            else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                current_beat += beats[c];\n            } else {\n       \
    \         result.Add(current_beat);\n                current_beat = 0;\n     \
    \       }\n        }\n        result.Add(current_beat);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        // TODO: Implement your solution here\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e7eda941f71488d8cad3c5504e298e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e7eda941f71488d8cad3c5504e298e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        foreach (char c in music_string) {\n       \
    \     if (c == 'o') {\n                result.Add(4);\n                beats +=\
    \ 4;\n            } else if (c == '|') {\n                result.Add(beats);\n\
    \                beats = 0;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0d9cddfc5e849ce96ac7f5289ba0216>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0d9cddfc5e849ce96ac7f5289ba0216>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>() {\n            {'o', 4},\n \
    \           {'|', 2},\n            {'.', 1}\n        };\n        var last_char\
    \ = ' ';\n        var current_beat = 0L;\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                if (last_char != ' ') {\n  \
    \                  result.Add(current_beat);\n                    current_beat\
    \ = 0;\n                }\n            } else {\n                current_beat\
    \ += beats[c];\n            }\n            last_char = c;\n        }\n       \
    \ if (current_beat > 0) {\n            result.Add(current_beat);\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eda107ef9d35420baaef0ea1c2bfa30e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eda107ef9d35420baaef0ea1c2bfa30e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var current_note = 0L;\n        foreach (var c in music_string) {\n \
    \           if (c == 'o') {\n                current_note += 4;\n            }\
    \ else if (c == '|') {\n                result.Add(current_note);\n          \
    \      current_note = 0;\n            } else if (c == '.') {\n               \
    \ current_note += 1;\n            }\n        }\n        result.Add(current_note);\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1257a666b1a74fabb8bca92b374c2303>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1257a666b1a74fabb8bca92b374c2303>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long counter = 0;\n        foreach (char c in music_string) {\n     \
    \       if (c == 'o') {\n                result.Add(4);\n            } else if\
    \ (c == '|') {\n                result[counter] = result[counter] / 2;\n     \
    \       } else if (c == '.') {\n                counter++;\n            }\n  \
    \      }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy8_kpebf.cs(25,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpy8_kpebf.cs(25,42): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new List<char>();\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                if (beats.Count > 0) {\n   \
    \                 result.Add(beats.Count);\n                    beats.Clear();\n\
    \                }\n            } else {\n                beats.Add(c);\n    \
    \        }\n        }\n        if (beats.Count > 0) {\n            result.Add(beats.Count);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21a2fbaf342a443e8245ab6e05aaada1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <21a2fbaf342a443e8245ab6e05aaada1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var current_note = new StringBuilder();\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(current_note.ToString()\
    \ == \"o\" ? 4 : 2);\n                current_note.Clear();\n            } else\
    \ {\n                current_note.Append(c);\n            }\n        }\n     \
    \   result.Add(current_note.ToString() == \"o\" ? 4 : 2);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48cf892e18964dd9ae99cab2fb19ae1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48cf892e18964dd9ae99cab2fb19ae1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> ret = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    ret.Add(2);\n        \
    \            beats += 2;\n                    i++;\n                }\n      \
    \          else {\n                    ret.Add(4);\n                    beats\
    \ += 4;\n                }\n            }\n            else if (music_string[i]\
    \ == '.') {\n                ret.Add(1);\n                beats += 1;\n      \
    \      }\n            else if (music_string[i] == '|') {\n                ret.Add(0);\n\
    \            }\n        }\n        return ret;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <15b1fac2406d4db89fe8fcb48fc61845>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <15b1fac2406d4db89fe8fcb48fc61845>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        foreach (var note in music_string.Split(' ')) {\n            if (note\
    \ == \"o\") {\n                result.Add(4);\n            } else if (note ==\
    \ \"o|\") {\n                result.Add(2);\n            } else if (note == \"\
    .|\") {\n                result.Add(1);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cf5de3dc3c8545958d52da5d868b7aec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cf5de3dc3c8545958d52da5d868b7aec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var note_lengths = new Dictionary<char, long>() {\n            {'o',\
    \ 4L},\n            {'|', 2L},\n            {'.', 1L}\n        };\n        var\
    \ note_length = 0L;\n        foreach (var c in music_string) {\n            if\
    \ (c == ' ') {\n                result.Add(note_length);\n                note_length\
    \ = 0L;\n            } else {\n                note_length += note_lengths[c];\n\
    \            }\n        }\n        result.Add(note_length);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9b9422d5c75b4561ac97d5f06c1b0714>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9b9422d5c75b4561ac97d5f06c1b0714>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        // Your code goes here.\n       \
    \ return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <4139d4ae5fff41769b0f2261bc711e5f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <4139d4ae5fff41769b0f2261bc711e5f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            switch (c) {\n       \
    \         case 'o':\n                    result.Add(4);\n                    break;\n\
    \                case '|':\n                    result.Add(2);\n             \
    \       break;\n                case '.':\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <663297badbbf4bd3a2edd994a2840558>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <663297badbbf4bd3a2edd994a2840558>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4);\n            } else if (c == '|') {\n           \
    \     result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var note_length = new Dictionary<char, long>();\n        note_length['o']\
    \ = 4;\n        note_length['|'] = 2;\n        note_length['.'] = 1;\n       \
    \ var current_note = 0L;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (note_length.ContainsKey(music_string[i])) {\n           \
    \     current_note += note_length[music_string[i]];\n            } else {\n  \
    \              result.Add(current_note);\n                current_note = 0;\n\
    \            }\n        }\n        result.Add(current_note);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ac099455028e4c1687347d37ffac3e95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ac099455028e4c1687347d37ffac3e95>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var music_string_array = music_string.Split(' ');\n        foreach (var\
    \ note in music_string_array) {\n            if (note == \"o\") {\n          \
    \      result.Add(4);\n            } else if (note == \"o|\") {\n            \
    \    result.Add(2);\n            } else if (note == \".|\") {\n              \
    \  result.Add(1);\n            }\n        }\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\"\
    )).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <077267e3a6e047cfb0e1cc9bec542760>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <077267e3a6e047cfb0e1cc9bec542760>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        // Your code goes here\n        return\
    \ null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <3201633e7dd54505b5b14bc131e596c6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <3201633e7dd54505b5b14bc131e596c6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659799609
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> res = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            res.Add(4);\n            } else if (c == '|') {\n               \
    \ res[res.Count - 1] /= 2;\n            }\n        }\n        return res;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <444942af632c43068841f3cdb5c9e745>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <444942af632c43068841f3cdb5c9e745>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var s = music_string.Split(' ');\n        foreach (var c in s) {\n  \
    \          switch (c) {\n                case \"o\":\n                    result.Add(4);\n\
    \                    break;\n                case \"o|\":\n                  \
    \  result.Add(2);\n                    break;\n                case \".|\":\n\
    \                    result.Add(1);\n                    break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a01a18b5dc684e7ab6e56a3070385e66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a01a18b5dc684e7ab6e56a3070385e66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var notes = new List<long>();\n \
    \       var note_lengths = new Dictionary<char, long>();\n        note_lengths['o']\
    \ = 4;\n        note_lengths['|'] = 2;\n        note_lengths['.'] = 1;\n     \
    \   var note_length = 0L;\n        for (var i = 0; i < music_string.Length; i++)\
    \ {\n            var c = music_string[i];\n            if (note_lengths.ContainsKey(c))\
    \ {\n                note_length += note_lengths[c];\n            } else {\n \
    \               notes.Add(note_length);\n                note_length = 0;\n  \
    \          }\n        }\n        notes.Add(note_length);\n        return notes;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48f9ffe8f9d94a1d89835c62b8f9d101>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48f9ffe8f9d94a1d89835c62b8f9d101>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> res = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             res.Add(4);\n            } else if (c == '|') {\n              \
    \  res[res.Count - 1] /= 2;\n            }\n        }\n        return res;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a739389247ee4b608893bb5a7b00be06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a739389247ee4b608893bb5a7b00be06>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var note_length = new Dictionary<char, long>();\n        note_length['o']\
    \ = 4;\n        note_length['|'] = 2;\n        note_length['.'] = 1;\n       \
    \ var note_length_stack = new Stack<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                continue;\n            }\n \
    \           if (c == 'o') {\n                note_length_stack.Push(note_length[c]);\n\
    \            } else {\n                var note_length_sum = 0L;\n           \
    \     while (note_length_stack.Count > 0) {\n                    note_length_sum\
    \ += note_length_stack.Pop();\n                }\n                result.Add(note_length_sum);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <768fb88c43444888a970b0075f0cd8d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <768fb88c43444888a970b0075f0cd8d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var note = new StringBuilder();\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(GetNoteLength(note.ToString()));\n\
    \                note.Clear();\n            } else {\n                note.Append(c);\n\
    \            }\n        }\n        result.Add(GetNoteLength(note.ToString()));\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuynng2mf.cs(23,28): error CS0103: The name ''GetNoteLength'' does not
    exist in the current context

    /tmp/tmpuynng2mf.cs(29,20): error CS0103: The name ''GetNoteLength'' does not
    exist in the current context

    '
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var beats = new List<long>();\n \
    \       var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                current_beat += beats[c];\n            } else {\n       \
    \         result.Add(current_beat);\n                current_beat = 0;\n     \
    \       }\n        }\n        result.Add(current_beat);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            switch (c) {\n       \
    \         case 'o':\n                    result.Add(4);\n                    break;\n\
    \                case '|':\n                    result[result.Count - 1] /= 2;\n\
    \                    break;\n                case '.':\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e46109b44c4d4db786cad762a4bd6e47>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e46109b44c4d4db786cad762a4bd6e47>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var current_beat = 0L;\n        foreach (var c in music_string) {\n \
    \           if (c == 'o') {\n                result.Add(4 - current_beat);\n \
    \               current_beat = 0;\n            } else if (c == '|') {\n      \
    \          current_beat++;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <38e7e9b4f0db46209da4959787cde3bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <38e7e9b4f0db46209da4959787cde3bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4);\n            } else if (c == '|') {\n           \
    \     result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new List<string>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bc807a3f4f14e29b9fd1ae69d9ce7ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bc807a3f4f14e29b9fd1ae69d9ce7ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var current = 0L;\n        foreach (var c in music_string) {\n      \
    \      switch (c) {\n                case 'o':\n                    result.Add(current);\n\
    \                    current = 4L;\n                    break;\n             \
    \   case '|':\n                    current /= 2L;\n                    break;\n\
    \                case '.':\n                    break;\n                default:\n\
    \                    throw new Exception(\"Invalid character\");\n           \
    \ }\n        }\n        result.Add(current);\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb23ea3291d14067943468160a191273>:0 \n\nUnhandled Exception:\n\
    System.Exception: Invalid character\n  at Problem.ParseMusic (System.String music_string)\
    \ [0x00051] in <fb23ea3291d14067943468160a191273>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001b] in <fb23ea3291d14067943468160a191273>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.Exception: Invalid character\n  at Problem.ParseMusic (System.String\
    \ music_string) [0x00051] in <fb23ea3291d14067943468160a191273>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x0001b] in <fb23ea3291d14067943468160a191273>:0 \n"
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var current_note = 0L;\n        for (var i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                current_note\
    \ += 4;\n            } else if (music_string[i] == '|') {\n                result.Add(current_note);\n\
    \                current_note = 0;\n            }\n        }\n        result.Add(current_note);\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1c82a0ca70ae402fa98aa38a49efa359>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1c82a0ca70ae402fa98aa38a49efa359>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        // TODO: implement this function\n\
    \        return new List<long>();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaa4ff5420f54edaa71d19cb89fa7476>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaa4ff5420f54edaa71d19cb89fa7476>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var note_lengths = new Dictionary<char, long>();\n        note_lengths['o']\
    \ = 4;\n        note_lengths['|'] = 2;\n        note_lengths['.'] = 1;\n     \
    \   var note_length = 0L;\n        foreach (var c in music_string) {\n       \
    \     if (note_lengths.ContainsKey(c)) {\n                note_length += note_lengths[c];\n\
    \            } else {\n                result.Add(note_length);\n            \
    \    note_length = 0;\n            }\n        }\n        result.Add(note_length);\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <725c8744a46b4347973be52a5520e5a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <725c8744a46b4347973be52a5520e5a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var beats = new List<long>();\n \
    \       var chars = music_string.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (chars[i] == 'o') {\n                if (i + 1 < chars.Length\
    \ && chars[i + 1] == '|') {\n                    beats.Add(2);\n             \
    \       i++;\n                } else {\n                    beats.Add(4);\n  \
    \              }\n            } else if (chars[i] == '.') {\n                beats.Add(1);\n\
    \                i++;\n            }\n        }\n        return beats;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3a1b0f3a023d45278cb630361f79dfd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3a1b0f3a023d45278cb630361f79dfd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        // Your code goes here\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var notes = new List<long>();\n \
    \       var note_length = 0L;\n        foreach (var c in music_string) {\n   \
    \         switch (c) {\n                case 'o':\n                    note_length\
    \ = 4L;\n                    break;\n                case '|':\n             \
    \       notes.Add(note_length);\n                    note_length = 0L;\n     \
    \               break;\n                case '.':\n                    note_length\
    \ /= 2L;\n                    break;\n            }\n        }\n        return\
    \ notes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3f0071879954740ae077fc4f009996b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3f0071879954740ae077fc4f009996b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var beats = new List<long>();\n \
    \       var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var beats = new List<long>();\n \
    \       foreach (var note in music_string.Split(' ')) {\n            switch (note)\
    \ {\n                case \"o\":\n                    beats.Add(4);\n        \
    \            break;\n                case \"o|\":\n                    beats.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  beats.Add(1);\n                    break;\n            }\n        }\n     \
    \   return beats;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <86d5c18d581c4993b47709b137d05478>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <86d5c18d581c4993b47709b137d05478>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var res = new List<long>();\n   \
    \     var s = music_string.Split(' ');\n        foreach (var note in s) {\n  \
    \          if (note == \"o\") {\n                res.Add(4);\n            } else\
    \ if (note == \"o|\") {\n                res.Add(2);\n            } else if (note\
    \ == \".|\") {\n                res.Add(1);\n            }\n        }\n      \
    \  return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d26399f9bc0d41f699b1c0be0e7d7e54>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d26399f9bc0d41f699b1c0be0e7d7e54>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    beats = 2L;\n        \
    \            i++;\n                }\n                else {\n               \
    \     beats = 4L;\n                }\n            }\n            else if (music_string[i]\
    \ == '.') {\n                beats = 1L;\n            }\n            else {\n\
    \                beats = 0L;\n            }\n            result.Add(beats);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9ebe85f961f483aa60759452dd20bca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9ebe85f961f483aa60759452dd20bca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4);\n            } else if (c == '|') {\n           \
    \     result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var notes = new List<long>();\n \
    \       var note_lengths = new Dictionary<char, long>();\n        note_lengths['o']\
    \ = 4;\n        note_lengths['|'] = 2;\n        note_lengths['.'] = 1;\n     \
    \   var note_length = 0L;\n        foreach (var c in music_string) {\n       \
    \     if (note_lengths.ContainsKey(c)) {\n                note_length += note_lengths[c];\n\
    \            } else {\n                notes.Add(note_length);\n             \
    \   note_length = 0;\n            }\n        }\n        notes.Add(note_length);\n\
    \        return notes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <43e637dfca2d43c380239726b17f0135>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <43e637dfca2d43c380239726b17f0135>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        // TODO: Implement your solution here\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e7eda941f71488d8cad3c5504e298e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e7eda941f71488d8cad3c5504e298e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   beats = beats / 2L;\n            }\n            else if (music_string[i] ==\
    \ '.') {\n                result.Add(beats);\n                beats = 0L;\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c95b24a46fd494689635668f8a22c0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c95b24a46fd494689635668f8a22c0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   beats = 2L;\n            }\n            else if (music_string[i] == '.') {\n\
    \                beats = 1L;\n            }\n            else {\n            \
    \    continue;\n            }\n            result.Add(beats);\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28037cc83b9e4287b1ba12275a064f98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28037cc83b9e4287b1ba12275a064f98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            switch (c) {\n       \
    \         case 'o':\n                    result.Add(4);\n                    break;\n\
    \                case '|':\n                    result[result.Count - 1] /= 2;\n\
    \                    break;\n                case '.':\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e46109b44c4d4db786cad762a4bd6e47>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e46109b44c4d4db786cad762a4bd6e47>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var note = new List<char>();\n        foreach (var ch in music_string)\
    \ {\n            if (ch == ' ') {\n                if (note.Count == 0) {\n  \
    \                  continue;\n                }\n                if (note[0] ==\
    \ 'o') {\n                    result.Add(4);\n                } else if (note[0]\
    \ == '.') {\n                    result.Add(1);\n                } else {\n  \
    \                  throw new Exception(\"Invalid note\");\n                }\n\
    \                note.Clear();\n            } else if (ch == '|') {\n        \
    \        if (note.Count == 0) {\n                    throw new Exception(\"Invalid\
    \ note\");\n                }\n                if (note[0] == 'o') {\n       \
    \             result.Add(2);\n                } else if (note[0] == '.') {\n \
    \                   result.Add(1);\n                } else {\n               \
    \     throw new Exception(\"Invalid note\");\n                }\n            \
    \    note.Clear();\n            } else {\n                note.Add(ch);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be87332ec7c545799984519f006bded9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be87332ec7c545799984519f006bded9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var beats = new List<long>();\n \
    \       var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var notes = new List<long>();\n \
    \       var note = 0L;\n        foreach (var c in music_string) {\n          \
    \  if (c == 'o') {\n                note += 4;\n            } else if (c == '|')\
    \ {\n                notes.Add(note);\n                note = 0;\n           \
    \ } else if (c == '.') {\n                note += 1;\n            }\n        }\n\
    \        notes.Add(note);\n        return notes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc13a11b7fe442aaba0ff9094fbf457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdc13a11b7fe442aaba0ff9094fbf457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4);\n            } else if (c == '|') {\n           \
    \     result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> res = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                res.Add(4);\n            }\n            else if (music_string[i]\
    \ == '.') {\n                res.Add(1);\n            }\n            else if (music_string[i]\
    \ == '|') {\n                res.Add(2);\n            }\n        }\n        return\
    \ res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30f7ff9120b44c92a9f3313c4d161733>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30f7ff9120b44c92a9f3313c4d161733>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                result.Add(4);\n            }\n            else if\
    \ (music_string[i] == '.') {\n                result.Add(1);\n            }\n\
    \            else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        // Your code goes here.\n       \
    \ return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <4139d4ae5fff41769b0f2261bc711e5f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <4139d4ae5fff41769b0f2261bc711e5f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659799761
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   beats = 2L;\n            }\n            else if (music_string[i] == '.') {\n\
    \                beats = 1L;\n            }\n            else {\n            \
    \    beats = 0L;\n            }\n            result.Add(beats);\n        }\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ad0d420ffcb4dd28912243f98b8927b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ad0d420ffcb4dd28912243f98b8927b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        // TODO: Implement this function\n\
    \        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f581f26fd0d4c49bed29407e99a4556>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f581f26fd0d4c49bed29407e99a4556>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                current_beat += beats[c];\n            } else {\n       \
    \         result.Add(current_beat);\n                current_beat = 0;\n     \
    \       }\n        }\n        result.Add(current_beat);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var music = music_string.Split(' ');\n        foreach (var note in music)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <84b1f5aec6ed4cdbb7db636848c08a87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <84b1f5aec6ed4cdbb7db636848c08a87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   beats = 2L;\n            }\n            else if (music_string[i] == '.') {\n\
    \                beats = 1L;\n            }\n            else {\n            \
    \    continue;\n            }\n            result.Add(beats);\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28037cc83b9e4287b1ba12275a064f98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28037cc83b9e4287b1ba12275a064f98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   beats = 2L;\n            }\n            else if (music_string[i] == '.') {\n\
    \                beats = 1L;\n            }\n            else {\n            \
    \    beats = 0L;\n            }\n            result.Add(beats);\n        }\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ad0d420ffcb4dd28912243f98b8927b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ad0d420ffcb4dd28912243f98b8927b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   beats = 2L;\n            }\n            else if (music_string[i] == '.') {\n\
    \                beats = 1L;\n            }\n            else {\n            \
    \    continue;\n            }\n            result.Add(beats);\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28037cc83b9e4287b1ba12275a064f98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28037cc83b9e4287b1ba12275a064f98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var notes = music_string.Split('\
    \ ');\n        var beats = new List<long>();\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8e2d96745c5242bb95aa3218b2a394cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8e2d96745c5242bb95aa3218b2a394cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> res = new List<long>();\n\
    \        int count = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    res.Add(2);\n        \
    \            i++;\n                }\n                else {\n               \
    \     res.Add(4);\n                }\n            }\n            else if (music_string[i]\
    \ == '.') {\n                res.Add(1);\n                i++;\n            }\n\
    \        }\n        return res;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f317602829c41479db7636985b8bb0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f317602829c41479db7636985b8bb0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                beats.Add(4);\n            } else if (note == \"o|\") {\n   \
    \             beats.Add(2);\n            } else if (note == \".|\") {\n      \
    \          beats.Add(1);\n            }\n        }\n        return beats;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e87b64a44f4a4335b6bd91fc450e1c68>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e87b64a44f4a4335b6bd91fc450e1c68>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>() {\n            {'o', 4},\n \
    \           {'|', 2},\n            {'.', 1}\n        };\n        var current_beat\
    \ = 0L;\n        foreach (var c in music_string) {\n            if (c == ' ')\
    \ {\n                result.Add(current_beat);\n                current_beat =\
    \ 0;\n            } else {\n                current_beat += beats[c];\n      \
    \      }\n        }\n        result.Add(current_beat);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <da712dd9aa554769a2a410cf68ecb0fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <da712dd9aa554769a2a410cf68ecb0fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        // Your code goes here\n        return\
    \ null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <3201633e7dd54505b5b14bc131e596c6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <3201633e7dd54505b5b14bc131e596c6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> beats = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    beats.Add(2);\n                    i++;\n\
    \                } else {\n                    beats.Add(4);\n               \
    \ }\n            } else if (music_string[i] == '.') {\n                beats.Add(1);\n\
    \                i++;\n            }\n        }\n        return beats;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f142de26ff544144a9640609cead34c5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f142de26ff544144a9640609cead34c5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        // your code here\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad3678671db4050b55ff967c238cbe8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ad3678671db4050b55ff967c238cbe8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>() {\n            {'o', 4},\n \
    \           {'|', 2},\n            {'.', 1}\n        };\n        var note = new\
    \ StringBuilder();\n        foreach (var c in music_string) {\n            if\
    \ (c == ' ') {\n                result.Add(beats[note[0]]);\n                note.Clear();\n\
    \            } else {\n                note.Append(c);\n            }\n      \
    \  }\n        result.Add(beats[note[0]]);\n        return result;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\"\
    )).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at System.Text.StringBuilder.get_Chars (System.Int32\
    \ index) [0x00018] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic\
    \ (System.String music_string) [0x0008e] in <5ec98c74cc484fa39dd52f56b6d96c3a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <5ec98c74cc484fa39dd52f56b6d96c3a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index\
    \ was outside the bounds of the array.\n  at System.Text.StringBuilder.get_Chars\
    \ (System.Int32 index) [0x00018] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) [0x0008e] in <5ec98c74cc484fa39dd52f56b6d96c3a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <5ec98c74cc484fa39dd52f56b6d96c3a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659799762
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4);\n            } else if (c == '|') {\n           \
    \     result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long count = 0;\n        foreach (char c in music_string) {\n       \
    \     if (c == 'o') {\n                count++;\n            } else if (c == '|')\
    \ {\n                result.Add(count);\n                count = 0;\n        \
    \    }\n        }\n        result.Add(count);\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1087723f3de74ec6b9c7c6d817c2cf81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1087723f3de74ec6b9c7c6d817c2cf81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        char[] chars = music_string.ToCharArray();\n        for (int i = 0; i\
    \ < chars.Length; i++) {\n            if (chars[i] == 'o') {\n               \
    \ if (i + 1 < chars.Length && chars[i + 1] == '|') {\n                    result.Add(2);\n\
    \                    i++;\n                } else {\n                    result.Add(4);\n\
    \                }\n            } else if (chars[i] == '.') {\n              \
    \  result.Add(1);\n                i++;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <982243f4a10e452a898fa064f1370d63>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <982243f4a10e452a898fa064f1370d63>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                result.Add(4);\n            }\n            else if\
    \ (music_string[i] == '.') {\n                result.Add(1);\n            }\n\
    \            else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            switch (note) {\n                case \"o\":\n    \
    \                result.Add(4);\n                    break;\n                case\
    \ \"o|\":\n                    result.Add(2);\n                    break;\n  \
    \              case \".|\":\n                    result.Add(1);\n            \
    \        break;\n            }\n        }\n        return result;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\"\
    )).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <68f5c58507694710b85a47397b982d8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <68f5c58507694710b85a47397b982d8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        // TODO: Implement your solution here\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e7eda941f71488d8cad3c5504e298e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e7eda941f71488d8cad3c5504e298e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799761
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var note_length = new Dictionary<char, long>();\n        note_length['o']\
    \ = 4;\n        note_length['|'] = 2;\n        note_length['.'] = 1;\n       \
    \ var current_note = 0L;\n        foreach (var c in music_string) {\n        \
    \    if (c == ' ') {\n                result.Add(current_note);\n            \
    \    current_note = 0;\n            } else {\n                current_note +=\
    \ note_length[c];\n            }\n        }\n        result.Add(current_note);\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b17a7cbfafda492bb946b80d709e747e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b17a7cbfafda492bb946b80d709e747e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var res = new List<long>();\n   \
    \     var s = music_string.Split(' ');\n        foreach (var note in s) {\n  \
    \          if (note == \"o\") {\n                res.Add(4);\n            } else\
    \ if (note == \"o|\") {\n                res.Add(2);\n            } else if (note\
    \ == \".|\") {\n                res.Add(1);\n            }\n        }\n      \
    \  return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d26399f9bc0d41f699b1c0be0e7d7e54>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d26399f9bc0d41f699b1c0be0e7d7e54>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        char[] chars = music_string.ToCharArray();\n        for (int i = 0; i\
    \ < chars.Length; i++) {\n            if (chars[i] == 'o') {\n               \
    \ if (i + 1 < chars.Length && chars[i + 1] == '|') {\n                    result.Add(2);\n\
    \                    i++;\n                } else {\n                    result.Add(4);\n\
    \                }\n            } else if (chars[i] == '.') {\n              \
    \  if (i + 1 < chars.Length && chars[i + 1] == '|') {\n                    result.Add(1);\n\
    \                    i++;\n                } else {\n                    throw\
    \ new Exception(\"Invalid character\");\n                }\n            } else\
    \ {\n                throw new Exception(\"Invalid character\");\n           \
    \ }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3ce16c594e7f448baefdd3ed1f1c5e69>:0 \n\nUnhandled Exception:\n\
    System.Exception: Invalid character\n  at Problem.ParseMusic (System.String music_string)\
    \ [0x000a4] in <3ce16c594e7f448baefdd3ed1f1c5e69>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001b] in <3ce16c594e7f448baefdd3ed1f1c5e69>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.Exception: Invalid character\n  at Problem.ParseMusic (System.String\
    \ music_string) [0x000a4] in <3ce16c594e7f448baefdd3ed1f1c5e69>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x0001b] in <3ce16c594e7f448baefdd3ed1f1c5e69>:0 \n"
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    beats = 2L;\n        \
    \            i++;\n                }\n                else {\n               \
    \     beats = 4L;\n                }\n            }\n            else if (music_string[i]\
    \ == '.') {\n                beats = 1L;\n            }\n            else {\n\
    \                beats = 0L;\n            }\n            result.Add(beats);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9ebe85f961f483aa60759452dd20bca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9ebe85f961f483aa60759452dd20bca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799762
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                current_beat += beats[c];\n            } else {\n       \
    \         result.Add(current_beat);\n                current_beat = 0;\n     \
    \       }\n        }\n        result.Add(current_beat);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var current_beat = 0L;\n        var current_note = \"\";\n        foreach\
    \ (var c in music_string) {\n            if (c == ' ') {\n                if (current_note\
    \ == \"o\") {\n                    result.Add(4L);\n                } else if\
    \ (current_note == \"o|\") {\n                    result.Add(2L);\n          \
    \      } else if (current_note == \".|\") {\n                    result.Add(1L);\n\
    \                }\n                current_note = \"\";\n            } else {\n\
    \                current_note += c;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dfa34a7fdc564fa2855ef5032afb6d4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dfa34a7fdc564fa2855ef5032afb6d4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799763
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (c == ' ') {\n\
    \                result.Add(current_beat);\n                current_beat = 0;\n\
    \            } else {\n                current_beat += beats[c];\n           \
    \ }\n        }\n        result.Add(current_beat);\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b84e77ed2724f829c867bb15770e6f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b84e77ed2724f829c867bb15770e6f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var currentBeat = 0L;\n\
    \        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                currentBeat += beats[c];\n            } else {\n        \
    \        result.Add(currentBeat);\n                currentBeat = 0;\n        \
    \    }\n        }\n        result.Add(currentBeat);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0147029c67e14c80b62882512a7e655f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0147029c67e14c80b62882512a7e655f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799763
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current = 0L;\n\
    \        foreach (var c in music_string) {\n            if (c == ' ') {\n    \
    \            result.Add(current);\n                current = 0;\n            }\
    \ else {\n                current += beats[c];\n            }\n        }\n   \
    \     result.Add(current);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5fd9bb910ef340ee88f4874bc1a02ac5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5fd9bb910ef340ee88f4874bc1a02ac5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799763
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new List<long>();\n        var notes = new List<char>();\n\
    \        var beat = 0L;\n        var note = ' ';\n        var i = 0L;\n      \
    \  while (i < music_string.Length) {\n            if (music_string[(int)i] ==\
    \ 'o') {\n                beat = 4L;\n                note = 'o';\n          \
    \  } else if (music_string[(int)i] == '.') {\n                beat = 1L;\n   \
    \             note = '.';\n            } else if (music_string[(int)i] == '|')\
    \ {\n                beat = 2L;\n                note = '|';\n            } else\
    \ {\n                beat = 0L;\n                note = ' ';\n            }\n\
    \            if (note == 'o') {\n                beats.Add(beat);\n          \
    \      notes.Add(note);\n            } else if (note == '.') {\n             \
    \   beats.Add(beat);\n                notes.Add(note);\n            } else if\
    \ (note == '|') {\n                if (notes[(int)(notes.Count - 1L)] == 'o')\
    \ {\n                    beats[(int)(beats.Count - 1L)] = beats[(int)(beats.Count\
    \ - 1L)] + beat;\n                } else {\n                    beats.Add(beat);\n\
    \                    notes.Add(note);\n                }\n            } else {\n\
    \                beats.Add(beat);\n                notes.Add(note);\n        \
    \    }\n            i = i + 1L;\n        }\n        return beats;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\"\
    )).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f74720a15d8c4c0e92e400dff16bfedd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f74720a15d8c4c0e92e400dff16bfedd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799763
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var current_note = new StringBuilder();\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(ParseNote(current_note.ToString()));\n\
    \                current_note.Clear();\n            } else {\n               \
    \ current_note.Append(c);\n            }\n        }\n        result.Add(ParseNote(current_note.ToString()));\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprxirw0uu.cs(23,28): error CS0103: The name ''ParseNote'' does not exist
    in the current context

    /tmp/tmprxirw0uu.cs(29,20): error CS0103: The name ''ParseNote'' does not exist
    in the current context

    '
  timestamp: 1659799763
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        // Your code goes here\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new\
    \ List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var note in music_string.Split(' ')) {\n            switch (note)\
    \ {\n                case \"o\":\n                    result.Add(4);\n       \
    \             break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5be5e1d109a44872ae65816bc9fe8c1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5be5e1d109a44872ae65816bc9fe8c1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long> {\n            {'o', 4},\n   \
    \         {'|', 2},\n            {'.', 1}\n        };\n        var current = 0L;\n\
    \        foreach (var c in music_string) {\n            if (c == ' ') {\n    \
    \            result.Add(current);\n                current = 0;\n            }\
    \ else {\n                current += beats[c];\n            }\n        }\n   \
    \     result.Add(current);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77dbfd96aebb4b5fa41062d15494770c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77dbfd96aebb4b5fa41062d15494770c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799763
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            switch (c) {\n       \
    \         case 'o':\n                    result.Add(4);\n                    break;\n\
    \                case '|':\n                    result[result.Count - 1] /= 2;\n\
    \                    break;\n                case '.':\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e46109b44c4d4db786cad762a4bd6e47>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e46109b44c4d4db786cad762a4bd6e47>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            switch (music_string[i])\
    \ {\n                case 'o':\n                    result.Add(4);\n         \
    \           break;\n                case '|':\n                    result.Add(2);\n\
    \                    break;\n                case '.':\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <af23b05de0ee461fadcb8039d58d20c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <af23b05de0ee461fadcb8039d58d20c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799763
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        var current_note = 0L;\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(current_note);\n\
    \                current_note = 0;\n            } else {\n                current_note\
    \ += beats[c];\n            }\n        }\n        result.Add(current_note);\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5027dc7f18c54b84923fcae79eab06dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5027dc7f18c54b84923fcae79eab06dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799763
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        long beats = 0;\n        foreach (char c in music_string) {\n       \
    \     if (c == 'o') {\n                beats += 4;\n            } else if (c ==\
    \ '|') {\n                result.Add(beats);\n                beats = 0;\n   \
    \         }\n        }\n        result.Add(beats);\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bab4e998e72a4a7d940ee5280d53d091>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bab4e998e72a4a7d940ee5280d53d091>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>() {\n            {'o', 4},\n \
    \           {'|', 2},\n            {'.', 1}\n        };\n        var current_beat\
    \ = 0L;\n        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                result.Add(beats[c] - current_beat);\n                current_beat\
    \ = beats[c];\n            } else {\n                current_beat = 0;\n     \
    \       }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd0b861805d645bf9b1c4d0330750b89>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd0b861805d645bf9b1c4d0330750b89>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> res = new List<long>();\n\
    \        foreach (var c in music_string) {\n            switch (c) {\n       \
    \         case 'o':\n                    res.Add(4);\n                    break;\n\
    \                case '|':\n                    res[res.Count - 1] /= 2;\n   \
    \                 break;\n                case '.':\n                    res.Add(1);\n\
    \                    break;\n            }\n        }\n        return res;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c0b3fede0a34f7db4955c9e3845b13b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c0b3fede0a34f7db4955c9e3845b13b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799763
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var i = 0;\n        while (i < music_string.Length) {\n            var\
    \ c = music_string[i];\n            if (c == 'o') {\n                result.Add(4);\n\
    \                i++;\n            } else if (c == '.') {\n                result.Add(1);\n\
    \                i += 2;\n            } else {\n                throw new Exception(\"\
    Invalid character\");\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06992295cace4b7cbb459bd04f0f8bf3>:0 \n\nUnhandled Exception:\n\
    System.Exception: Invalid character\n  at Problem.ParseMusic (System.String music_string)\
    \ [0x0004b] in <06992295cace4b7cbb459bd04f0f8bf3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001b] in <06992295cace4b7cbb459bd04f0f8bf3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.Exception: Invalid character\n  at Problem.ParseMusic (System.String\
    \ music_string) [0x0004b] in <06992295cace4b7cbb459bd04f0f8bf3>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x0001b] in <06992295cace4b7cbb459bd04f0f8bf3>:0 \n"
  stdout: ''
  timestamp: 1659799763
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var s = music_string.Split(' ');\n        foreach (var x in s) {\n  \
    \          switch (x) {\n                case \"o\":\n                    result.Add(4);\n\
    \                    break;\n                case \"o|\":\n                  \
    \  result.Add(2);\n                    break;\n                case \".|\":\n\
    \                    result.Add(1);\n                    break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13c9ed4edf8a47c792c28a56e4b718eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13c9ed4edf8a47c792c28a56e4b718eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799763
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var beats = new List<long>();\n \
    \       var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var res = new List<long>();\n   \
    \     var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                res.Add(4);\n         \
    \   } else if (note == \"o|\") {\n                res.Add(2);\n            } else\
    \ if (note == \".|\") {\n                res.Add(1);\n            }\n        }\n\
    \        return res;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"\
    o o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n\
    \    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .|\
    \ .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    o| .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L,\
    \ (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f9b7f484e2645d48a01b186c738f8c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f9b7f484e2645d48a01b186c738f8c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        // Your code goes here\n        return\
    \ null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00010] in <3201633e7dd54505b5b14bc131e596c6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00010] in <3201633e7dd54505b5b14bc131e596c6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        // Your code here\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n\
    \    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .|\
    \ .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n\
    \    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L,\
    \ (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L,\
    \ (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c4185497c6d46ed95fc837eeccb4cc3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c4185497c6d46ed95fc837eeccb4cc3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799763
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        List<long> result = new List<long>();\n\
    \        foreach (var ch in music_string) {\n            if (ch == 'o') {\n  \
    \              result.Add(4);\n            } else if (ch == '|') {\n         \
    \       result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3daa29f862c9444bb55c6fa4e4e5af7d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3daa29f862c9444bb55c6fa4e4e5af7d>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799763
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new\
    \ List<long>(new long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L,\
    \ (long)1L, (long)1L, (long)1L, (long)4L, (long)4L}))\n    public static List<long>\
    \ ParseMusic(string music_string) {\n        var result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
    \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
    .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
    \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
    \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
    \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o\
    \ o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L,\
    \ (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.ParseMusic (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608

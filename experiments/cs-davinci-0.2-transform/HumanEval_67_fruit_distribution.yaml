name: HumanEval_67_fruit_distribution
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // In this task, you will be given a string that represents a number\
  \ of apples and oranges \n    // that are distributed in a basket of fruit this\
  \ basket contains \n    // apples, oranges, and mango fruits. Given the string that\
  \ represents the total number of \n    // the oranges and apples and an integer\
  \ that represent the total number of the fruits \n    // in the basket return the\
  \ number of the mango fruits in the basket.\n    // for examble:\n    // >>> FruitDistribution((\"\
  5 apples and 6 oranges\"), (19L))\n    // (8L)\n    // >>> FruitDistribution((\"\
  0 apples and 1 oranges\"), (3L))\n    // (2L)\n    // >>> FruitDistribution((\"\
  2 apples and 3 oranges\"), (100L))\n    // (95L)\n    // >>> FruitDistribution((\"\
  100 apples and 1 oranges\"), (120L))\n    // (19L)\n    public static long FruitDistribution(string\
  \ s, long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FruitDistribution((\"\
  5 apples and 6 oranges\"), (19L)) == (8L));\n    Debug.Assert(FruitDistribution((\"\
  5 apples and 6 oranges\"), (21L)) == (10L));\n    Debug.Assert(FruitDistribution((\"\
  0 apples and 1 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
  1 apples and 0 oranges\"), (3L)) == (2L));\n    Debug.Assert(FruitDistribution((\"\
  2 apples and 3 oranges\"), (100L)) == (95L));\n    Debug.Assert(FruitDistribution((\"\
  2 apples and 3 oranges\"), (5L)) == (0L));\n    Debug.Assert(FruitDistribution((\"\
  1 apples and 100 oranges\"), (120L)) == (19L));\n    }\n\n}\n"
completions: ["        long apples = 0;\n        long oranges = 0;\n        string[]\
    \ words = s.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n  \
    \          if (words[i] == \"apples\") {\n                apples = long.Parse(words[i\
    \ - 1]);\n            }\n            if (words[i] == \"oranges\") {\n        \
    \        oranges = long.Parse(words[i - 1]);\n            }\n        }\n     \
    \   return n - (apples + oranges);", "        var arr = s.Split(' ');\n      \
    \  var apples = int.Parse(arr[0]);\n        var oranges = int.Parse(arr[3]);\n\
    \        return n - apples - oranges;", "        // Write your code here\n   \
    \     return 0;", "        var fruit = s.Split(new string[] { \" and \" }, StringSplitOptions.None);\n\
    \        var apples = long.Parse(fruit[0].Split(' ')[0]);\n        var oranges\
    \ = long.Parse(fruit[1].Split(' ')[0]);\n        return n - apples - oranges;",
  "        // your code goes here\n        return 0;", "        string[] s1 = s.Split('\
    \ ');\n        long a = long.Parse(s1[0]);\n        long o = long.Parse(s1[3]);\n\
    \        return n - a - o;", "        // Write your code here\n        return\
    \ 0;", "        var fruits = s.Split(' ');\n        var apples = long.Parse(fruits[0]);\n\
    \        var oranges = long.Parse(fruits[3]);\n        return n - apples - oranges;",
  "        // Write your code here\n        return 0;", "        // Your code goes\
    \ here\n        return 0;", "        var split = s.Split(' ');\n        var apples\
    \ = long.Parse(split[0]);\n        var oranges = long.Parse(split[3]);\n     \
    \   return n - apples - oranges;", "        // Your code goes here\n        return\
    \ 0;", "        long apples = long.Parse(s.Split(\" \")[0]);\n        long oranges\
    \ = long.Parse(s.Split(\" \")[3]);\n        return n - apples - oranges;", " \
    \       // Your code goes here\n        return 0;", "        var s_split = s.Split(\"\
    \ \");\n        var num_apples = long.Parse(s_split[0]);\n        var num_oranges\
    \ = long.Parse(s_split[3]);\n        return n - num_apples - num_oranges;", " \
    \       string[] arr = s.Split(' ');\n        long apples = long.Parse(arr[0]);\n\
    \        long oranges = long.Parse(arr[3]);\n        return n - apples - oranges;",
  "        // Your code goes here\n        return 0;", "        var parts = s.Split('\
    \ ');\n        var apples = long.Parse(parts[0]);\n        var oranges = long.Parse(parts[3]);\n\
    \        return n - apples - oranges;", "        var split = s.Split(' ');\n \
    \       var apples = int.Parse(split[0]);\n        var oranges = int.Parse(split[3]);\n\
    \        return n - apples - oranges;", "        var fruit = s.Split(\" and \"\
    );\n        var apples = int.Parse(fruit[0].Split(\" \")[0]);\n        var oranges\
    \ = int.Parse(fruit[1].Split(\" \")[0]);\n        return n - apples - oranges;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_75_is_multiply_prime
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function that returns true if the given number is the\
  \ multiplication of 3 prime numbers\n    // and false otherwise.\n    // Knowing\
  \ that (a) is less then 100. \n    // Example:\n    // >>> IsMultiplyPrime((30L))\n\
  \    // (true)\n    // 30 = 2 * 3 * 5\n    public static bool IsMultiplyPrime(long\
  \ a) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsMultiplyPrime((5L))\
  \ == (false));\n    Debug.Assert(IsMultiplyPrime((30L)) == (true));\n    Debug.Assert(IsMultiplyPrime((8L))\
  \ == (true));\n    Debug.Assert(IsMultiplyPrime((10L)) == (false));\n    Debug.Assert(IsMultiplyPrime((125L))\
  \ == (true));\n    Debug.Assert(IsMultiplyPrime((105L)) == (true));\n    Debug.Assert(IsMultiplyPrime((126L))\
  \ == (false));\n    Debug.Assert(IsMultiplyPrime((729L)) == (false));\n    Debug.Assert(IsMultiplyPrime((891L))\
  \ == (false));\n    Debug.Assert(IsMultiplyPrime((1001L)) == (true));\n    }\n\n\
  }\n"
completions: ["        // Write your code here\n        return false;", "        //\
    \ Your code goes here\n        return false;", "        // Your code here\n  \
    \      return false;", "        // Write your code here\n        return false;",
  "        // Your code here\n        return false;", "        if (a == 1) {\n   \
    \         return false;\n        }\n        if (a == 2) {\n            return\
    \ true;\n        }\n        if (a % 2 == 0) {\n            return false;\n   \
    \     }\n        for (int i = 3; i < a; i += 2) {\n            if (a % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        // Your code here\n        return false;", "        // Write your code\
    \ here\n        return false;", "        // Your code here\n        return false;",
  "        var primes = new List<long>();\n        for (long i = 2; i <= a; i++) {\n\
    \            if (IsPrime(i)) {\n                primes.Add(i);\n            }\n\
    \        }\n        for (int i = 0; i < primes.Count; i++) {\n            for\
    \ (int j = i; j < primes.Count; j++) {\n                for (int k = j; k < primes.Count;\
    \ k++) {\n                    if (primes[i] * primes[j] * primes[k] == a) {\n\
    \                        return true;\n                    }\n               \
    \ }\n            }\n        }\n        return false;", "        // TODO: Write\
    \ your code here\n        return false;", "        // TODO: implement this function\n\
    \        return false;", "        // TODO: Implement this function\n        return\
    \ false;", "        // Write your code here\n        return false;", "       \
    \ // Write your code here\n        return false;", "        // Your code here\n\
    \        return false;", "        // Write your code here\n        return false;",
  "        // TODO: Implement this function\n        return false;", "        // Write\
    \ your code here\n        return false;", "        // Your code here\n       \
    \ return false;"]
stop_tokens:
- "\n    }\n"
